var N = null;var searchIndex = {};
searchIndex["aho_corasick"]={"doc":"An implementation of the Aho-Corasick string search algorithm.","items":[[3,"Match","aho_corasick","Records a match in the search text.",N,N],[12,"pati","","The pattern index.",0,N],[12,"start","","The starting byte offset of the match in the search text.",0,N],[12,"end","","The ending byte offset of the match in the search text.",0,N],[3,"Matches","","An iterator of non-overlapping matches for in-memory text.",N,N],[3,"MatchesOverlapping","","An iterator of overlapping matches for in-memory text.",N,N],[3,"StreamMatches","","An iterator of non-overlapping matches for streaming text.",N,N],[3,"StreamMatchesOverlapping","","An iterator of overlapping matches for streaming text.",N,N],[3,"FullAcAutomaton","","A complete Aho-Corasick automaton.",N,N],[3,"AcAutomaton","","An Aho-Corasick finite automaton.",N,N],[3,"Dense","","State transitions that can be stored either sparsely or densely.",N,N],[3,"Sparse","","State transitions that are always sparse.",N,N],[11,"clone","","",0,[[["self"]],["match"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,N],[11,"eq","","",0,[[["self"],["match"]],["bool"]]],[11,"ne","","",0,[[["self"],["match"]],["bool"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"next","","",1,[[["self"]],["option",["match"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"next","","",2,[[["self"]],["option",["result"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"next","","",3,[[["self"]],["option",["match"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"next","","",4,[[["self"]],["option",["result"]]]],[11,"clone","","",5,[[["self"]],["fullacautomaton"]]],[11,"new","","Build a new expanded Aho-Corasick automaton from an existing Aho-Corasick automaton.",5,[[["acautomaton"]],["fullacautomaton"]]],[11,"next_state","","",5,[[["self"],["stateidx"],["u8"]],["stateidx"]]],[11,"get_match","","",5,[[["self"],["stateidx"],["usize"],["usize"]],["match"]]],[11,"has_match","","",5,[[["self"],["stateidx"],["usize"]],["bool"]]],[11,"start_bytes","","",5,N],[11,"patterns","","",5,N],[11,"pattern","","",5,[[["self"],["usize"]],["p"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[6,"StateIdx","","The integer type used for the state index.",N,N],[8,"Automaton","","An abstraction over automatons and their corresponding iterators. The type parameter `P` is the type of the pattern that was used to construct this Automaton.",N,N],[10,"next_state","","Return the next state given the current state and next character.",6,[[["self"],["stateidx"],["u8"]],["stateidx"]]],[10,"has_match","","Return true if and only if the given state and current pattern index indicate a match.",6,[[["self"],["stateidx"],["usize"]],["bool"]]],[10,"get_match","","Build a match given the current state, pattern index and input index.",6,[[["self"],["stateidx"],["usize"],["usize"]],["match"]]],[10,"start_bytes","","Return the set of bytes that have transitions in the root state.",6,N],[10,"patterns","","Returns all of the patterns matched by this automaton.",6,N],[10,"pattern","","Returns the pattern indexed at `i`.",6,[[["self"],["usize"]],["p"]]],[11,"len","","Return the number of patterns in the automaton.",6,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the automaton has no patterns.",6,[[["self"]],["bool"]]],[11,"find","","Returns an iterator of non-overlapping matches in `s`.",6,[[["self"],["q"]],["matches"]]],[11,"find_overlapping","","Returns an iterator of overlapping matches in `s`.",6,[[["self"],["q"]],["matchesoverlapping"]]],[11,"stream_find","","Returns an iterator of non-overlapping matches in the given reader.",6,[[["self"],["r"]],["streammatches"]]],[11,"stream_find_overlapping","","Returns an iterator of overlapping matches in the given reader.",6,[[["self"],["r"]],["streammatchesoverlapping"]]],[8,"Transitions","","An abstraction over state transition strategies.",N,N],[10,"new","","Return a new state at the given depth.",7,[[["u32"]],["self"]]],[10,"goto","","Return the next state index given the next character.",7,[[["self"],["u8"]],["stateidx"]]],[10,"set_goto","","Set the next state index for the character given.",7,[[["self"],["u8"],["stateidx"]]]],[10,"heap_bytes","","The memory use in bytes (on the heap) of this set of transitions.",7,[[["self"]],["usize"]]],[11,"for_each_transition","","Iterates over each state",7,[[["self"],["f"]]]],[11,"for_each_ok_transition","","Iterates over each non-fail state",7,[[["self"],["f"]]]],[11,"clone","","",8,[[["self"]],["acautomaton"]]],[11,"new","","Create a new automaton from an iterator of patterns.",8,[[["i"]],["acautomaton",["dense"]]]],[11,"with_transitions","","Create a new automaton from an iterator of patterns.",8,[[["i"]],["acautomaton"]]],[11,"into_full","","Build out the entire automaton into a single matrix.",8,[[["self"]],["fullacautomaton"]]],[11,"next_state","","",8,[[["self"],["stateidx"],["u8"]],["stateidx"]]],[11,"get_match","","",8,[[["self"],["stateidx"],["usize"],["usize"]],["match"]]],[11,"has_match","","",8,[[["self"],["stateidx"],["usize"]],["bool"]]],[11,"start_bytes","","",8,N],[11,"patterns","","",8,N],[11,"pattern","","",8,[[["self"],["usize"]],["p"]]],[11,"clone","","",9,[[["self"]],["dense"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"new","","",9,[[["u32"]],["dense"]]],[11,"goto","","",9,[[["self"],["u8"]],["stateidx"]]],[11,"set_goto","","",9,[[["self"],["u8"],["stateidx"]]]],[11,"heap_bytes","","",9,[[["self"]],["usize"]]],[11,"for_each_transition","","",9,[[["self"],["f"]]]],[11,"for_each_ok_transition","","",9,[[["self"],["f"]]]],[11,"clone","","",10,[[["self"]],["sparse"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"new","","",10,[[["u32"]],["sparse"]]],[11,"goto","","",10,[[["self"],["u8"]],["stateidx"]]],[11,"set_goto","","",10,[[["self"],["u8"],["stateidx"]]]],[11,"heap_bytes","","",10,[[["self"]],["usize"]]],[11,"from_iter","","Create an automaton from an iterator of strings.",8,[[["t"]],["acautomaton"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"len","","Return the number of patterns in the automaton.",6,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the automaton has no patterns.",6,[[["self"]],["bool"]]],[11,"find","","Returns an iterator of non-overlapping matches in `s`.",6,[[["self"],["q"]],["matches"]]],[11,"find_overlapping","","Returns an iterator of overlapping matches in `s`.",6,[[["self"],["q"]],["matchesoverlapping"]]],[11,"stream_find","","Returns an iterator of non-overlapping matches in the given reader.",6,[[["self"],["r"]],["streammatches"]]],[11,"stream_find_overlapping","","Returns an iterator of overlapping matches in the given reader.",6,[[["self"],["r"]],["streammatchesoverlapping"]]]],"paths":[[3,"Match"],[3,"Matches"],[3,"StreamMatches"],[3,"MatchesOverlapping"],[3,"StreamMatchesOverlapping"],[3,"FullAcAutomaton"],[8,"Automaton"],[8,"Transitions"],[3,"AcAutomaton"],[3,"Dense"],[3,"Sparse"]]};
searchIndex["ansi_term"]={"doc":"This is a library for controlling colours and formatting, such as red bold text or blue underlined text, on ANSI terminals.","items":[[3,"Prefix","ansi_term","Like `ANSIString`, but only displays the style prefix.",N,N],[3,"Infix","","Like `ANSIString`, but only displays the difference between two styles.",N,N],[3,"Suffix","","Like `ANSIString`, but only displays the style suffix.",N,N],[3,"Style","","A style is a collection of properties that can format a string using ANSI escape codes.",N,N],[12,"foreground","","The style's foreground colour, if it has one.",0,N],[12,"background","","The style's background colour, if it has one.",0,N],[12,"is_bold","","Whether this style is bold.",0,N],[12,"is_dimmed","","Whether this style is dimmed.",0,N],[12,"is_italic","","Whether this style is italic.",0,N],[12,"is_underline","","Whether this style is underlined.",0,N],[12,"is_blink","","Whether this style is blinking.",0,N],[12,"is_reverse","","Whether this style has reverse colours.",0,N],[12,"is_hidden","","Whether this style is hidden.",0,N],[12,"is_strikethrough","","Whether this style is struckthrough.",0,N],[3,"ANSIGenericString","","An `ANSIGenericString` includes a generic string type and a `Style` to display that string.  `ANSIString` and `ANSIByteString` are aliases for this type on `str` and `[u8]`, respectively.",N,N],[3,"ANSIGenericStrings","","A set of `ANSIGenericString`s collected together, in order to be written with a minimum of control characters.",N,N],[12,"0","","",1,N],[4,"Colour","","A colour is one specific type of ANSI escape code, and can refer to either the foreground or background colour.",N,N],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",2,N],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",2,N],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",2,N],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",2,N],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",2,N],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",2,N],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",2,N],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",2,N],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour terminal environments.",2,N],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",2,N],[4,"Color","","A colour is one specific type of ANSI escape code, and can refer to either the foreground or background colour.",N,N],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",2,N],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",2,N],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",2,N],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",2,N],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",2,N],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",2,N],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",2,N],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",2,N],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour terminal environments.",2,N],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",2,N],[5,"ANSIStrings","","A function to construct an `ANSIStrings` instance.",N,N],[5,"ANSIByteStrings","","A function to construct an `ANSIByteStrings` instance.",N,N],[11,"clone","","",3,[[["self"]],["prefix"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"clone","","",4,[[["self"]],["infix"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"clone","","",5,[[["self"]],["suffix"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"prefix","","The prefix for this style.",0,[[["self"]],["prefix"]]],[11,"infix","","The infix between this style and another.",0,[[["self"],["style"]],["infix"]]],[11,"suffix","","The suffix for this style.",0,[[["self"]],["suffix"]]],[11,"prefix","","The prefix for this colour.",2,[[["self"]],["prefix"]]],[11,"infix","","The infix between this colour and another.",2,[[["self"],["colour"]],["infix"]]],[11,"suffix","","The suffix for this colour.",2,[[["self"]],["suffix"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["style"]],["bool"]]],[11,"ne","","",0,[[["self"],["style"]],["bool"]]],[11,"clone","","",0,[[["self"]],["style"]]],[11,"new","","Creates a new Style with no differences.",0,[[],["style"]]],[11,"bold","","Returns a `Style` with the bold property set.",0,[[["self"]],["style"]]],[11,"dimmed","","Returns a `Style` with the dimmed property set.",0,[[["self"]],["style"]]],[11,"italic","","Returns a `Style` with the italic property set.",0,[[["self"]],["style"]]],[11,"underline","","Returns a `Style` with the underline property set.",0,[[["self"]],["style"]]],[11,"blink","","Returns a `Style` with the blink property set.",0,[[["self"]],["style"]]],[11,"reverse","","Returns a `Style` with the reverse property set.",0,[[["self"]],["style"]]],[11,"hidden","","Returns a `Style` with the hidden property set.",0,[[["self"]],["style"]]],[11,"strikethrough","","Returns a `Style` with the hidden property set.",0,[[["self"]],["style"]]],[11,"fg","","Returns a `Style` with the foreground colour property set.",0,[[["self"],["colour"]],["style"]]],[11,"on","","Returns a `Style` with the background colour property set.",0,[[["self"],["colour"]],["style"]]],[11,"is_plain","","Return true if this `Style` has no actual styles, and can be written without any control characters.",0,[[["self"]],["bool"]]],[11,"default","","Returns a style with no properties set. Formatting text using this style returns the exact same text.",0,[[],["style"]]],[11,"eq","","",2,[[["self"],["colour"]],["bool"]]],[11,"ne","","",2,[[["self"],["colour"]],["bool"]]],[11,"clone","","",2,[[["self"]],["colour"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"normal","","Return a `Style` with the foreground colour set to this colour.",2,[[["self"]],["style"]]],[11,"bold","","Returns a `Style` with the bold property set.",2,[[["self"]],["style"]]],[11,"dimmed","","Returns a `Style` with the dimmed property set.",2,[[["self"]],["style"]]],[11,"italic","","Returns a `Style` with the italic property set.",2,[[["self"]],["style"]]],[11,"underline","","Returns a `Style` with the underline property set.",2,[[["self"]],["style"]]],[11,"blink","","Returns a `Style` with the blink property set.",2,[[["self"]],["style"]]],[11,"reverse","","Returns a `Style` with the reverse property set.",2,[[["self"]],["style"]]],[11,"hidden","","Returns a `Style` with the hidden property set.",2,[[["self"]],["style"]]],[11,"strikethrough","","Returns a `Style` with the strikethrough property set.",2,[[["self"]],["style"]]],[11,"on","","Returns a `Style` with the background colour property set.",2,[[["self"],["colour"]],["style"]]],[11,"from","","You can turn a `Colour` into a `Style` with the foreground colour set with the `From` trait.",0,[[["colour"]],["style"]]],[11,"eq","","",6,[[["self"],["ansigenericstring"]],["bool"]]],[11,"ne","","",6,[[["self"],["ansigenericstring"]],["bool"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"clone","","",6,[[["self"]],["ansigenericstring"]]],[11,"from","","",6,[[["i"]],["ansigenericstring"]]],[11,"deref","","",6,[[["self"]],["s"]]],[11,"paint","","Paints the given text with this colour, returning an ANSI string.",0,[[["self"],["i"]],["ansigenericstring"]]],[11,"paint","","Paints the given text with this colour, returning an ANSI string. This is a short-cut so you don’t have to use `Blue.normal()` just to get blue text.",2,[[["self"],["i"]],["ansigenericstring"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[6,"ANSIString","","An ANSI String is a string coupled with the `Style` to display it in a terminal.",N,N],[6,"ANSIByteString","","An `ANSIByteString` represents a formatted series of bytes.  Use `ANSIByteString` when styling text with an unknown encoding.",N,N],[6,"ANSIStrings","","A set of `ANSIString`s collected together, in order to be written with a minimum of control characters.",N,N],[6,"ANSIByteStrings","","A set of `ANSIByteString`s collected together, in order to be written with a minimum of control characters.",N,N],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"write_to","","Write an `ANSIByteString` to an `io::Write`.  This writes the escape sequences for the associated `Style` around the bytes.",8,[[["self"],["w"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"write_to","","Write `ANSIByteStrings` to an `io::Write`.  This writes the minimal escape sequences for the associated `Style`s around each set of bytes.",10,[[["self"],["w"]],["result"]]]],"paths":[[3,"Style"],[3,"ANSIGenericStrings"],[4,"Colour"],[3,"Prefix"],[3,"Infix"],[3,"Suffix"],[3,"ANSIGenericString"],[6,"ANSIString"],[6,"ANSIByteString"],[6,"ANSIStrings"],[6,"ANSIByteStrings"]]};
searchIndex["arrayvec"]={"doc":"arrayvec provides the types `ArrayVec` and `ArrayString`:  array-backed vector and string types, which store their contents inline.","items":[[3,"ArrayString","arrayvec","A string with a fixed capacity.",N,N],[3,"CapacityError","","Error value indicating insufficient capacity",N,N],[3,"ArrayVec","","A vector with a fixed capacity.",N,N],[3,"IntoIter","","By-value iterator for `ArrayVec`.",N,N],[3,"Drain","","A draining iterator for `ArrayVec`.",N,N],[11,"default","","Return an empty `ArrayString`",0,[[],["arraystring"]]],[11,"new","","Create a new empty `ArrayString`.",0,[[],["arraystring"]]],[11,"from","","Create a new `ArrayString` from a `str`.",0,[[["str"]],["result",["capacityerror"]]]],[11,"from_byte_string","","Create a new `ArrayString` from a byte string literal.",0,[[["a"]],["result",["utf8error"]]]],[11,"capacity","","Return the capacity of the `ArrayString`.",0,[[["self"]],["usize"]]],[11,"is_full","","Return if the `ArrayString` is completely filled.",0,[[["self"]],["bool"]]],[11,"push","","Adds the given char to the end of the string.",0,[[["self"],["char"]]]],[11,"try_push","","Adds the given char to the end of the string.",0,[[["self"],["char"]],["result",["capacityerror"]]]],[11,"push_str","","Adds the given string slice to the end of the string.",0,[[["self"],["str"]]]],[11,"try_push_str","","Adds the given string slice to the end of the string.",0,[[["self"],["str"]],["result",["capacityerror"]]]],[11,"pop","","Removes the last character from the string and returns it.",0,[[["self"]],["option",["char"]]]],[11,"truncate","","Shortens this `ArrayString` to the specified length.",0,[[["self"],["usize"]]]],[11,"remove","","Removes a `char` from this `ArrayString` at a byte position and returns it.",0,[[["self"],["usize"]],["char"]]],[11,"clear","","Make the string empty.",0,[[["self"]]]],[11,"set_len","","Set the strings’s length.",0,[[["self"],["usize"]]]],[11,"as_str","","Return a string slice of the whole `ArrayString`.",0,[[["self"]],["str"]]],[11,"deref","","",0,[[["self"]],["str"]]],[11,"deref_mut","","",0,[[["self"]],["str"]]],[11,"eq","","",0,[[["self"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["str"]],["bool"]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"borrow","","",0,[[["self"]],["str"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"write_char","","",0,[[["self"],["char"]],["result"]]],[11,"write_str","","",0,[[["self"],["str"]],["result"]]],[11,"clone","","",0,[[["self"]],["arraystring"]]],[11,"clone_from","","",0,[[["self"],["self"]]]],[11,"partial_cmp","","",0,[[["self"],["self"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["self"]],["bool"]]],[11,"le","","",0,[[["self"],["self"]],["bool"]]],[11,"gt","","",0,[[["self"],["self"]],["bool"]]],[11,"ge","","",0,[[["self"],["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["str"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["str"]],["bool"]]],[11,"le","","",0,[[["self"],["str"]],["bool"]]],[11,"gt","","",0,[[["self"],["str"]],["bool"]]],[11,"ge","","",0,[[["self"],["str"]],["bool"]]],[11,"cmp","","",0,[[["self"],["self"]],["ordering"]]],[11,"clone","","",1,[[["self"]],["capacityerror"]]],[11,"cmp","","",1,[[["self"],["capacityerror"]],["ordering"]]],[11,"eq","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"ne","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["capacityerror"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"le","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"gt","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"ge","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"new","","Create a new `CapacityError` from `element`.",1,[[["t"]],["capacityerror"]]],[11,"element","","Extract the overflowing element",1,[[["self"]],["t"]]],[11,"simplify","","Convert into a `CapacityError` that does not carry an element.",1,[[["self"]],["capacityerror"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[8,"Array","","Trait for fixed size arrays.",N,N],[16,"Item","","The array’s element type",2,N],[8,"RangeArgument","","`RangeArgument` is implemented by Rust's built-in range types, produced by range syntax like `..`, `a..`, `..b` or `c..d`.",N,N],[11,"start","","Start index (inclusive)",3,[[["self"]],["option",["usize"]]]],[11,"end","","End index (exclusive)",3,[[["self"]],["option",["usize"]]]],[11,"drop","","",4,[[["self"]]]],[11,"new","","Create a new empty `ArrayVec`.",4,[[],["arrayvec"]]],[11,"len","","Return the number of elements in the `ArrayVec`.",4,[[["self"]],["usize"]]],[11,"capacity","","Return the capacity of the `ArrayVec`.",4,[[["self"]],["usize"]]],[11,"is_full","","Return if the `ArrayVec` is completely filled.",4,[[["self"]],["bool"]]],[11,"push","","Push `element` to the end of the vector.",4,N],[11,"try_push","","Push `element` to the end of the vector.",4,N],[11,"push_unchecked","","Push `element` to the end of the vector without checking the capacity.",4,N],[11,"insert","","Insert `element` at position `index`.",4,N],[11,"try_insert","","Insert `element` at position `index`.",4,N],[11,"pop","","Remove the last element in the vector and return it.",4,[[["self"]],["option"]]],[11,"swap_remove","","Remove the element at `index` and swap the last element into its place.",4,N],[11,"swap_pop","","Remove the element at `index` and swap the last element into its place.",4,[[["self"],["usize"]],["option"]]],[11,"remove","","Remove the element at `index` and shift down the following elements.",4,N],[11,"pop_at","","Remove the element at `index` and shift down the following elements.",4,[[["self"],["usize"]],["option"]]],[11,"truncate","","Shortens the vector, keeping the first `len` elements and dropping the rest.",4,[[["self"],["usize"]]]],[11,"clear","","Remove all elements in the vector.",4,[[["self"]]]],[11,"retain","","Retains only the elements specified by the predicate.",4,[[["self"],["f"]]]],[11,"set_len","","Set the vector’s length without dropping or moving out elements",4,[[["self"],["usize"]]]],[11,"drain","","Create a draining iterator that removes the specified range in the vector and yields the removed items from start to end. The element range is removed even if the iterator is not consumed until the end.",4,[[["self"],["r"]],["drain"]]],[11,"into_inner","","Return the inner fixed size array, if it is full to its capacity.",4,[[["self"]],["result"]]],[11,"dispose","","Dispose of `self` without the overwriting that is needed in Drop.",4,[[["self"]]]],[11,"as_slice","","Return a slice containing all elements of the vector.",4,N],[11,"as_mut_slice","","Return a mutable slice containing all elements of the vector.",4,N],[11,"deref","","",4,N],[11,"deref_mut","","",4,N],[11,"from","","",4,[[["a"]],["self"]]],[11,"into_iter","","",4,[[["self"]],["intoiter"]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,N],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"drop","","",5,[[["self"]]]],[11,"next","","",6,[[["self"]],["option"]]],[11,"size_hint","","",6,N],[11,"next_back","","",6,[[["self"]],["option"]]],[11,"drop","","",6,[[["self"]]]],[11,"extend","","",4,[[["self"],["t"]]]],[11,"from_iter","","",4,[[["t"]],["self"]]],[11,"clone","","",4,[[["self"]],["self"]]],[11,"clone_from","","",4,[[["self"],["self"]]]],[11,"hash","","",4,[[["self"],["h"]]]],[11,"eq","","",4,[[["self"],["self"]],["bool"]]],[11,"eq","","",4,N],[11,"borrow","","",4,N],[11,"borrow_mut","","",4,N],[11,"as_ref","","",4,N],[11,"as_mut","","",4,N],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"default","","Return an empty array",4,[[],["arrayvec"]]],[11,"partial_cmp","","",4,[[["self"],["arrayvec"]],["option",["ordering"]]]],[11,"lt","","",4,[[["self"],["self"]],["bool"]]],[11,"le","","",4,[[["self"],["self"]],["bool"]]],[11,"ge","","",4,[[["self"],["self"]],["bool"]]],[11,"gt","","",4,[[["self"],["self"]],["bool"]]],[11,"cmp","","",4,[[["self"],["arrayvec"]],["ordering"]]],[11,"start","","Start index (inclusive)",3,[[["self"]],["option",["usize"]]]],[11,"end","","End index (exclusive)",3,[[["self"]],["option",["usize"]]]]],"paths":[[3,"ArrayString"],[3,"CapacityError"],[8,"Array"],[8,"RangeArgument"],[3,"ArrayVec"],[3,"IntoIter"],[3,"Drain"]]};
searchIndex["atty"]={"doc":"atty is a simple utility that answers one question > is this a tty?","items":[[4,"Stream","atty","possible stream sources",N,N],[13,"Stdout","","",0,N],[13,"Stderr","","",0,N],[13,"Stdin","","",0,N],[5,"is","","returns true if this is a tty",N,[[["stream"]],["bool"]]],[5,"isnt","","returns true if this is not a tty",N,[[["stream"]],["bool"]]],[11,"clone","","",0,[[["self"]],["stream"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[4,"Stream"]]};
searchIndex["bitflags"]={"doc":"A typesafe bitmask flag generator useful for sets of C-style bitmask flags. It can be used for creating typesafe wrappers around C APIs.","items":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",N,N]],"paths":[]};
searchIndex["blake"]={"doc":"An implementation of the BLAKE hash function, via FFI to reference implementation.","items":[[3,"Blake","blake","Hashing state for multiple data sets.",N,N],[4,"BlakeError","","Some functions in the library can fail, this enum represents all the possible ways they can.",N,N],[13,"Fail","","Generic failure state",0,N],[13,"BadHashbitlen","","`hashbitlen` passed to `Blake::new()` or `hash()` incorrect",0,N],[5,"hash","","Hash all data in one fell swoop.",N,N],[6,"Result","","Helper result type containing `BlakeError`.",N,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["blakeerror"]]],[11,"hash","","",0,N],[11,"eq","","",0,[[["self"],["blakeerror"]],["bool"]]],[11,"new","","Create a new hash state and initialise it with the given bit length.",1,[[["i32"]],["result",["blake"]]]],[11,"add_salt","","Add a salt to the hash function.",1,N],[11,"update","","Append the provided data to the hash function.",1,N],[11,"finalise","","Finish hashing and store the output result in the provided space.",1,N],[11,"write","","",1,N],[11,"flush","","",1,[[["self"]],["result"]]],[11,"drop","","",1,[[["self"]]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"from","","Passing incorrect error values yields unspecified behaviour.",0,[[["i32"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[4,"BlakeError"],[3,"Blake"]]};
searchIndex["blake2_rfc"]={"doc":"A pure Rust implementation of BLAKE2 based on RFC 7693.","items":[[5,"selftest","blake2_rfc","Runs the self-test for both BLAKE2b and BLAKE2s.",N,[[]]],[0,"blake2b","","The BLAKE2b hash function.",N,N],[3,"Blake2bResult","blake2_rfc::blake2b","Container for a hash result.",N,N],[3,"Blake2b","","State context.",N,N],[5,"blake2b","","Convenience function for all-in-one computation.",N,N],[5,"selftest","","Runs the self-test for this hash function.",N,[[]]],[11,"clone","","",0,[[["self"]],["blake2bresult"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"as_bytes","","Returns the contained hash result as a byte string.",0,N],[11,"len","","Returns the length of the hash result.",0,[[["self"]],["usize"]]],[11,"as_ref","","",0,N],[11,"eq","","",0,[[["self"],["self"]],["bool"]]],[11,"eq","","",0,N],[11,"clone","","",1,[[["self"]],["blake2b"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new hashing context without a key.",1,[[["usize"]],["self"]]],[11,"with_key","","Creates a new hashing context with a key.",1,N],[11,"update","","Updates the hashing context with more data.",1,N],[11,"finalize","","Consumes the hashing context and returns the resulting hash.",1,[[["self"]],["blake2bresult"]]],[11,"write","","",1,N],[11,"flush","","",1,[[["self"]],["result"]]],[0,"blake2s","blake2_rfc","The BLAKE2s hash function.",N,N],[3,"Blake2sResult","blake2_rfc::blake2s","Container for a hash result.",N,N],[3,"Blake2s","","State context.",N,N],[5,"blake2s","","Convenience function for all-in-one computation.",N,N],[5,"selftest","","Runs the self-test for this hash function.",N,[[]]],[11,"clone","","",2,[[["self"]],["blake2sresult"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"as_bytes","","Returns the contained hash result as a byte string.",2,N],[11,"len","","Returns the length of the hash result.",2,[[["self"]],["usize"]]],[11,"as_ref","","",2,N],[11,"eq","","",2,[[["self"],["self"]],["bool"]]],[11,"eq","","",2,N],[11,"clone","","",3,[[["self"]],["blake2s"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new hashing context without a key.",3,[[["usize"]],["self"]]],[11,"with_key","","Creates a new hashing context with a key.",3,N],[11,"update","","Updates the hashing context with more data.",3,N],[11,"finalize","","Consumes the hashing context and returns the resulting hash.",3,[[["self"]],["blake2sresult"]]],[11,"write","","",3,N],[11,"flush","","",3,[[["self"]],["result"]]]],"paths":[[3,"Blake2bResult"],[3,"Blake2b"],[3,"Blake2sResult"],[3,"Blake2s"]]};
searchIndex["cfg_if"]={"doc":"A macro for defining `#[cfg]` if-else statements.","items":[[14,"cfg_if","cfg_if","",N,N]],"paths":[]};
searchIndex["checksums"]={"doc":"Tool for making/verifying checksums of directory trees.","items":[[3,"Options","checksums","Representation of the application's all configurable values.",N,N],[12,"dir","","Directory to hash/verify. Default: `\".\"`",0,N],[12,"algorithm","","Hashing algorithm to use. Default: `\"SHA1\"`",0,N],[12,"verify","","Whether to verify or create checksums. Default: yes",0,N],[12,"depth","","Max recursion depth. Infinite if None. Default: `0`",0,N],[12,"file","","In-/Output filename. Default: `\"./INFERRED_FROM_DIRECTORY.hash\"`",0,N],[12,"follow_symlinks","","Whether to recurse down symlinks. Default: `true`",0,N],[12,"ignored_files","","Files/directories to ignore. Default: none",0,N],[12,"jobs","","of threads used for hashing. Default: # of CPU threads",0,N],[4,"Error","","Enum representing each way the appication can fail.",N,N],[13,"NoError","","No errors occured, everything executed correctly.",1,N],[13,"OptionParsingError","","Parsing of command-line options failed.",1,N],[13,"HashLengthDiffers","","Selected and saved hash lengths differ.",1,N],[13,"HashesFileParsingFailure","","Parsing the hashes file failed.",1,N],[13,"NFilesDiffer","","The specified amount of files do not match.",1,N],[4,"Algorithm","","A hashing algorithm.",N,N],[13,"SHA1","","",2,N],[13,"SHA2256","","SHA2-256",2,N],[13,"SHA2512","","SHA2-512",2,N],[13,"SHA3256","","SHA3-256",2,N],[13,"SHA3512","","SHA3-512",2,N],[13,"BLAKE","","",2,N],[13,"BLAKE2","","",2,N],[13,"CRC64","","",2,N],[13,"CRC32","","",2,N],[13,"CRC16","","",2,N],[13,"CRC8","","",2,N],[13,"MD5","","",2,N],[13,"MD6128","","MD6-128",2,N],[13,"MD6256","","MD6-256",2,N],[13,"MD6512","","MD6-512",2,N],[13,"XOR8","","",2,N],[5,"hash_file","","Hash the specified file using the specified hashing algorithm.",N,[[["path"],["algorithm"]],["string"]]],[5,"hash_string","","Create a hash string out of its raw bytes.",N,N],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",1,[[["self"]],["error"]]],[11,"hash","","",1,N],[11,"eq","","",1,[[["self"],["error"]],["bool"]]],[11,"ne","","",1,[[["self"],["error"]],["bool"]]],[11,"exit_value","","Get the executable exit value from an `Error` instance.",1,[[["self"]],["i32"]]],[11,"from","","",1,[[["i32"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["options"]]],[11,"hash","","",0,N],[11,"eq","","",0,[[["self"],["options"]],["bool"]]],[11,"ne","","",0,[[["self"],["options"]],["bool"]]],[11,"parse","","Parse `env`-wide command-line arguments into an `Options` instance",0,[[],["options"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"clone","","",2,[[["self"]],["algorithm"]]],[11,"hash","","",2,N],[11,"eq","","",2,[[["self"],["algorithm"]],["bool"]]],[11,"hexlen","","Length, in bytes, of the algorithm's output hex string",2,[[["self"]],["usize"]]],[11,"from_str","","",2,[[["str"]],["result"]]],[0,"ops","","Main functions doing actual work.",N,N],[4,"CompareResult","checksums::ops","",N,N],[13,"FileAdded","","",3,N],[13,"FileRemoved","","",3,N],[13,"FileIgnored","","",3,N],[4,"CompareFileResult","","",N,N],[13,"FileMatches","","",4,N],[13,"FileDiffers","","",4,N],[12,"file","checksums::ops::CompareFileResult","",4,N],[12,"was_hash","","",4,N],[12,"new_hash","","",4,N],[4,"CompareError","checksums::ops","",N,N],[13,"HashLengthDiffers","","",5,N],[12,"previous_len","checksums::ops::CompareError","",5,N],[12,"current_len","","",5,N],[5,"compare_hashes","checksums::ops","Compare two provided hashes.",N,[[["str"],["btreemap",["string","string"]],["btreemap",["string","string"]]],["result",["compareerror"]]]],[5,"write_hash_comparison_results","","Write hash comparison results to the output streams in a human-consumable format",N,[[["wo"],["we"],["result",["compareerror"]]],["error"]]],[5,"create_hashes","","Create subpath->hash mappings for a given path using a given algorithm up to a given depth.",N,[[["path"],["btreeset",["string"]],["algorithm"],["option",["usize"]],["bool"],["usize"],["wo"],["we"]],["btreemap",["string","string"]]]],[5,"write_hashes","","Serialise the specified hashes to the specified output file.",N,N],[5,"read_hashes","","Read hashes saved with `write_hashes()` from the specified path or fail with line numbers not matching pattern.",N,N],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"clone","","",3,[[["self"]],["compareresult"]]],[11,"hash","","",3,N],[11,"eq","","",3,[[["self"],["compareresult"]],["bool"]]],[11,"ne","","",3,[[["self"],["compareresult"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["compareresult"]],["option",["ordering"]]]],[11,"lt","","",3,[[["self"],["compareresult"]],["bool"]]],[11,"le","","",3,[[["self"],["compareresult"]],["bool"]]],[11,"gt","","",3,[[["self"],["compareresult"]],["bool"]]],[11,"ge","","",3,[[["self"],["compareresult"]],["bool"]]],[11,"cmp","","",3,[[["self"],["compareresult"]],["ordering"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"clone","","",4,[[["self"]],["comparefileresult"]]],[11,"hash","","",4,N],[11,"eq","","",4,[[["self"],["comparefileresult"]],["bool"]]],[11,"ne","","",4,[[["self"],["comparefileresult"]],["bool"]]],[11,"partial_cmp","","",4,[[["self"],["comparefileresult"]],["option",["ordering"]]]],[11,"lt","","",4,[[["self"],["comparefileresult"]],["bool"]]],[11,"le","","",4,[[["self"],["comparefileresult"]],["bool"]]],[11,"gt","","",4,[[["self"],["comparefileresult"]],["bool"]]],[11,"ge","","",4,[[["self"],["comparefileresult"]],["bool"]]],[11,"cmp","","",4,[[["self"],["comparefileresult"]],["ordering"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"clone","","",5,[[["self"]],["compareerror"]]],[11,"hash","","",5,N],[11,"eq","","",5,[[["self"],["compareerror"]],["bool"]]],[11,"ne","","",5,[[["self"],["compareerror"]],["bool"]]],[0,"util","checksums","Module containing various utility functions",N,N],[5,"vec_merge","checksums::util","Merges two `Vec`s.",N,[[["vec"],["vec"]],["vec"]]],[5,"mul_str","","Create a string consisting of `n` repetitions of `what`.",N,[[["str"],["usize"]],["string"]]],[5,"relative_name","","Create a user-usable path to `what` from `prefix`.",N,[[["path"],["path"]],["string"]]]],"paths":[[3,"Options"],[4,"Error"],[4,"Algorithm"],[4,"CompareResult"],[4,"CompareFileResult"],[4,"CompareError"]]};
searchIndex["clap"]={"doc":"`clap` is a simple-to-use, efficient, and full-featured library for parsing command line arguments and subcommands when writing console/terminal applications.","items":[[3,"Arg","clap","The abstract representation of a command line argument. Used to set all the options and relationships that define a valid argument for the program.",N,N],[3,"ArgGroup","","`ArgGroup`s are a family of related [arguments] and way for you to express, \"Any of these arguments\". By placing arguments in a logical group, you can create easier requirement and exclusion rules instead of having to list each argument individually, or when you want a rule to apply \"any but not all\" arguments.",N,N],[3,"ArgMatches","","Used to get information about the arguments that where supplied to the program at runtime by the user. New instances of this struct are obtained by using the [`App::get_matches`] family of methods.",N,N],[3,"OsValues","","An iterator for getting multiple values out of an argument via the [`ArgMatches::values_of_os`] method. Usage of this iterator allows values which contain invalid UTF-8 code points unlike [`Values`].",N,N],[3,"SubCommand","","The abstract representation of a command line subcommand.",N,N],[3,"Values","","An iterator for getting multiple values out of an argument via the [`ArgMatches::values_of`] method.",N,N],[3,"App","","Used to create a representation of a command line program and all possible command line arguments. Application settings are set using the \"builder pattern\" with the [`App::get_matches`] family of methods being the terminal methods that starts the runtime-parsing process. These methods then return information about the user supplied arguments (or lack there of).",N,N],[3,"Error","","Command Line Argument Parser Error",N,N],[12,"message","","Formatted error message",0,N],[12,"kind","","The type of error",0,N],[12,"info","","Any additional information passed along, such as the argument name that caused the error",0,N],[4,"ArgSettings","","Various settings that apply to arguments and may be set, unset, and checked via getter/setter methods [`Arg::set`], [`Arg::unset`], and [`Arg::is_set`]",N,N],[13,"Required","","The argument must be used",1,N],[13,"Multiple","","The argument may be used multiple times such as `--flag --flag`",1,N],[13,"EmptyValues","","The argument allows empty values such as `--option \"\"`",1,N],[13,"Global","","The argument should be propagated down through all child [`SubCommands`] [`SubCommand`]: ./struct.SubCommand.html",1,N],[13,"Hidden","","The argument should not be shown in help text",1,N],[13,"TakesValue","","The argument accepts a value, such as `--option <value>`",1,N],[13,"UseValueDelimiter","","Determines if the argument allows values to be grouped via a delimiter",1,N],[13,"NextLineHelp","","Prints the help text on the line after the argument",1,N],[13,"RequireDelimiter","","Requires the use of a value delimiter for all multiple values",1,N],[13,"HidePossibleValues","","Hides the possible values from the help string",1,N],[13,"AllowLeadingHyphen","","Allows vals that start with a '-'",1,N],[13,"RequireEquals","","Require options use `--option=val` syntax",1,N],[13,"Last","","Specifies that the arg is the last positional argument and may be accessed early via `--` syntax",1,N],[13,"HideDefaultValue","","Hides the default value from the help string",1,N],[13,"CaseInsensitive","","Makes `Arg::possible_values` case insensitive",1,N],[13,"HideEnvValues","","Hides ENV values in the help message",1,N],[13,"HiddenShortHelp","","The argument should not be shown in short help text",1,N],[13,"HiddenLongHelp","","The argument should not be shown in long help text",1,N],[4,"AppSettings","","Application level settings, which affect how [`App`] operates",N,N],[13,"AllowInvalidUtf8","","Specifies that any invalid UTF-8 code points should not be treated as an error. This is the default behavior of `clap`.",2,N],[13,"AllArgsOverrideSelf","","Essentially sets [`Arg::overrides_with(\"itself\")`] for all arguments.",2,N],[13,"AllowLeadingHyphen","","Specifies that leading hyphens are allowed in argument values, such as negative numbers like `-10`. (which would otherwise be parsed as another flag or option)",2,N],[13,"AllowNegativeNumbers","","Allows negative numbers to pass as values. This is similar to `AllowLeadingHyphen` except that it only allows numbers, all other undefined leading hyphens will fail to parse.",2,N],[13,"AllowMissingPositional","","Allows one to implement two styles of CLIs where positionals can be used out of order.",2,N],[13,"AllowExternalSubcommands","","Specifies that an unexpected positional argument, which would otherwise cause a [`ErrorKind::UnknownArgument`] error, should instead be treated as a [`SubCommand`] within the [`ArgMatches`] struct.",2,N],[13,"ArgsNegateSubcommands","","Specifies that use of a valid [argument] negates [subcommands] being used after. By default `clap` allows arguments between subcommands such as `<cmd> [cmd_args] <cmd2> [cmd2_args] <cmd3> [cmd3_args]`. This setting disables that functionality and says that arguments can only follow the final subcommand. For instance using this setting makes only the following invocations possible:",2,N],[13,"ArgRequiredElseHelp","","Specifies that the help text should be displayed (and then exit gracefully), if no arguments are present at runtime (i.e. an empty run such as, `$ myprog`.",2,N],[13,"ColoredHelp","","Uses colorized help messages.",2,N],[13,"ColorAuto","","Enables colored output only when the output is going to a terminal or TTY.",2,N],[13,"ColorAlways","","Enables colored output regardless of whether or not the output is going to a terminal/TTY.",2,N],[13,"ColorNever","","Disables colored output no matter if the output is going to a terminal/TTY, or not.",2,N],[13,"DontCollapseArgsInUsage","","Disables the automatic collapsing of positional args into `[ARGS]` inside the usage string",2,N],[13,"DontDelimitTrailingValues","","Disables the automatic delimiting of values when `--` or [`AppSettings::TrailingVarArg`] was used.",2,N],[13,"DisableHelpSubcommand","","Disables the `help` subcommand",2,N],[13,"DisableVersion","","Disables `-V` and `--version` [`App`] without affecting any of the [`SubCommand`]s (Defaults to `false`; application does have a version flag)",2,N],[13,"DeriveDisplayOrder","","Displays the arguments and [`SubCommand`]s in the help message in the order that they were declared in, and not alphabetically which is the default.",2,N],[13,"GlobalVersion","","Specifies to use the version of the current command for all child [`SubCommand`]s. (Defaults to `false`; subcommands have independent version strings from their parents.)",2,N],[13,"Hidden","","Specifies that this [`SubCommand`] should be hidden from help messages",2,N],[13,"HidePossibleValuesInHelp","","Tells `clap` not to print possible values when displaying help information. This can be useful if there are many values, or they are explained elsewhere.",2,N],[13,"InferSubcommands","","Tries to match unknown args to partial [`subcommands`] or their [aliases]. For example to match a subcommand named `test`, one could use `t`, `te`, `tes`, and `test`.",2,N],[13,"NoBinaryName","","Specifies that the parser should not assume the first argument passed is the binary name. This is normally the case when using a \"daemon\" style mode, or an interactive CLI where one one would not normally type the binary or program name for each command.",2,N],[13,"NextLineHelp","","Places the help string for all arguments on the line after the argument.",2,N],[13,"PropagateGlobalValuesDown","","DEPRECATED: This setting is no longer required in order to propagate values up or down",2,N],[13,"SubcommandsNegateReqs","","Allows [`SubCommand`]s to override all requirements of the parent command. For example if you had a subcommand or top level application with a required argument that is only required as long as there is no subcommand present, using this setting would allow you to set those arguments to [`Arg::required(true)`] and yet receive no error so long as the user uses a valid subcommand instead.",2,N],[13,"SubcommandRequiredElseHelp","","Specifies that the help text should be displayed (before exiting gracefully) if no [`SubCommand`]s are present at runtime (i.e. an empty run such as `$ myprog`).",2,N],[13,"StrictUtf8","","Specifies that any invalid UTF-8 code points should be treated as an error and fail with a [`ErrorKind::InvalidUtf8`] error.",2,N],[13,"SubcommandRequired","","Allows specifying that if no [`SubCommand`] is present at runtime, error and exit gracefully.",2,N],[13,"TrailingVarArg","","Specifies that the final positional argument is a \"VarArg\" and that `clap` should not attempt to parse any further args.",2,N],[13,"UnifiedHelpMessage","","Groups flags and options together, presenting a more unified help message (a la `getopts` or `docopt` style).",2,N],[13,"VersionlessSubcommands","","Disables `-V` and `--version` for all [`SubCommand`]s (Defaults to `false`; subcommands do have version flags.)",2,N],[13,"WaitOnError","","Will display a message \"Press [ENTER]/[RETURN] to continue...\" and wait for user before exiting",2,N],[4,"ErrorKind","","Command line argument parser kind of error",N,N],[13,"InvalidValue","","Occurs when an [`Arg`] has a set of possible values, and the user provides a value which isn't in that set.",3,N],[13,"UnknownArgument","","Occurs when a user provides a flag, option, argument or subcommand which isn't defined.",3,N],[13,"InvalidSubcommand","","Occurs when the user provides an unrecognized [`SubCommand`] which meets the threshold for being similar enough to an existing subcommand. If it doesn't meet the threshold, or the 'suggestions' feature is disabled, the more general [`UnknownArgument`] error is returned.",3,N],[13,"UnrecognizedSubcommand","","Occurs when the user provides an unrecognized [`SubCommand`] which either doesn't meet the threshold for being similar enough to an existing subcommand, or the 'suggestions' feature is disabled. Otherwise the more detailed [`InvalidSubcommand`] error is returned.",3,N],[13,"EmptyValue","","Occurs when the user provides an empty value for an option that does not allow empty values.",3,N],[13,"ValueValidation","","Occurs when the user provides a value for an argument with a custom validation and the value fails that validation.",3,N],[13,"TooManyValues","","Occurs when a user provides more values for an argument than were defined by setting [`Arg::max_values`].",3,N],[13,"TooFewValues","","Occurs when the user provides fewer values for an argument than were defined by setting [`Arg::min_values`].",3,N],[13,"WrongNumberOfValues","","Occurs when the user provides a different number of values for an argument than what's been defined by setting [`Arg::number_of_values`] or than was implicitly set by [`Arg::value_names`].",3,N],[13,"ArgumentConflict","","Occurs when the user provides two values which conflict with each other and can't be used together.",3,N],[13,"MissingRequiredArgument","","Occurs when the user does not provide one or more required arguments.",3,N],[13,"MissingSubcommand","","Occurs when a subcommand is required (as defined by [`AppSettings::SubcommandRequired`]), but the user does not provide one.",3,N],[13,"MissingArgumentOrSubcommand","","Occurs when either an argument or [`SubCommand`] is required, as defined by [`AppSettings::ArgRequiredElseHelp`], but the user did not provide one.",3,N],[13,"UnexpectedMultipleUsage","","Occurs when the user provides multiple values to an argument which doesn't allow that.",3,N],[13,"InvalidUtf8","","Occurs when the user provides a value containing invalid UTF-8 for an argument and [`AppSettings::StrictUtf8`] is set.",3,N],[13,"HelpDisplayed","","Not a true \"error\" as it means `--help` or similar was used. The help message will be sent to `stdout`.",3,N],[13,"VersionDisplayed","","Not a true \"error\" as it means `--version` or similar was used. The message will be sent to `stdout`.",3,N],[13,"ArgumentNotFound","","Occurs when using the [`value_t!`] and [`values_t!`] macros to convert an argument value into type `T`, but the argument you requested wasn't used. I.e. you asked for an argument with name `config` to be converted, but `config` wasn't used by the user. [`value_t!`]: ./macro.value_t!.html [`values_t!`]: ./macro.values_t!.html",3,N],[13,"Io","","Represents an [I/O error]. Can occur when writing to `stderr` or `stdout` or reading a configuration file. [I/O error]: https://doc.rust-lang.org/std/io/struct.Error.html",3,N],[13,"Format","","Represents a [Format error] (which is a part of [`Display`]). Typically caused by writing to `stderr` or `stdout`. [`Display`]: https://doc.rust-lang.org/std/fmt/trait.Display.html [Format error]: https://doc.rust-lang.org/std/fmt/struct.Error.html",3,N],[4,"Shell","","Describes which shell to produce a completions file for",N,N],[13,"Bash","","Generates a .bash completion file for the Bourne Again SHell (BASH)",4,N],[13,"Fish","","Generates a .fish completion file for the Friendly Interactive SHell (fish)",4,N],[13,"Zsh","","Generates a completion file for the Z SHell (ZSH)",4,N],[13,"PowerShell","","Generates a completion file for PowerShell",4,N],[13,"Elvish","","Generates a completion file for Elvish",4,N],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"eq","","",2,[[["self"],["appsettings"]],["bool"]]],[11,"clone","","",2,[[["self"]],["appsettings"]]],[11,"from_str","","",2,[[["str"]],["result"]]],[11,"new","","Creates a new instance of an application requiring a name. The name may be, but doesn't have to be same as the binary. The name will be displayed to the user when they request to print version or help and usage information.",5,[[["s"]],["self"]]],[11,"get_name","","Get the name of the app",5,[[["self"]],["str"]]],[11,"get_bin_name","","Get the name of the binary",5,[[["self"]],["option",["str"]]]],[11,"with_defaults","","Creates a new instance of an application requiring a name, but uses the [`crate_authors!`] and [`crate_version!`] macros to fill in the [`App::author`] and [`App::version`] fields.",5,[[["s"]],["self"]]],[11,"author","","Sets a string of author(s) that will be displayed to the user when they request the help information with `--help` or `-h`.",5,[[["self"],["s"]],["self"]]],[11,"bin_name","","Overrides the system-determined binary name. This should only be used when absolutely necessary, such as when the binary name for your application is misleading, or perhaps not how the user should invoke your program.",5,[[["self"],["s"]],["self"]]],[11,"about","","Sets a string describing what the program does. This will be displayed when displaying help information with `-h`.",5,[[["self"],["s"]],["self"]]],[11,"long_about","","Sets a string describing what the program does. This will be displayed when displaying help information.",5,[[["self"],["s"]],["self"]]],[11,"name","","Sets the program's name. This will be displayed when displaying help information.",5,[[["self"],["s"]],["self"]]],[11,"after_help","","Adds additional help information to be displayed in addition to auto-generated help. This information is displayed after the auto-generated help information. This is often used to describe how to use the arguments, or caveats to be noted.",5,[[["self"],["s"]],["self"]]],[11,"before_help","","Adds additional help information to be displayed in addition to auto-generated help. This information is displayed before the auto-generated help information. This is often used for header information.",5,[[["self"],["s"]],["self"]]],[11,"version","","Sets a string of the version number to be displayed when displaying version or help information with `-V`.",5,[[["self"],["s"]],["self"]]],[11,"long_version","","Sets a string of the version number to be displayed when displaying version or help information with `--version`.",5,[[["self"],["s"]],["self"]]],[11,"usage","","Sets a custom usage string to override the auto-generated usage string.",5,[[["self"],["s"]],["self"]]],[11,"help","","Sets a custom help message and overrides the auto-generated one. This should only be used when the auto-generated message does not suffice.",5,[[["self"],["s"]],["self"]]],[11,"help_short","","Sets the [`short`] for the auto-generated `help` argument.",5,[[["self"],["s"]],["self"]]],[11,"version_short","","Sets the [`short`] for the auto-generated `version` argument.",5,[[["self"],["s"]],["self"]]],[11,"help_message","","Sets the help text for the auto-generated `help` argument.",5,[[["self"],["s"]],["self"]]],[11,"version_message","","Sets the help text for the auto-generated `version` argument.",5,[[["self"],["s"]],["self"]]],[11,"template","","Sets the help template to be used, overriding the default format.",5,[[["self"],["s"]],["self"]]],[11,"setting","","Enables a single command, or [`SubCommand`], level settings.",5,[[["self"],["appsettings"]],["self"]]],[11,"settings","","Enables multiple command, or [`SubCommand`], level settings",5,N],[11,"global_setting","","Enables a single setting that is propagated down through all child [`SubCommand`]s.",5,[[["self"],["appsettings"]],["self"]]],[11,"global_settings","","Enables multiple settings which are propagated down through all child [`SubCommand`]s.",5,N],[11,"unset_setting","","Disables a single command, or [`SubCommand`], level setting.",5,[[["self"],["appsettings"]],["self"]]],[11,"unset_settings","","Disables multiple command, or [`SubCommand`], level settings.",5,N],[11,"set_term_width","","Sets the terminal width at which to wrap help messages. Defaults to `120`. Using `0` will ignore terminal widths and use source formatting.",5,[[["self"],["usize"]],["self"]]],[11,"max_term_width","","Sets the max terminal width at which to wrap help messages. Using `0` will ignore terminal widths and use source formatting.",5,[[["self"],["usize"]],["self"]]],[11,"arg","","Adds an [argument] to the list of valid possibilities.",5,[[["self"],["a"]],["self"]]],[11,"args","","Adds multiple [arguments] to the list of valid possibilities",5,N],[11,"arg_from_usage","","A convenience method for adding a single [argument] from a usage type string. The string used follows the same rules and syntax as [`Arg::from_usage`]",5,[[["self"],["str"]],["self"]]],[11,"args_from_usage","","Adds multiple [arguments] at once from a usage string, one per line. See [`Arg::from_usage`] for details on the syntax and rules supported.",5,[[["self"],["str"]],["self"]]],[11,"alias","","Allows adding a [`SubCommand`] alias, which function as \"hidden\" subcommands that automatically dispatch as if this subcommand was used. This is more efficient, and easier than creating multiple hidden subcommands as one only needs to check for the existence of this command, and not all variants.",5,[[["self"],["s"]],["self"]]],[11,"aliases","","Allows adding [`SubCommand`] aliases, which function as \"hidden\" subcommands that automatically dispatch as if this subcommand was used. This is more efficient, and easier than creating multiple hidden subcommands as one only needs to check for the existence of this command, and not all variants.",5,N],[11,"visible_alias","","Allows adding a [`SubCommand`] alias that functions exactly like those defined with [`App::alias`], except that they are visible inside the help message.",5,[[["self"],["s"]],["self"]]],[11,"visible_aliases","","Allows adding multiple [`SubCommand`] aliases that functions exactly like those defined with [`App::aliases`], except that they are visible inside the help message.",5,N],[11,"group","","Adds an [`ArgGroup`] to the application. [`ArgGroup`]s are a family of related arguments. By placing them in a logical group, you can build easier requirement and exclusion rules. For instance, you can make an entire [`ArgGroup`] required, meaning that one (and only one) argument from that group must be present at runtime.",5,[[["self"],["arggroup"]],["self"]]],[11,"groups","","Adds multiple [`ArgGroup`]s to the [`App`] at once.",5,N],[11,"subcommand","","Adds a [`SubCommand`] to the list of valid possibilities. Subcommands are effectively sub-[`App`]s, because they can contain their own arguments, subcommands, version, usage, etc. They also function just like [`App`]s, in that they get their own auto generated help, version, and usage.",5,[[["self"],["app"]],["self"]]],[11,"subcommands","","Adds multiple subcommands to the list of valid possibilities by iterating over an [`IntoIterator`] of [`SubCommand`]s",5,[[["self"],["i"]],["self"]]],[11,"display_order","","Allows custom ordering of [`SubCommand`]s within the help message. Subcommands with a lower value will be displayed first in the help message. This is helpful when one would like to emphasise frequently used subcommands, or prioritize those towards the top of the list. Duplicate values are allowed. Subcommands with duplicate display orders will be displayed in alphabetical order.",5,[[["self"],["usize"]],["self"]]],[11,"print_help","","Prints the full help message to [`io::stdout()`] using a [`BufWriter`] using the same method as if someone ran `-h` to request the help message",5,[[["self"]],["clapresult"]]],[11,"print_long_help","","Prints the full help message to [`io::stdout()`] using a [`BufWriter`] using the same method as if someone ran `--help` to request the help message",5,[[["self"]],["clapresult"]]],[11,"write_help","","Writes the full help message to the user to a [`io::Write`] object in the same method as if the user ran `-h`",5,[[["self"],["w"]],["clapresult"]]],[11,"write_long_help","","Writes the full help message to the user to a [`io::Write`] object in the same method as if the user ran `--help`",5,[[["self"],["w"]],["clapresult"]]],[11,"write_version","","Writes the version message to the user to a [`io::Write`] object as if the user ran `-V`.",5,[[["self"],["w"]],["clapresult"]]],[11,"write_long_version","","Writes the version message to the user to a [`io::Write`] object",5,[[["self"],["w"]],["clapresult"]]],[11,"gen_completions","","Generate a completions file for a specified shell at compile time.",5,[[["self"],["s"],["shell"],["t"]]]],[11,"gen_completions_to","","Generate a completions file for a specified shell at runtime.  Until `cargo install` can install extra files like a completion script, this may be used e.g. in a command that outputs the contents of the completion script, to be redirected into a file by the user.",5,[[["self"],["s"],["shell"],["w"]]]],[11,"get_matches","","Starts the parsing process, upon a failed parse an error will be displayed to the user and the process will exit with the appropriate error code. By default this method gets all user provided arguments from [`env::args_os`] in order to allow for invalid UTF-8 code points, which are legal on many platforms.",5,[[["self"]],["argmatches"]]],[11,"get_matches_safe","","Starts the parsing process. This method will return a [`clap::Result`] type instead of exiting the process on failed parse. By default this method gets matches from [`env::args_os`]",5,[[["self"]],["clapresult",["argmatches"]]]],[11,"get_matches_from","","Starts the parsing process. Like [`App::get_matches`] this method does not return a [`clap::Result`] and will automatically exit with an error message. This method, however, lets you specify what iterator to use when performing matches, such as a [`Vec`] of your making.",5,[[["self"],["i"]],["argmatches"]]],[11,"get_matches_from_safe","","Starts the parsing process. A combination of [`App::get_matches_from`], and [`App::get_matches_safe`]",5,[[["self"],["i"]],["clapresult",["argmatches"]]]],[11,"get_matches_from_safe_borrow","","Starts the parsing process without consuming the [`App`] struct `self`. This is normally not the desired functionality, instead prefer [`App::get_matches_from_safe`] which does consume `self`.",5,[[["self"],["i"]],["clapresult",["argmatches"]]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"default","","",6,[[],["arg"]]],[11,"clone","","",6,[[["self"]],["arg"]]],[11,"with_name","","Creates a new instance of [`Arg`] using a unique string name. The name will be used to get information about whether or not the argument was used at runtime, get values, set relationships with other args, etc..",6,[[["str"]],["self"]]],[11,"from_usage","","Creates a new instance of [`Arg`] from a usage string. Allows creation of basic settings for the [`Arg`]. The syntax is flexible, but there are some rules to follow.",6,[[["str"]],["self"]]],[11,"short","","Sets the short version of the argument without the preceding `-`.",6,[[["self"],["s"]],["self"]]],[11,"long","","Sets the long version of the argument without the preceding `--`.",6,[[["self"],["str"]],["self"]]],[11,"alias","","Allows adding a [`Arg`] alias, which function as \"hidden\" arguments that automatically dispatch as if this argument was used. This is more efficient, and easier than creating multiple hidden arguments as one only needs to check for the existence of this command, and not all variants.",6,[[["self"],["s"]],["self"]]],[11,"aliases","","Allows adding [`Arg`] aliases, which function as \"hidden\" arguments that automatically dispatch as if this argument was used. This is more efficient, and easier than creating multiple hidden subcommands as one only needs to check for the existence of this command, and not all variants.",6,N],[11,"visible_alias","","Allows adding a [`Arg`] alias that functions exactly like those defined with [`Arg::alias`], except that they are visible inside the help message.",6,[[["self"],["s"]],["self"]]],[11,"visible_aliases","","Allows adding multiple [`Arg`] aliases that functions exactly like those defined with [`Arg::aliases`], except that they are visible inside the help message.",6,N],[11,"help","","Sets the short help text of the argument that will be displayed to the user when they print the help information with `-h`. Typically, this is a short (one line) description of the arg.",6,[[["self"],["str"]],["self"]]],[11,"long_help","","Sets the long help text of the argument that will be displayed to the user when they print the help information with `--help`. Typically this a more detailed (multi-line) message that describes the arg.",6,[[["self"],["str"]],["self"]]],[11,"last","","Specifies that this arg is the last, or final, positional argument (i.e. has the highest index) and is only able to be accessed via the `--` syntax (i.e. `$ prog args -- last_arg`). Even, if no other arguments are left to parse, if the user omits the `--` syntax they will receive an [`UnknownArgument`] error. Setting an argument to `.last(true)` also allows one to access this arg early using the `--` syntax. Accessing an arg early, even with the `--` syntax is otherwise not possible.",6,[[["self"],["bool"]],["self"]]],[11,"required","","Sets whether or not the argument is required by default. Required by default means it is required, when no other conflicting rules have been evaluated. Conflicting rules take precedence over being required. Default: `false`",6,[[["self"],["bool"]],["self"]]],[11,"require_equals","","Requires that options use the `--option=val` syntax (i.e. an equals between the option and associated value) Default: `false`",6,[[["self"],["bool"]],["self"]]],[11,"allow_hyphen_values","","Allows values which start with a leading hyphen (`-`)",6,[[["self"],["bool"]],["self"]]],[11,"required_unless","","Sets an arg that override this arg's required setting. (i.e. this arg will be required unless this other argument is present).",6,[[["self"],["str"]],["self"]]],[11,"required_unless_all","","Sets args that override this arg's required setting. (i.e. this arg will be required unless all these other arguments are present).",6,N],[11,"required_unless_one","","Sets args that override this arg's [required] setting. (i.e. this arg will be required unless at least one of these other arguments are present).",6,N],[11,"conflicts_with","","Sets a conflicting argument by name. I.e. when using this argument, the following argument can't be present and vice versa.",6,[[["self"],["str"]],["self"]]],[11,"conflicts_with_all","","The same as [`Arg::conflicts_with`] but allows specifying multiple two-way conlicts per argument.",6,N],[11,"overrides_with","","Sets a overridable argument by name. I.e. this argument and the following argument will override each other in POSIX style (whichever argument was specified at runtime last \"wins\")",6,[[["self"],["str"]],["self"]]],[11,"overrides_with_all","","Sets multiple mutually overridable arguments by name. I.e. this argument and the following argument will override each other in POSIX style (whichever argument was specified at runtime last \"wins\")",6,N],[11,"requires","","Sets an argument by name that is required when this one is present I.e. when using this argument, the following argument must be present.",6,[[["self"],["str"]],["self"]]],[11,"requires_if","","Allows a conditional requirement. The requirement will only become valid if this arg's value equals `val`.",6,[[["self"],["str"],["str"]],["self"]]],[11,"requires_ifs","","Allows multiple conditional requirements. The requirement will only become valid if this arg's value equals `val`.",6,N],[11,"required_if","","Allows specifying that an argument is [required] conditionally. The requirement will only become valid if the specified `arg`'s value equals `val`.",6,[[["self"],["str"],["str"]],["self"]]],[11,"required_ifs","","Allows specifying that an argument is [required] based on multiple conditions. The conditions are set up in a `(arg, val)` style tuple. The requirement will only become valid if one of the specified `arg`'s value equals it's corresponding `val`.",6,N],[11,"requires_all","","Sets multiple arguments by names that are required when this one is present I.e. when using this argument, the following arguments must be present.",6,N],[11,"takes_value","","Specifies that the argument takes a value at run time.",6,[[["self"],["bool"]],["self"]]],[11,"hide_possible_values","","Specifies if the possible values of an argument should be displayed in the help text or not. Defaults to `false` (i.e. show possible values)",6,[[["self"],["bool"]],["self"]]],[11,"hide_default_value","","Specifies if the default value of an argument should be displayed in the help text or not. Defaults to `false` (i.e. show default value)",6,[[["self"],["bool"]],["self"]]],[11,"index","","Specifies the index of a positional argument starting at 1.",6,[[["self"],["u64"]],["self"]]],[11,"multiple","","Specifies that the argument may appear more than once. For flags, this results in the number of occurrences of the flag being recorded. For example `-ddd` or `-d -d -d` would count as three occurrences. For options there is a distinct difference in multiple occurrences vs multiple values.",6,[[["self"],["bool"]],["self"]]],[11,"value_terminator","","Specifies a value that stops parsing multiple values of a give argument. By default when one sets [`multiple(true)`] on an argument, clap will continue parsing values for that argument until it reaches another valid argument, or one of the other more specific settings for multiple values is used (such as [`min_values`], [`max_values`] or [`number_of_values`]).",6,[[["self"],["str"]],["self"]]],[11,"global","","Specifies that an argument can be matched to all child [`SubCommand`]s.",6,[[["self"],["bool"]],["self"]]],[11,"empty_values","","Allows an argument to accept explicitly empty values. An empty value must be specified at the command line with an explicit `\"\"`, or `''`",6,[[["self"],["bool"]],["self"]]],[11,"hidden","","Hides an argument from help message output.",6,[[["self"],["bool"]],["self"]]],[11,"possible_values","","Specifies a list of possible values for this argument. At runtime, `clap` verifies that only one of the specified values was used, or fails with an error message.",6,N],[11,"possible_value","","Specifies a possible value for this argument, one at a time. At runtime, `clap` verifies that only one of the specified values was used, or fails with error message.",6,[[["self"],["str"]],["self"]]],[11,"case_insensitive","","When used with [`Arg::possible_values`] it allows the argument value to pass validation even if the case differs from that of the specified `possible_value`.",6,[[["self"],["bool"]],["self"]]],[11,"group","","Specifies the name of the [`ArgGroup`] the argument belongs to.",6,[[["self"],["str"]],["self"]]],[11,"groups","","Specifies the names of multiple [`ArgGroup`]'s the argument belongs to.",6,N],[11,"number_of_values","","Specifies how many values are required to satisfy this argument. For example, if you had a `-f <file>` argument where you wanted exactly 3 'files' you would set `.number_of_values(3)`, and this argument wouldn't be satisfied unless the user provided 3 and only 3 values.",6,[[["self"],["u64"]],["self"]]],[11,"validator","","Allows one to perform a custom validation on the argument value. You provide a closure which accepts a [`String`] value, and return a [`Result`] where the [`Err(String)`] is a message displayed to the user.",6,[[["self"],["f"]],["self"]]],[11,"validator_os","","Works identically to Validator but is intended to be used with values that could contain non UTF-8 formatted strings.",6,[[["self"],["f"]],["self"]]],[11,"max_values","","Specifies the maximum number of values are for this argument. For example, if you had a `-f <file>` argument where you wanted up to 3 'files' you would set `.max_values(3)`, and this argument would be satisfied if the user provided, 1, 2, or 3 values.",6,[[["self"],["u64"]],["self"]]],[11,"min_values","","Specifies the minimum number of values for this argument. For example, if you had a `-f <file>` argument where you wanted at least 2 'files' you would set `.min_values(2)`, and this argument would be satisfied if the user provided, 2 or more values.",6,[[["self"],["u64"]],["self"]]],[11,"use_delimiter","","Specifies whether or not an argument should allow grouping of multiple values via a delimiter. I.e. should `--option=val1,val2,val3` be parsed as three values (`val1`, `val2`, and `val3`) or as a single value (`val1,val2,val3`). Defaults to using `,` (comma) as the value delimiter for all arguments that accept values (options and positional arguments)",6,[[["self"],["bool"]],["self"]]],[11,"require_delimiter","","Specifies that multiple values may only be set using the delimiter. This means if an if an option is encountered, and no delimiter is found, it automatically assumed that no additional values for that option follow. This is unlike the default, where it is generally assumed that more values will follow regardless of whether or not a delimiter is used.",6,[[["self"],["bool"]],["self"]]],[11,"value_delimiter","","Specifies the separator to use when values are clumped together, defaults to `,` (comma).",6,[[["self"],["str"]],["self"]]],[11,"value_names","","Specify multiple names for values of option arguments. These names are cosmetic only, used for help and usage strings only. The names are not used to access arguments. The values of the arguments are accessed in numeric order (i.e. if you specify two names `one` and `two` `one` will be the first matched value, `two` will be the second).",6,N],[11,"value_name","","Specifies the name for value of [option] or [positional] arguments inside of help documentation. This name is cosmetic only, the name is not used to access arguments. This setting can be very helpful when describing the type of input the user should be using, such as `FILE`, `INTERFACE`, etc. Although not required, it's somewhat convention to use all capital letters for the value name.",6,[[["self"],["str"]],["self"]]],[11,"default_value","","Specifies the value of the argument when not specified at runtime.",6,[[["self"],["str"]],["self"]]],[11,"default_value_os","","Provides a default value in the exact same manner as [`Arg::default_value`] only using [`OsStr`]s instead. [`Arg::default_value`]: ./struct.Arg.html#method.default_value [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html",6,[[["self"],["osstr"]],["self"]]],[11,"default_value_if","","Specifies the value of the argument if `arg` has been used at runtime. If `val` is set to `None`, `arg` only needs to be present. If `val` is set to `\"some-val\"` then `arg` must be present at runtime and have the value `val`.",6,[[["self"],["str"],["option",["str"]],["str"]],["self"]]],[11,"default_value_if_os","","Provides a conditional default value in the exact same manner as [`Arg::default_value_if`] only using [`OsStr`]s instead. [`Arg::default_value_if`]: ./struct.Arg.html#method.default_value_if [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html",6,[[["self"],["str"],["option",["osstr"]],["osstr"]],["self"]]],[11,"default_value_ifs","","Specifies multiple values and conditions in the same manner as [`Arg::default_value_if`]. The method takes a slice of tuples in the `(arg, Option<val>, default)` format.",6,N],[11,"default_value_ifs_os","","Provides multiple conditional default values in the exact same manner as [`Arg::default_value_ifs`] only using [`OsStr`]s instead. [`Arg::default_value_ifs`]: ./struct.Arg.html#method.default_value_ifs [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html",6,N],[11,"env","","Specifies that if the value is not passed in as an argument, that it should be retrieved from the environment, if available. If it is not present in the environment, then default rules will apply.",6,[[["self"],["str"]],["self"]]],[11,"env_os","","Specifies that if the value is not passed in as an argument, that it should be retrieved from the environment if available in the exact same manner as [`Arg::env`] only using [`OsStr`]s instead.",6,[[["self"],["osstr"]],["self"]]],[11,"hide_env_values","","@TODO @p2 @docs @release: write docs",6,[[["self"],["bool"]],["self"]]],[11,"next_line_help","","When set to `true` the help string will be displayed on the line after the argument and indented once. This can be helpful for arguments with very long or complex help messages. This can also be helpful for arguments with very long flag names, or many/long value names.",6,[[["self"],["bool"]],["self"]]],[11,"display_order","","Allows custom ordering of args within the help message. Args with a lower value will be displayed first in the help message. This is helpful when one would like to emphasise frequently used args, or prioritize those towards the top of the list. Duplicate values are allowed. Args with duplicate display orders will be displayed in alphabetical order.",6,[[["self"],["usize"]],["self"]]],[11,"raw","","Indicates that all parameters passed after this should not be parsed individually, but rather passed in their entirety. It is worth noting that setting this requires all values to come after a `--` to indicate they should all be captured. For example:",6,[[["self"],["bool"]],["self"]]],[11,"hidden_short_help","","Hides an argument from short help message output.",6,[[["self"],["bool"]],["self"]]],[11,"hidden_long_help","","Hides an argument from long help message output.",6,[[["self"],["bool"]],["self"]]],[11,"is_set","","Checks if one of the [`ArgSettings`] settings is set for the argument [`ArgSettings`]: ./enum.ArgSettings.html",6,[[["self"],["argsettings"]],["bool"]]],[11,"set","","Sets one of the [`ArgSettings`] settings for the argument [`ArgSettings`]: ./enum.ArgSettings.html",6,[[["self"],["argsettings"]],["self"]]],[11,"unset","","Unsets one of the [`ArgSettings`] settings for the argument [`ArgSettings`]: ./enum.ArgSettings.html",6,[[["self"],["argsettings"]],["self"]]],[11,"from","","",6,[[["arg"]],["self"]]],[11,"eq","","",6,[[["self"],["arg"]],["bool"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"clone","","",7,[[["self"]],["argmatches"]]],[11,"default","","",7,[[],["self"]]],[11,"value_of","","Gets the value of a specific [option] or [positional] argument (i.e. an argument that takes an additional value at runtime). If the option wasn't present at runtime it returns `None`.",7,[[["self"],["s"]],["option",["str"]]]],[11,"value_of_lossy","","Gets the lossy value of a specific argument. If the argument wasn't present at runtime it returns `None`. A lossy value is one which contains invalid UTF-8 code points, those invalid points will be replaced with `\\u{FFFD}`",7,[[["self"],["s"]],["option",["cow"]]]],[11,"value_of_os","","Gets the OS version of a string value of a specific argument. If the option wasn't present at runtime it returns `None`. An OS value on Unix-like systems is any series of bytes, regardless of whether or not they contain valid UTF-8 code points. Since [`String`]s in Rust are guaranteed to be valid UTF-8, a valid filename on a Unix system as an argument value may contain invalid UTF-8 code points.",7,[[["self"],["s"]],["option",["osstr"]]]],[11,"values_of","","Gets a [`Values`] struct which implements [`Iterator`] for values of a specific argument (i.e. an argument that takes multiple values at runtime). If the option wasn't present at runtime it returns `None`",7,[[["self"],["s"]],["option",["values"]]]],[11,"values_of_lossy","","Gets the lossy values of a specific argument. If the option wasn't present at runtime it returns `None`. A lossy value is one where if it contains invalid UTF-8 code points, those invalid points will be replaced with `\\u{FFFD}`",7,[[["self"],["s"]],["option",["vec"]]]],[11,"values_of_os","","Gets a [`OsValues`] struct which is implements [`Iterator`] for [`OsString`] values of a specific argument. If the option wasn't present at runtime it returns `None`. An OS value on Unix-like systems is any series of bytes, regardless of whether or not they contain valid UTF-8 code points. Since [`String`]s in Rust are guaranteed to be valid UTF-8, a valid filename as an argument value on Linux (for example) may contain invalid UTF-8 code points.",7,[[["self"],["s"]],["option",["osvalues"]]]],[11,"is_present","","Returns `true` if an argument was present at runtime, otherwise `false`.",7,[[["self"],["s"]],["bool"]]],[11,"occurrences_of","","Returns the number of times an argument was used at runtime. If an argument isn't present it will return `0`.",7,[[["self"],["s"]],["u64"]]],[11,"index_of","","Gets the starting index of the argument in respect to all other arguments. Indices are similar to argv indices, but are not exactly 1:1.",7,[[["self"],["s"]],["option",["usize"]]]],[11,"indices_of","","Gets all indices of the argument in respect to all other arguments. Indices are similar to argv indices, but are not exactly 1:1.",7,[[["self"],["s"]],["option",["indices"]]]],[11,"subcommand_matches","","Because [`Subcommand`]s are essentially \"sub-[`App`]s\" they have their own [`ArgMatches`] as well. This method returns the [`ArgMatches`] for a particular subcommand or `None` if the subcommand wasn't present at runtime.",7,[[["self"],["s"]],["option",["argmatches"]]]],[11,"subcommand_name","","Because [`Subcommand`]s are essentially \"sub-[`App`]s\" they have their own [`ArgMatches`] as well.But simply getting the sub-[`ArgMatches`] doesn't help much if we don't also know which subcommand was actually used. This method returns the name of the subcommand that was used at runtime, or `None` if one wasn't.",7,[[["self"]],["option",["str"]]]],[11,"subcommand","","This brings together [`ArgMatches::subcommand_matches`] and [`ArgMatches::subcommand_name`] by returning a tuple with both pieces of information.",7,N],[11,"usage","","Returns a string slice of the usage statement for the [`App`] or [`SubCommand`]",7,[[["self"]],["str"]]],[11,"clone","","",8,[[["self"]],["values"]]],[11,"next","","",8,[[["self"]],["option",["str"]]]],[11,"size_hint","","",8,N],[11,"next_back","","",8,[[["self"]],["option",["str"]]]],[11,"default","","",8,[[],["self"]]],[11,"clone","","",9,[[["self"]],["osvalues"]]],[11,"next","","",9,[[["self"]],["option",["osstr"]]]],[11,"size_hint","","",9,N],[11,"next_back","","",9,[[["self"]],["option",["osstr"]]]],[11,"default","","",9,[[],["self"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"clone","","",10,[[["self"]],["subcommand"]]],[11,"with_name","","Creates a new instance of a subcommand requiring a name. The name will be displayed to the user when they print version or help and usage information.",10,[[["str"]],["app"]]],[11,"default","","",11,[[],["arggroup"]]],[11,"with_name","","Creates a new instance of `ArgGroup` using a unique string name. The name will be used to get values from the group or refer to the group inside of conflict and requirement rules.",11,[[["str"]],["self"]]],[11,"arg","","Adds an [argument] to this group by name",11,[[["self"],["str"]],["self"]]],[11,"args","","Adds multiple [arguments] to this group by name",11,N],[11,"multiple","","Allows more than one of the ['Arg']s in this group to be used. (Default: `false`)",11,[[["self"],["bool"]],["self"]]],[11,"required","","Sets the group as required or not. A required group will be displayed in the usage string of the application in the format `<arg|arg2|arg3>`. A required `ArgGroup` simply states that one argument from this group must be present at runtime (unless conflicting with another argument).",11,[[["self"],["bool"]],["self"]]],[11,"requires","","Sets the requirement rules of this group. This is not to be confused with a [required group]. Requirement rules function just like [argument requirement rules], you can name other arguments or groups that must be present when any one of the arguments from this group is used.",11,[[["self"],["str"]],["self"]]],[11,"requires_all","","Sets the requirement rules of this group. This is not to be confused with a [required group]. Requirement rules function just like [argument requirement rules], you can name other arguments or groups that must be present when one of the arguments from this group is used.",11,N],[11,"conflicts_with","","Sets the exclusion rules of this group. Exclusion (aka conflict) rules function just like [argument exclusion rules], you can name other arguments or groups that must not be present when one of the arguments from this group are used.",11,[[["self"],["str"]],["self"]]],[11,"conflicts_with_all","","Sets the exclusion rules of this group. Exclusion rules function just like [argument exclusion rules], you can name other arguments or groups that must not be present when one of the arguments from this group are used.",11,N],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"from","","",11,[[["arggroup"]],["self"]]],[11,"clone","","",11,[[["self"]],["self"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",1,[[["self"],["argsettings"]],["bool"]]],[11,"clone","","",1,[[["self"]],["argsettings"]]],[11,"from_str","","",1,[[["str"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"clone","","",3,[[["self"]],["errorkind"]]],[11,"eq","","",3,[[["self"],["errorkind"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"use_stderr","","Should the message be written to `stdout` or not",0,[[["self"]],["bool"]]],[11,"exit","","Prints the error to `stderr` and exits with a status of `1`",0,N],[11,"with_description","","Create an error with a custom description.",0,[[["str"],["errorkind"]],["self"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"clone","","",4,[[["self"]],["shell"]]],[11,"variants","","A list of possible variants in `&'static str` form",4,N],[11,"from_str","","",4,[[["str"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[6,"Result","","Short hand for [`Result`] type",N,N],[14,"value_t","","Convenience macro getting a typed value `T` where `T` implements [`std::str::FromStr`] from an argument value. This macro returns a `Result<T,String>` which allows you as the developer to decide what you'd like to do on a failed parse. There are two types of errors, parse failures and those where the argument wasn't present (such as a non-required argument). You can use it to get a single value, or a iterator as with the [`ArgMatches::values_of`]",N,N],[14,"value_t_or_exit","","Convenience macro getting a typed value `T` where `T` implements [`std::str::FromStr`] or exiting upon error, instead of returning a [`Result`] type.",N,N],[14,"values_t","","Convenience macro getting a typed value [`Vec<T>`] where `T` implements [`std::str::FromStr`] This macro returns a [`clap::Result<Vec<T>>`] which allows you as the developer to decide what you'd like to do on a failed parse.",N,N],[14,"values_t_or_exit","","Convenience macro getting a typed value [`Vec<T>`] where `T` implements [`std::str::FromStr`] or exiting upon error.",N,N],[14,"_clap_count_exprs","","Counts the number of comma-delimited expressions passed to it.  The result is a compile-time evaluable expression, suitable for use as a static array size, or the value of a `const`.",N,N],[14,"arg_enum","","Convenience macro to generate more complete enums with variants to be used as a type when parsing arguments. This enum also provides a `variants()` function which can be used to retrieve a `Vec<&'static str>` of the variant names, as well as implementing [`FromStr`] and [`Display`] automatically.",N,N],[14,"crate_version","","Allows you to pull the version from your Cargo.toml at compile time as `MAJOR.MINOR.PATCH_PKGVERSION_PRE`",N,N],[14,"crate_authors","","Allows you to pull the authors for the app from your Cargo.toml at compile time in the form: `\"author1 lastname <author1@example.com>:author2 lastname <author2@example.com>\"`",N,N],[14,"crate_description","","Allows you to pull the description from your Cargo.toml at compile time.",N,N],[14,"crate_name","","Allows you to pull the name from your Cargo.toml at compile time.",N,N],[14,"app_from_crate","","Allows you to build the `App` instance from your Cargo.toml at compile time.",N,N],[14,"clap_app","","Build `App`, `Arg`s, `SubCommand`s and `Group`s with Usage-string like input but without the associated parsing runtime cost.",N,N]],"paths":[[3,"Error"],[4,"ArgSettings"],[4,"AppSettings"],[4,"ErrorKind"],[4,"Shell"],[3,"App"],[3,"Arg"],[3,"ArgMatches"],[3,"Values"],[3,"OsValues"],[3,"SubCommand"],[3,"ArgGroup"]]};
searchIndex["constant_time_eq"]={"doc":"","items":[[5,"constant_time_eq","constant_time_eq","Compares two equal-sized byte strings in constant time.",N,N]],"paths":[]};
searchIndex["crc"]={"doc":"crc Rust implementation of CRC(16, 32, 64)","items":[[0,"crc16","crc","",N,N],[3,"Digest","crc::crc16","",N,N],[5,"make_table","","",N,N],[5,"update","","",N,N],[5,"checksum_x25","","",N,N],[5,"checksum_usb","","",N,N],[17,"X25","","",N,N],[17,"X25_TABLE","","",N,N],[17,"USB","","",N,N],[17,"USB_TABLE","","",N,N],[8,"Hasher16","","",N,N],[10,"reset","","",0,[[["self"]]]],[10,"write","","",0,N],[10,"sum16","","",0,[[["self"]],["u16"]]],[11,"new","","",1,[[["u16"]],["digest"]]],[11,"new_with_initial","","",1,[[["u16"],["u16"]],["digest"]]],[11,"reset","","",1,[[["self"]]]],[11,"write","","",1,N],[11,"sum16","","",1,[[["self"]],["u16"]]],[11,"write","","",1,N],[11,"finish","","",1,[[["self"]],["u64"]]],[0,"crc32","crc","",N,N],[3,"Digest","crc::crc32","",N,N],[5,"make_table","","",N,N],[5,"update","","",N,N],[5,"checksum_ieee","","",N,N],[5,"checksum_castagnoli","","",N,N],[5,"checksum_koopman","","",N,N],[17,"CASTAGNOLI","","",N,N],[17,"CASTAGNOLI_TABLE","","",N,N],[17,"IEEE","","",N,N],[17,"IEEE_TABLE","","",N,N],[17,"KOOPMAN","","",N,N],[17,"KOOPMAN_TABLE","","",N,N],[8,"Hasher32","","",N,N],[10,"reset","","",2,[[["self"]]]],[10,"write","","",2,N],[10,"sum32","","",2,[[["self"]],["u32"]]],[11,"new","","",3,[[["u32"]],["digest"]]],[11,"new_with_initial","","",3,[[["u32"],["u32"]],["digest"]]],[11,"reset","","",3,[[["self"]]]],[11,"write","","",3,N],[11,"sum32","","",3,[[["self"]],["u32"]]],[11,"write","","",3,N],[11,"finish","","",3,[[["self"]],["u64"]]],[0,"crc64","crc","",N,N],[3,"Digest","crc::crc64","",N,N],[5,"make_table","","",N,N],[5,"update","","",N,N],[5,"checksum_ecma","","",N,N],[5,"checksum_iso","","",N,N],[17,"ECMA","","",N,N],[17,"ECMA_TABLE","","",N,N],[17,"ISO","","",N,N],[17,"ISO_TABLE","","",N,N],[8,"Hasher64","","",N,N],[10,"reset","","",4,[[["self"]]]],[10,"write","","",4,N],[10,"sum64","","",4,[[["self"]],["u64"]]],[11,"new","","",5,[[["u64"]],["digest"]]],[11,"new_with_initial","","",5,[[["u64"],["u64"]],["digest"]]],[11,"reset","","",5,[[["self"]]]],[11,"write","","",5,N],[11,"sum64","","",5,[[["self"]],["u64"]]],[11,"write","","",5,N],[11,"finish","","",5,[[["self"]],["u64"]]]],"paths":[[8,"Hasher16"],[3,"Digest"],[8,"Hasher32"],[3,"Digest"],[8,"Hasher64"],[3,"Digest"]]};
searchIndex["crc16"]={"doc":"crc16","items":[[3,"State","crc16","State of crc calculation.",N,N],[4,"ARC","","ARC `poly=0x8005` `check=0xbb3d`",N,N],[4,"AUG_CCITT","","CRC-16/AUG-CCITT `poly=0x1021` `check=0xe5cc`",N,N],[4,"BUYPASS","","CRC-16/BUYPASS `poly=0x8005` `check=0xfee8`",N,N],[4,"CCITT_FALSE","","CRC-16/CCITT-FALSE `poly=0x1021` `check=0x29b1`",N,N],[4,"CDMA2000","","CRC-16/CDMA2000 `poly=0xc867` `check=0x4c06`",N,N],[4,"DDS_110","","CRC-16/DDS-110 `poly=0x1021` `check=0x29b1`",N,N],[4,"DECT_R","","CRC-16/DECT-R `poly=0x0589` `check=0x007e`",N,N],[4,"DECT_X","","CRC-16/DECT-X `poly=0x0589` `check=0x007f`",N,N],[4,"DNP","","CRC-16/DNP `poly=0x3d65` `check=0xea82`",N,N],[4,"EN_13757","","CRC-16/EN-13757 `poly=0x3d65` `check=0xc2b7`",N,N],[4,"GENIBUS","","CRC-16/GENIBUS `poly=0x1021` `check=0xd64e`",N,N],[4,"MAXIM","","CRC-16/MAXIM `poly=0x8005` `check=0x44c2`",N,N],[4,"MCRF4XX","","CRC-16/MCRF4XX `poly=0x1021` `check=0x6f91`",N,N],[4,"RIELLO","","CRC-16/RIELLO `poly=0x1021` `check=0x63d0`",N,N],[4,"T10_DIF","","CRC-16/T10-DIF `poly=0x8bb7` `check=0xd0db`",N,N],[4,"TELEDISK","","CRC-16/TELEDISK `poly=0xa097` `check=0x0fb3`",N,N],[4,"TMS37157","","CRC-16/TMS37157 `poly=0x1021` `check=0x26b1`",N,N],[4,"USB","","CRC-16/USB `poly=0x8005` `check=0xb4c8`",N,N],[4,"CRC_A","","CRC-A `poly=0x1021` `check=0xbf05`",N,N],[4,"KERMIT","","KERMIT `poly=0x1021` `check=0x2189`",N,N],[4,"MODBUS","","MODBUS `poly=0x8005` `check=0x4b37`",N,N],[4,"X_25","","X-25 `poly=0x1021` `check=0x906e`",N,N],[4,"XMODEM","","XMODEM `poly=0x1021` `check=0x31c3`",N,N],[8,"CrcType","","",N,N],[10,"init","","",0,[[],["u16"]]],[10,"update","","",0,N],[10,"get","","",0,[[["u16"]],["u16"]]],[11,"clone","","",1,[[["self"]],["state"]]],[11,"eq","","",1,[[["self"],["state"]],["bool"]]],[11,"ne","","",1,[[["self"],["state"]],["bool"]]],[11,"new","","Creates new state of given CRC type.",1,[[],["state"]]],[11,"update","","Updates state with new data.",1,N],[11,"get","","Returns CRC value of state.",1,[[["self"]],["u16"]]],[11,"calculate","","Calculates CRC value of given type for given message.",1,N],[11,"finish","","",1,[[["self"]],["u64"]]],[11,"write","","",1,N],[11,"default","","",1,[[],["state"]]],[11,"clone","","",2,[[["self"]],["arc"]]],[11,"eq","","",2,[[["self"],["arc"]],["bool"]]],[11,"init","","",2,[[],["u16"]]],[11,"update","","",2,N],[11,"get","","",2,[[["u16"]],["u16"]]],[11,"clone","","",3,[[["self"]],["aug_ccitt"]]],[11,"eq","","",3,[[["self"],["aug_ccitt"]],["bool"]]],[11,"init","","",3,[[],["u16"]]],[11,"update","","",3,N],[11,"get","","",3,[[["u16"]],["u16"]]],[11,"clone","","",4,[[["self"]],["buypass"]]],[11,"eq","","",4,[[["self"],["buypass"]],["bool"]]],[11,"init","","",4,[[],["u16"]]],[11,"update","","",4,N],[11,"get","","",4,[[["u16"]],["u16"]]],[11,"clone","","",5,[[["self"]],["ccitt_false"]]],[11,"eq","","",5,[[["self"],["ccitt_false"]],["bool"]]],[11,"init","","",5,[[],["u16"]]],[11,"update","","",5,N],[11,"get","","",5,[[["u16"]],["u16"]]],[11,"clone","","",6,[[["self"]],["cdma2000"]]],[11,"eq","","",6,[[["self"],["cdma2000"]],["bool"]]],[11,"init","","",6,[[],["u16"]]],[11,"update","","",6,N],[11,"get","","",6,[[["u16"]],["u16"]]],[11,"clone","","",7,[[["self"]],["dds_110"]]],[11,"eq","","",7,[[["self"],["dds_110"]],["bool"]]],[11,"init","","",7,[[],["u16"]]],[11,"update","","",7,N],[11,"get","","",7,[[["u16"]],["u16"]]],[11,"clone","","",8,[[["self"]],["dect_r"]]],[11,"eq","","",8,[[["self"],["dect_r"]],["bool"]]],[11,"init","","",8,[[],["u16"]]],[11,"update","","",8,N],[11,"get","","",8,[[["u16"]],["u16"]]],[11,"clone","","",9,[[["self"]],["dect_x"]]],[11,"eq","","",9,[[["self"],["dect_x"]],["bool"]]],[11,"init","","",9,[[],["u16"]]],[11,"update","","",9,N],[11,"get","","",9,[[["u16"]],["u16"]]],[11,"clone","","",10,[[["self"]],["dnp"]]],[11,"eq","","",10,[[["self"],["dnp"]],["bool"]]],[11,"init","","",10,[[],["u16"]]],[11,"update","","",10,N],[11,"get","","",10,[[["u16"]],["u16"]]],[11,"clone","","",11,[[["self"]],["en_13757"]]],[11,"eq","","",11,[[["self"],["en_13757"]],["bool"]]],[11,"init","","",11,[[],["u16"]]],[11,"update","","",11,N],[11,"get","","",11,[[["u16"]],["u16"]]],[11,"clone","","",12,[[["self"]],["genibus"]]],[11,"eq","","",12,[[["self"],["genibus"]],["bool"]]],[11,"init","","",12,[[],["u16"]]],[11,"update","","",12,N],[11,"get","","",12,[[["u16"]],["u16"]]],[11,"clone","","",13,[[["self"]],["maxim"]]],[11,"eq","","",13,[[["self"],["maxim"]],["bool"]]],[11,"init","","",13,[[],["u16"]]],[11,"update","","",13,N],[11,"get","","",13,[[["u16"]],["u16"]]],[11,"clone","","",14,[[["self"]],["mcrf4xx"]]],[11,"eq","","",14,[[["self"],["mcrf4xx"]],["bool"]]],[11,"init","","",14,[[],["u16"]]],[11,"update","","",14,N],[11,"get","","",14,[[["u16"]],["u16"]]],[11,"clone","","",15,[[["self"]],["riello"]]],[11,"eq","","",15,[[["self"],["riello"]],["bool"]]],[11,"init","","",15,[[],["u16"]]],[11,"update","","",15,N],[11,"get","","",15,[[["u16"]],["u16"]]],[11,"clone","","",16,[[["self"]],["t10_dif"]]],[11,"eq","","",16,[[["self"],["t10_dif"]],["bool"]]],[11,"init","","",16,[[],["u16"]]],[11,"update","","",16,N],[11,"get","","",16,[[["u16"]],["u16"]]],[11,"clone","","",17,[[["self"]],["teledisk"]]],[11,"eq","","",17,[[["self"],["teledisk"]],["bool"]]],[11,"init","","",17,[[],["u16"]]],[11,"update","","",17,N],[11,"get","","",17,[[["u16"]],["u16"]]],[11,"clone","","",18,[[["self"]],["tms37157"]]],[11,"eq","","",18,[[["self"],["tms37157"]],["bool"]]],[11,"init","","",18,[[],["u16"]]],[11,"update","","",18,N],[11,"get","","",18,[[["u16"]],["u16"]]],[11,"clone","","",19,[[["self"]],["usb"]]],[11,"eq","","",19,[[["self"],["usb"]],["bool"]]],[11,"init","","",19,[[],["u16"]]],[11,"update","","",19,N],[11,"get","","",19,[[["u16"]],["u16"]]],[11,"clone","","",20,[[["self"]],["crc_a"]]],[11,"eq","","",20,[[["self"],["crc_a"]],["bool"]]],[11,"init","","",20,[[],["u16"]]],[11,"update","","",20,N],[11,"get","","",20,[[["u16"]],["u16"]]],[11,"clone","","",21,[[["self"]],["kermit"]]],[11,"eq","","",21,[[["self"],["kermit"]],["bool"]]],[11,"init","","",21,[[],["u16"]]],[11,"update","","",21,N],[11,"get","","",21,[[["u16"]],["u16"]]],[11,"clone","","",22,[[["self"]],["modbus"]]],[11,"eq","","",22,[[["self"],["modbus"]],["bool"]]],[11,"init","","",22,[[],["u16"]]],[11,"update","","",22,N],[11,"get","","",22,[[["u16"]],["u16"]]],[11,"clone","","",23,[[["self"]],["x_25"]]],[11,"eq","","",23,[[["self"],["x_25"]],["bool"]]],[11,"init","","",23,[[],["u16"]]],[11,"update","","",23,N],[11,"get","","",23,[[["u16"]],["u16"]]],[11,"clone","","",24,[[["self"]],["xmodem"]]],[11,"eq","","",24,[[["self"],["xmodem"]],["bool"]]],[11,"init","","",24,[[],["u16"]]],[11,"update","","",24,N],[11,"get","","",24,[[["u16"]],["u16"]]]],"paths":[[8,"CrcType"],[3,"State"],[4,"ARC"],[4,"AUG_CCITT"],[4,"BUYPASS"],[4,"CCITT_FALSE"],[4,"CDMA2000"],[4,"DDS_110"],[4,"DECT_R"],[4,"DECT_X"],[4,"DNP"],[4,"EN_13757"],[4,"GENIBUS"],[4,"MAXIM"],[4,"MCRF4XX"],[4,"RIELLO"],[4,"T10_DIF"],[4,"TELEDISK"],[4,"TMS37157"],[4,"USB"],[4,"CRC_A"],[4,"KERMIT"],[4,"MODBUS"],[4,"X_25"],[4,"XMODEM"]]};
searchIndex["crc8"]={"doc":"","items":[[3,"Crc8","crc8","",N,N],[11,"create_msb","","",0,[[["u8"]],["crc8"]]],[11,"create_lsb","","",0,[[["u8"]],["crc8"]]],[11,"calc","","",0,N]],"paths":[[3,"Crc8"]]};
searchIndex["crunchy"]={"doc":"The crunchy unroller - deterministically unroll constant loops. For number \"crunching\".","items":[[14,"unroll","crunchy","Unroll the given for loop",N,N]],"paths":[]};
searchIndex["futures"]={"doc":"Zero-cost Futures in Rust","items":[[4,"Async","futures","Return type of future, indicating whether a value is ready or not.",N,N],[13,"Ready","","Represents that a value is immediately ready.",0,N],[13,"NotReady","","Represents that a value is not ready yet, but may be so later.",0,N],[4,"AsyncSink","","The result of an asynchronous attempt to send a value to a sink.",N,N],[13,"Ready","","The `start_send` attempt succeeded, so the sending process has started; you must use `Sink::poll_complete` to drive the send to completion.",1,N],[13,"NotReady","","The `start_send` attempt failed due to the sink being full. The value being sent is returned, and the current `Task` will be automatically notified again once the sink has room.",1,N],[11,"clone","","",0,[[["self"]],["async"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["async"]],["bool"]]],[11,"ne","","",0,[[["self"],["async"]],["bool"]]],[11,"map","","Change the success value of this `Async` with the closure provided",0,[[["self"],["f"]],["async"]]],[11,"is_ready","","Returns whether this is `Async::Ready`",0,[[["self"]],["bool"]]],[11,"is_not_ready","","Returns whether this is `Async::NotReady`",0,[[["self"]],["bool"]]],[11,"from","","",0,[[["t"]],["async"]]],[11,"clone","","",1,[[["self"]],["asyncsink"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",1,[[["self"],["asyncsink"]],["bool"]]],[11,"ne","","",1,[[["self"],["asyncsink"]],["bool"]]],[11,"map","","Change the NotReady value of this `AsyncSink` with the closure provided",1,[[["self"],["f"]],["asyncsink"]]],[11,"is_ready","","Returns whether this is `AsyncSink::Ready`",1,[[["self"]],["bool"]]],[11,"is_not_ready","","Returns whether this is `AsyncSink::NotReady`",1,[[["self"]],["bool"]]],[0,"future","","Futures",N,N],[3,"Empty","futures::future","A future which is never resolved.",N,N],[3,"Lazy","","A future which defers creation of the actual future until a callback is scheduled.",N,N],[3,"PollFn","","A future which adapts a function returning `Poll`.",N,N],[3,"FutureResult","","A future representing a value that is immediately ready.",N,N],[3,"LoopFn","","A future implementing a tail-recursive loop.",N,N],[3,"AndThen","","Future for the `and_then` combinator, chaining a computation onto the end of another future which completes successfully.",N,N],[3,"Flatten","","Future for the `flatten` combinator, flattening a future-of-a-future to get just the result of the final future.",N,N],[3,"FlattenStream","","Future for the `flatten_stream` combinator, flattening a future-of-a-stream to get just the result of the final stream as a stream.",N,N],[3,"Fuse","","A future which \"fuses\" a future once it's been resolved.",N,N],[3,"IntoStream","","Future that forwards one element from the underlying future (whether it is success of error) and emits EOF after that.",N,N],[3,"Join","","Future for the `join` combinator, waiting for two futures to complete.",N,N],[3,"Join3","","Future for the `join3` combinator, waiting for three futures to complete.",N,N],[3,"Join4","","Future for the `join4` combinator, waiting for four futures to complete.",N,N],[3,"Join5","","Future for the `join5` combinator, waiting for five futures to complete.",N,N],[3,"Map","","Future for the `map` combinator, changing the type of a future.",N,N],[3,"MapErr","","Future for the `map_err` combinator, changing the error type of a future.",N,N],[3,"FromErr","","Future for the `from_err` combinator, changing the error type of a future.",N,N],[3,"OrElse","","Future for the `or_else` combinator, chaining a computation onto the end of a future which fails with an error.",N,N],[3,"Select","","Future for the `select` combinator, waiting for one of two futures to complete.",N,N],[3,"SelectNext","","Future yielded as the second result in a `Select` future.",N,N],[3,"Select2","","Future for the `select2` combinator, waiting for one of two differently-typed futures to complete.",N,N],[3,"Then","","Future for the `then` combinator, chaining computations on the end of another future regardless of its outcome.",N,N],[3,"Inspect","","Do something with the item of a future, passing it on.",N,N],[3,"CatchUnwind","","Future for the `catch_unwind` combinator.",N,N],[3,"JoinAll","","A future which takes a list of futures and resolves with a vector of the completed values.",N,N],[3,"SelectAll","","Future for the `select_all` combinator, waiting for one of any of a list of futures to complete.",N,N],[3,"SelectOk","","Future for the `select_ok` combinator, waiting for one of any of a list of futures to successfully complete. Unlike `select_all`, this future ignores all but the last error, if there are any.",N,N],[3,"Shared","","A future that is cloneable and can be polled in multiple threads. Use `Future::shared()` method to convert any future into a `Shared` future.",N,N],[3,"SharedItem","","A wrapped item of the original future that is cloneable and implements Deref for ease of use.",N,N],[3,"SharedError","","A wrapped error of the original future that is cloneable and implements Deref for ease of use.",N,N],[3,"ExecuteError","","Errors returned from the `Spawn::spawn` function.",N,N],[4,"Loop","","The status of a `loop_fn` loop.",N,N],[13,"Break","","Indicates that the loop has completed with output `T`.",2,N],[13,"Continue","","Indicates that the loop function should be called again with input state `S`.",2,N],[4,"Either","","Combines two different futures yielding the same item and error types into a single type.",N,N],[13,"A","","First branch of the type",3,N],[13,"B","","Second branch of the type",3,N],[4,"ExecuteErrorKind","","Kinds of errors that can be returned from the `Execute::spawn` function.",N,N],[13,"Shutdown","","This executor has shut down and will no longer accept new futures to spawn.",4,N],[13,"NoCapacity","","This executor has no more capacity to run more futures. Other futures need to finish before this executor can accept another.",4,N],[5,"empty","","Creates a future which never resolves, representing a computation that never finishes.",N,[[],["empty"]]],[5,"lazy","","Creates a new future which will eventually be the same as the one created by the closure provided.",N,[[["f"]],["lazy"]]],[5,"poll_fn","","Creates a new future wrapping around a function returning `Poll`.",N,[[["f"]],["pollfn"]]],[5,"result","","Creates a new \"leaf future\" which will resolve with the given result.",N,[[["result"]],["futureresult"]]],[5,"ok","","Creates a \"leaf future\" from an immediate value of a finished and successful computation.",N,[[["t"]],["futureresult"]]],[5,"err","","Creates a \"leaf future\" from an immediate value of a failed computation.",N,[[["e"]],["futureresult"]]],[5,"loop_fn","","Creates a new future implementing a tail-recursive loop.",N,[[["s"],["f"]],["loopfn"]]],[5,"join_all","","Creates a future which represents a collection of the results of the futures given.",N,[[["i"]],["joinall"]]],[5,"select_all","","Creates a new future which will select over a list of futures.",N,[[["i"]],["selectall"]]],[5,"select_ok","","Creates a new future which will select the first successful future over a list of futures.",N,[[["i"]],["selectok"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"poll","","",5,[[["self"]],["poll"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"poll","","",6,[[["self"]],["poll"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"poll","","",7,[[["self"]],["poll"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"clone","","",8,[[["self"]],["futureresult"]]],[11,"poll","","",8,[[["self"]],["poll"]]],[11,"from","","",8,[[["result"]],["self"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"poll","","",9,[[["self"]],["poll"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"poll","","",10,[[["self"]],["poll"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"poll","","",11,[[["self"]],["poll"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"poll","","",12,[[["self"]],["poll",["option"]]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"is_done","","Returns whether the underlying future has finished or not.",13,[[["self"]],["bool"]]],[11,"poll","","",13,[[["self"]],["poll"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"poll","","",14,[[["self"]],["poll",["option"]]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"poll","","",15,[[["self"]],["poll"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"poll","","",16,[[["self"]],["poll"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"poll","","",17,[[["self"]],["poll"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"poll","","",18,[[["self"]],["poll"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"poll","","",19,[[["self"]],["poll"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"poll","","",20,[[["self"]],["poll"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"poll","","",21,[[["self"]],["poll"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"poll","","",22,[[["self"]],["poll"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"poll","","",23,[[["self"]],["poll"]]],[11,"poll","","",24,[[["self"]],["poll"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"poll","","",25,[[["self"]],["poll"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"poll","","",26,[[["self"]],["poll"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"split","","Splits out the homogeneous type from an either of tuples.",3,N],[11,"poll","","",3,[[["self"]],["poll"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"poll","","",27,[[["self"]],["poll"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"poll","","",28,[[["self"]],["poll"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"poll","","",29,[[["self"]],["poll"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"poll","","",30,[[["self"]],["poll"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"poll","","",31,[[["self"]],["poll"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"peek","","If any clone of this `Shared` has completed execution, returns its result immediately without blocking. Otherwise, returns None without triggering the work represented by this `Shared`.",32,[[["self"]],["option",["result"]]]],[11,"poll","","",32,[[["self"]],["poll"]]],[11,"clone","","",32,[[["self"]],["self"]]],[11,"drop","","",32,[[["self"]]]],[11,"clone","","",33,[[["self"]],["shareditem"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"deref","","",33,[[["self"]],["t"]]],[11,"clone","","",34,[[["self"]],["sharederror"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"deref","","",34,[[["self"]],["e"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"description","","",34,[[["self"]],["str"]]],[11,"cause","","",34,[[["self"]],["option",["error"]]]],[8,"Future","","Trait for types which are a placeholder of a value that may become available at some later point in time.",N,N],[16,"Item","","The type of value that this future will resolved with if it is successful.",35,N],[16,"Error","","The type of error that this future will resolve with if it fails in a normal fashion.",35,N],[10,"poll","","Query this future to see if its value has become available, registering interest if it is not.",35,[[["self"]],["poll"]]],[11,"wait","","Block the current thread until this future is resolved.",35,[[["self"]],["result"]]],[11,"map","","Map this future's result to a different type, returning a new future of the resulting type.",35,[[["self"],["f"]],["map"]]],[11,"map_err","","Map this future's error to a different error, returning a new future.",35,[[["self"],["f"]],["maperr"]]],[11,"from_err","","Map this future's error to any error implementing `From` for this future's `Error`, returning a new future.",35,[[["self"]],["fromerr"]]],[11,"then","","Chain on a computation for when a future finished, passing the result of the future to the provided closure `f`.",35,[[["self"],["f"]],["then"]]],[11,"and_then","","Execute another future after this one has resolved successfully.",35,[[["self"],["f"]],["andthen"]]],[11,"or_else","","Execute another future if this one resolves with an error.",35,[[["self"],["f"]],["orelse"]]],[11,"select","","Waits for either one of two futures to complete.",35,[[["self"],["b"]],["select"]]],[11,"select2","","Waits for either one of two differently-typed futures to complete.",35,[[["self"],["b"]],["select2"]]],[11,"join","","Joins the result of two futures, waiting for them both to complete.",35,[[["self"],["b"]],["join"]]],[11,"join3","","Same as `join`, but with more futures.",35,[[["self"],["b"],["c"]],["join3"]]],[11,"join4","","Same as `join`, but with more futures.",35,[[["self"],["b"],["c"],["d"]],["join4"]]],[11,"join5","","Same as `join`, but with more futures.",35,[[["self"],["b"],["c"],["d"],["e"]],["join5"]]],[11,"into_stream","","Convert this future into a single element stream.",35,[[["self"]],["intostream"]]],[11,"flatten","","Flatten the execution of this future when the successful result of this future is itself another future.",35,[[["self"]],["flatten"]]],[11,"flatten_stream","","Flatten the execution of this future when the successful result of this future is a stream.",35,[[["self"]],["flattenstream"]]],[11,"fuse","","Fuse a future such that `poll` will never again be called once it has completed.",35,[[["self"]],["fuse"]]],[11,"inspect","","Do something with the item of a future, passing it on.",35,[[["self"],["f"]],["inspect"]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",35,[[["self"]],["catchunwind"]]],[11,"shared","","Create a cloneable handle to this future where all handles will resolve to the same result.",35,[[["self"]],["shared"]]],[8,"IntoFuture","","Class of types which can be converted into a future.",N,N],[16,"Future","","The future that this type can be converted into.",36,N],[16,"Item","","The item that the future may resolve with.",36,N],[16,"Error","","The error that the future may resolve with.",36,N],[10,"into_future","","Consumes this object and produces a future.",36,N],[8,"FutureFrom","","Asynchronous conversion from a type `T`.",N,N],[16,"Future","","The future for the conversion.",37,N],[16,"Error","","Possible errors during conversion.",37,N],[10,"future_from","","Consume the given value, beginning the conversion.",37,N],[8,"Executor","","A trait for types which can spawn fresh futures.",N,N],[10,"execute","","Spawns a future to run on this `Executor`, typically in the \"background\".",38,[[["self"],["f"]],["result",["executeerror"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"clone","","",4,[[["self"]],["executeerrorkind"]]],[11,"eq","","",4,[[["self"],["executeerrorkind"]],["bool"]]],[11,"new","","Create a new `ExecuteError`",39,[[["executeerrorkind"],["f"]],["executeerror"]]],[11,"kind","","Returns the associated reason for the error",39,[[["self"]],["executeerrorkind"]]],[11,"into_future","","Consumes self and returns the original future that was spawned.",39,[[["self"]],["f"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[0,"stream","futures","Asynchronous streams",N,N],[3,"Iter","futures::stream","A stream which is just a shim over an underlying instance of `Iterator`.",N,N],[3,"IterStream","","A stream which is just a shim over an underlying instance of `Iterator`.",N,N],[3,"IterOk","","A stream which is just a shim over an underlying instance of `Iterator`.",N,N],[3,"IterResult","","A stream which is just a shim over an underlying instance of `Iterator`.",N,N],[3,"Repeat","","Stream that produces the same element repeatedly.",N,N],[3,"AndThen","","A stream combinator which chains a computation onto values produced by a stream.",N,N],[3,"Chain","","An adapter for chaining the output of two streams.",N,N],[3,"Concat","","A stream combinator to concatenate the results of a stream into the first yielded item.",N,N],[3,"Concat2","","A stream combinator to concatenate the results of a stream into the first yielded item.",N,N],[3,"Empty","","A stream which contains no elements.",N,N],[3,"Filter","","A stream combinator used to filter the results of a stream and only yield some values.",N,N],[3,"FilterMap","","A combinator used to filter the results of a stream and simultaneously map them to a different type.",N,N],[3,"Flatten","","A combinator used to flatten a stream-of-streams into one long stream of elements.",N,N],[3,"Fold","","A future used to collect all the results of a stream into one generic type.",N,N],[3,"ForEach","","A stream combinator which executes a unit closure over each item on a stream.",N,N],[3,"FromErr","","A stream combinator to change the error type of a stream.",N,N],[3,"Fuse","","A stream which \"fuse\"s a stream once it's terminated.",N,N],[3,"StreamFuture","","A combinator used to temporarily convert a stream into a future.",N,N],[3,"Inspect","","Do something with the items of a stream, passing it on.",N,N],[3,"InspectErr","","Do something with the error of a stream, passing it on.",N,N],[3,"Map","","A stream combinator which will change the type of a stream from one type to another.",N,N],[3,"MapErr","","A stream combinator which will change the error type of a stream from one type to another.",N,N],[3,"Merge","","An adapter for merging the output of two streams.",N,N],[3,"Once","","A stream which emits single element and then EOF.",N,N],[3,"OrElse","","A stream combinator which chains a computation onto errors produced by a stream.",N,N],[3,"Peekable","","A `Stream` that implements a `peek` method.",N,N],[3,"PollFn","","A stream which adapts a function returning `Poll`.",N,N],[3,"Select","","An adapter for merging the output of two streams.",N,N],[3,"Skip","","A stream combinator which skips a number of elements before continuing.",N,N],[3,"SkipWhile","","A stream combinator which skips elements of a stream while a predicate holds.",N,N],[3,"Take","","A stream combinator which returns a maximum number of elements.",N,N],[3,"TakeWhile","","A stream combinator which takes elements from a stream while a predicate holds.",N,N],[3,"Then","","A stream combinator which chains a computation onto each item produced by a stream.",N,N],[3,"Unfold","","A stream which creates futures, polls them and return their result",N,N],[3,"Zip","","An adapter for merging the output of two streams.",N,N],[3,"Forward","","Future for the `Stream::forward` combinator, which sends a stream of values to a sink and then waits until the sink has fully flushed those values.",N,N],[3,"Buffered","","An adaptor for a stream of futures to execute the futures concurrently, if possible.",N,N],[3,"BufferUnordered","","An adaptor for a stream of futures to execute the futures concurrently, if possible, delivering results as they become available.",N,N],[3,"CatchUnwind","","Stream for the `catch_unwind` combinator.",N,N],[3,"Chunks","","An adaptor that chunks up elements in a vector.",N,N],[3,"Collect","","A future which collects all of the values of a stream into a vector.",N,N],[3,"Wait","","A stream combinator which converts an asynchronous stream to a blocking iterator.",N,N],[3,"SplitStream","","A `Stream` part of the split pair",N,N],[3,"SplitSink","","A `Sink` part of the split pair",N,N],[3,"ReuniteError","","Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves of a `Stream + Split`, and thus could not be `reunite`d.",N,N],[12,"0","","",40,N],[12,"1","","",40,N],[3,"FuturesOrdered","","An unbounded queue of futures.",N,N],[4,"MergedItem","","An item returned from a merge stream, which represents an item from one or both of the underlying streams.",N,N],[13,"First","","An item from the first stream",41,N],[13,"Second","","An item from the second stream",41,N],[13,"Both","","Items from both streams",41,N],[5,"iter","","Converts an `Iterator` over `Result`s into a `Stream` which is always ready to yield the next value.",N,[[["j"]],["iter"]]],[5,"iter_ok","","Converts an `Iterator` into a `Stream` which is always ready to yield the next value.",N,[[["i"]],["iterok"]]],[5,"iter_result","","Converts an `Iterator` over `Result`s into a `Stream` which is always ready to yield the next value.",N,[[["j"]],["iterresult"]]],[5,"repeat","","Create a stream which produces the same item repeatedly.",N,[[["t"]],["repeat"]]],[5,"empty","","Creates a stream which contains no elements.",N,[[],["empty"]]],[5,"once","","Creates a stream of single element",N,[[["result"]],["once"]]],[5,"poll_fn","","Creates a new stream wrapping around a function returning `Poll`.",N,[[["f"]],["pollfn"]]],[5,"unfold","","Creates a `Stream` from a seed and a closure returning a `Future`.",N,[[["t"],["f"]],["unfold"]]],[5,"futures_ordered","","Converts a list of futures into a `Stream` of results from the futures.",N,[[["i"]],["futuresordered"]]],[5,"futures_unordered","","Converts a list of futures into a `Stream` of results from the futures.",N,[[["i"]],["futuresunordered"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"poll","","",42,[[["self"]],["poll",["option"]]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"poll","","",43,[[["self"]],["poll",["option"]]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"poll","","",44,[[["self"]],["poll",["option"]]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"poll","","",45,[[["self"]],["poll",["option"]]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",46,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",46,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",46,[[["self"]],["s"]]],[11,"start_send","","",46,N],[11,"poll_complete","","",46,[[["self"]],["poll"]]],[11,"close","","",46,[[["self"]],["poll"]]],[11,"poll","","",46,[[["self"]],["poll",["option"]]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"poll","","",47,[[["self"]],["poll",["option"]]]],[11,"fmt","","",48,[[["self"],["formatter"]],["fmtresult"]]],[11,"poll","","",48,[[["self"]],["poll"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["fmtresult"]]],[11,"poll","","",49,[[["self"]],["poll"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"poll","","",50,[[["self"]],["poll",["option"]]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",51,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",51,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",51,[[["self"]],["s"]]],[11,"start_send","","",51,N],[11,"poll_complete","","",51,[[["self"]],["poll"]]],[11,"close","","",51,[[["self"]],["poll"]]],[11,"poll","","",51,[[["self"]],["poll",["option"]]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",52,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",52,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",52,[[["self"]],["s"]]],[11,"start_send","","",52,N],[11,"poll_complete","","",52,[[["self"]],["poll"]]],[11,"close","","",52,[[["self"]],["poll"]]],[11,"poll","","",52,[[["self"]],["poll",["option"]]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",53,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",53,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",53,[[["self"]],["s"]]],[11,"start_send","","",53,N],[11,"poll_complete","","",53,[[["self"]],["poll"]]],[11,"close","","",53,[[["self"]],["poll"]]],[11,"poll","","",53,[[["self"]],["poll",["option"]]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"poll","","",54,[[["self"]],["poll"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"poll","","",55,[[["self"]],["poll"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",56,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",56,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",56,[[["self"]],["s"]]],[11,"poll","","",56,[[["self"]],["poll",["option"]]]],[11,"start_send","","",56,N],[11,"poll_complete","","",56,[[["self"]],["poll"]]],[11,"close","","",56,[[["self"]],["poll"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"start_send","","",57,N],[11,"poll_complete","","",57,[[["self"]],["poll"]]],[11,"close","","",57,[[["self"]],["poll"]]],[11,"poll","","",57,[[["self"]],["poll",["option"]]]],[11,"is_done","","Returns whether the underlying stream has finished or not.",57,[[["self"]],["bool"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",57,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",57,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",57,[[["self"]],["s"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",58,[[["self"]],["option"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",58,[[["self"]],["option"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",58,[[["self"]],["option"]]],[11,"poll","","",58,[[["self"]],["poll"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",59,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",59,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",59,[[["self"]],["s"]]],[11,"start_send","","",59,N],[11,"poll_complete","","",59,[[["self"]],["poll"]]],[11,"close","","",59,[[["self"]],["poll"]]],[11,"poll","","",59,[[["self"]],["poll",["option"]]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",60,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",60,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",60,[[["self"]],["s"]]],[11,"start_send","","",60,N],[11,"poll_complete","","",60,[[["self"]],["poll"]]],[11,"close","","",60,[[["self"]],["poll"]]],[11,"poll","","",60,[[["self"]],["poll",["option"]]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",61,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",61,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",61,[[["self"]],["s"]]],[11,"start_send","","",61,N],[11,"poll_complete","","",61,[[["self"]],["poll"]]],[11,"close","","",61,[[["self"]],["poll"]]],[11,"poll","","",61,[[["self"]],["poll",["option"]]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",62,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",62,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",62,[[["self"]],["s"]]],[11,"start_send","","",62,N],[11,"poll_complete","","",62,[[["self"]],["poll"]]],[11,"close","","",62,[[["self"]],["poll"]]],[11,"poll","","",62,[[["self"]],["poll",["option"]]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"poll","","",63,[[["self"]],["poll",["option"]]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"poll","","",64,[[["self"]],["poll",["option"]]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"start_send","","",65,N],[11,"poll_complete","","",65,[[["self"]],["poll"]]],[11,"close","","",65,[[["self"]],["poll"]]],[11,"poll","","",65,[[["self"]],["poll",["option"]]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"start_send","","",66,N],[11,"poll_complete","","",66,[[["self"]],["poll"]]],[11,"close","","",66,[[["self"]],["poll"]]],[11,"poll","","",66,[[["self"]],["poll",["option"]]]],[11,"peek","","Peek retrieves a reference to the next item in the stream.",66,[[["self"]],["poll",["option"]]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"poll","","",67,[[["self"]],["poll",["option"]]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"poll","","",68,[[["self"]],["poll",["option"]]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",69,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",69,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",69,[[["self"]],["s"]]],[11,"start_send","","",69,N],[11,"poll_complete","","",69,[[["self"]],["poll"]]],[11,"close","","",69,[[["self"]],["poll"]]],[11,"poll","","",69,[[["self"]],["poll",["option"]]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",70,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",70,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",70,[[["self"]],["s"]]],[11,"start_send","","",70,N],[11,"poll_complete","","",70,[[["self"]],["poll"]]],[11,"close","","",70,[[["self"]],["poll"]]],[11,"poll","","",70,[[["self"]],["poll",["option"]]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",71,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",71,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",71,[[["self"]],["s"]]],[11,"start_send","","",71,N],[11,"poll_complete","","",71,[[["self"]],["poll"]]],[11,"close","","",71,[[["self"]],["poll"]]],[11,"poll","","",71,[[["self"]],["poll",["option"]]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",72,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",72,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",72,[[["self"]],["s"]]],[11,"start_send","","",72,N],[11,"poll_complete","","",72,[[["self"]],["poll"]]],[11,"close","","",72,[[["self"]],["poll"]]],[11,"poll","","",72,[[["self"]],["poll",["option"]]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"start_send","","",73,N],[11,"poll_complete","","",73,[[["self"]],["poll"]]],[11,"close","","",73,[[["self"]],["poll"]]],[11,"poll","","",73,[[["self"]],["poll",["option"]]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"poll","","",74,[[["self"]],["poll",["option"]]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"poll","","",75,[[["self"]],["poll",["option"]]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"sink_ref","","Get a shared reference to the inner sink. If this combinator has already been polled to completion, None will be returned.",76,[[["self"]],["option"]]],[11,"sink_mut","","Get a mutable reference to the inner sink. If this combinator has already been polled to completion, None will be returned.",76,[[["self"]],["option"]]],[11,"stream_ref","","Get a shared reference to the inner stream. If this combinator has already been polled to completion, None will be returned.",76,[[["self"]],["option"]]],[11,"stream_mut","","Get a mutable reference to the inner stream. If this combinator has already been polled to completion, None will be returned.",76,[[["self"]],["option"]]],[11,"poll","","",76,[[["self"]],["poll"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",77,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",77,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",77,[[["self"]],["s"]]],[11,"start_send","","",77,N],[11,"poll_complete","","",77,[[["self"]],["poll"]]],[11,"close","","",77,[[["self"]],["poll"]]],[11,"poll","","",77,[[["self"]],["poll",["option"]]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",78,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",78,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",78,[[["self"]],["s"]]],[11,"poll","","",78,[[["self"]],["poll",["option"]]]],[11,"start_send","","",78,N],[11,"poll_complete","","",78,[[["self"]],["poll"]]],[11,"close","","",78,[[["self"]],["poll"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"poll","","",79,[[["self"]],["poll",["option"]]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"start_send","","",80,N],[11,"poll_complete","","",80,[[["self"]],["poll"]]],[11,"close","","",80,[[["self"]],["poll"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",80,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",80,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",80,[[["self"]],["s"]]],[11,"poll","","",80,[[["self"]],["poll",["option"]]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"poll","","",81,[[["self"]],["poll",["vec"]]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",82,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",82,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",82,[[["self"]],["s"]]],[11,"next","","",82,[[["self"]],["option"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream + Sink` back together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are a matching pair originating from the same call to `Stream::split`.",83,[[["self"],["splitsink"]],["result",["reuniteerror"]]]],[11,"poll","","",83,[[["self"]],["poll",["option"]]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream + Sink` back together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are a matching pair originating from the same call to `Stream::split`.",84,[[["self"],["splitstream"]],["result",["reuniteerror"]]]],[11,"start_send","","",84,N],[11,"poll_complete","","",84,[[["self"]],["poll"]]],[11,"close","","",84,[[["self"]],["poll"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"description","","",40,[[["self"]],["str"]]],[0,"futures_unordered","","An unbounded set of futures.",N,N],[3,"FuturesUnordered","futures::stream::futures_unordered","An unbounded set of futures.",N,N],[3,"IterMut","","Mutable iterator over all futures in the unordered set.",N,N],[11,"new","","Constructs a new, empty `FuturesUnordered`",85,[[],["futuresunordered"]]],[11,"len","","Returns the number of futures contained in the set.",85,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the set contains no futures",85,[[["self"]],["bool"]]],[11,"push","","Push a future into the set.",85,[[["self"],["t"]]]],[11,"iter_mut","","Returns an iterator that allows modifying each future in the set.",85,[[["self"]],["itermut"]]],[11,"poll","","",85,[[["self"]],["poll",["option"]]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"drop","","",85,[[["self"]]]],[11,"from_iter","","",85,[[["t"]],["self"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"next","","",86,[[["self"]],["option"]]],[11,"size_hint","","",86,N],[11,"new","futures::stream","Constructs a new, empty `FuturesOrdered`",87,[[],["futuresordered"]]],[11,"len","","Returns the number of futures contained in the queue.",87,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the queue contains no futures",87,[[["self"]],["bool"]]],[11,"push","","Push a future into the queue.",87,[[["self"],["t"]]]],[11,"poll","","",87,[[["self"]],["poll",["option"]]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"from_iter","","",87,[[["t"]],["self"]]],[8,"Stream","","A stream of values, not all of which may have been produced yet.",N,N],[16,"Item","","The type of item this stream will yield on success.",88,N],[16,"Error","","The type of error this stream may generate.",88,N],[10,"poll","","Attempt to pull out the next value of this stream, returning `None` if the stream is finished.",88,[[["self"]],["poll",["option"]]]],[11,"wait","","Creates an iterator which blocks the current thread until each item of this stream is resolved.",88,[[["self"]],["wait"]]],[11,"into_future","","Converts this stream into a `Future`.",88,[[["self"]],["streamfuture"]]],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",88,[[["self"],["f"]],["map"]]],[11,"map_err","","Converts a stream of error type `T` to a stream of error type `U`.",88,[[["self"],["f"]],["maperr"]]],[11,"filter","","Filters the values produced by this stream according to the provided predicate.",88,[[["self"],["f"]],["filter"]]],[11,"filter_map","","Filters the values produced by this stream while simultaneously mapping them to a different type.",88,[[["self"],["f"]],["filtermap"]]],[11,"then","","Chain on a computation for when a value is ready, passing the resulting item to the provided closure `f`.",88,[[["self"],["f"]],["then"]]],[11,"and_then","","Chain on a computation for when a value is ready, passing the successful results to the provided closure `f`.",88,[[["self"],["f"]],["andthen"]]],[11,"or_else","","Chain on a computation for when an error happens, passing the erroneous result to the provided closure `f`.",88,[[["self"],["f"]],["orelse"]]],[11,"collect","","Collect all of the values of this stream into a vector, returning a future representing the result of that computation.",88,[[["self"]],["collect"]]],[11,"concat2","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",88,[[["self"]],["concat2"]]],[11,"concat","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",88,[[["self"]],["concat"]]],[11,"fold","","Execute an accumulating computation over a stream, collecting all the values into one final result.",88,[[["self"],["t"],["f"]],["fold"]]],[11,"flatten","","Flattens a stream of streams into just one continuous stream.",88,[[["self"]],["flatten"]]],[11,"skip_while","","Skip elements on this stream while the predicate provided resolves to `true`.",88,[[["self"],["p"]],["skipwhile"]]],[11,"take_while","","Take elements from this stream while the predicate provided resolves to `true`.",88,[[["self"],["p"]],["takewhile"]]],[11,"for_each","","Runs this stream to completion, executing the provided closure for each element on the stream.",88,[[["self"],["f"]],["foreach"]]],[11,"from_err","","Map this stream's error to any error implementing `From` for this stream's `Error`, returning a new stream.",88,[[["self"]],["fromerr"]]],[11,"take","","Creates a new stream of at most `amt` items of the underlying stream.",88,[[["self"],["u64"]],["take"]]],[11,"skip","","Creates a new stream which skips `amt` items of the underlying stream.",88,[[["self"],["u64"]],["skip"]]],[11,"fuse","","Fuse a stream such that `poll` will never again be called once it has finished.",88,[[["self"]],["fuse"]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",88,[[["self"]],["self"]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",88,[[["self"]],["catchunwind"]]],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",88,[[["self"],["usize"]],["buffered"]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures (unordered).",88,[[["self"],["usize"]],["bufferunordered"]]],[11,"merge","","An adapter for merging the output of two streams.",88,[[["self"],["s"]],["merge"]]],[11,"zip","","An adapter for zipping two streams together.",88,[[["self"],["s"]],["zip"]]],[11,"chain","","Adapter for chaining two stream.",88,[[["self"],["s"]],["chain"]]],[11,"peekable","","Creates a new stream which exposes a `peek` method.",88,[[["self"]],["peekable"]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a vector.",88,[[["self"],["usize"]],["chunks"]]],[11,"select","","Creates a stream that selects the next element from either this stream or the provided one, whichever is ready first.",88,[[["self"],["s"]],["select"]]],[11,"forward","","A future that completes after the given stream has been fully processed into the sink, including flushing.",88,[[["self"],["s"]],["forward"]]],[11,"split","","Splits this `Stream + Sink` object into separate `Stream` and `Sink` objects.",88,N],[11,"inspect","","Do something with each item of this stream, afterwards passing it on.",88,[[["self"],["f"]],["inspect"]]],[11,"inspect_err","","Do something with the error of this stream, afterwards passing it on.",88,[[["self"],["f"]],["inspecterr"]]],[0,"sink","futures","Asynchronous sinks",N,N],[3,"Buffer","futures::sink","Sink for the `Sink::buffer` combinator, which buffers up to some fixed number of values when the underlying sink is unable to accept them.",N,N],[3,"Wait","","A sink combinator which converts an asynchronous sink to a blocking sink.",N,N],[3,"With","","Sink for the `Sink::with` combinator, chaining a computation to run prior to pushing a value into the underlying sink.",N,N],[3,"WithFlatMap","","Sink for the `Sink::with_flat_map` combinator, chaining a computation that returns an iterator to run prior to pushing a value into the underlying sink",N,N],[3,"Flush","","Future for the `Sink::flush` combinator, which polls the sink until all data has been flushed.",N,N],[3,"Send","","Future for the `Sink::send` combinator, which sends a value to a sink and then waits until the sink has fully flushed.",N,N],[3,"SendAll","","Future for the `Sink::send_all` combinator, which sends a stream of values to a sink and then waits until the sink has fully flushed those values.",N,N],[3,"SinkMapErr","","Sink for the `Sink::sink_map_err` combinator.",N,N],[3,"SinkFromErr","","A sink combinator to change the error type of a sink.",N,N],[3,"Fanout","","Sink that clones incoming items and forwards them to two sinks at the same time.",N,N],[11,"clone","","",89,[[["self"]],["with"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"poll","","",89,[[["self"]],["poll",["option"]]]],[11,"get_ref","","Get a shared reference to the inner sink.",89,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",89,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",89,[[["self"]],["s"]]],[11,"start_send","","",89,N],[11,"poll_complete","","",89,[[["self"]],["poll"]]],[11,"close","","",89,[[["self"]],["poll"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Get a shared reference to the inner sink.",90,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",90,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",90,[[["self"]],["s"]]],[11,"poll","","",90,[[["self"]],["poll",["option"]]]],[11,"start_send","","",90,N],[11,"poll_complete","","",90,[[["self"]],["poll"]]],[11,"close","","",90,[[["self"]],["poll"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Get a shared reference to the inner sink.",91,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",91,[[["self"]],["s"]]],[11,"into_inner","","Consume the `Flush` and return the inner sink.",91,[[["self"]],["s"]]],[11,"poll","","",91,[[["self"]],["poll"]]],[11,"clone","","",92,[[["self"]],["sinkfromerr"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Get a shared reference to the inner sink.",92,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",92,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",92,[[["self"]],["s"]]],[11,"start_send","","",92,N],[11,"poll_complete","","",92,[[["self"]],["poll"]]],[11,"close","","",92,[[["self"]],["poll"]]],[11,"poll","","",92,[[["self"]],["poll",["option"]]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Get a shared reference to the inner sink.",93,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",93,[[["self"]],["s"]]],[11,"poll","","",93,[[["self"]],["poll"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"poll","","",94,[[["self"]],["poll"]]],[11,"clone","","",95,[[["self"]],["sinkmaperr"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Get a shared reference to the inner sink.",95,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",95,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",95,[[["self"]],["s"]]],[11,"start_send","","",95,N],[11,"poll_complete","","",95,[[["self"]],["poll"]]],[11,"close","","",95,[[["self"]],["poll"]]],[11,"poll","","",95,[[["self"]],["poll",["option"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sinks.",96,N],[11,"fmt","","",96,[[["self"],["formatter"]],["fmtresult"]]],[11,"start_send","","",96,N],[11,"poll_complete","","",96,[[["self"]],["poll"]]],[11,"close","","",96,[[["self"]],["poll"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Get a shared reference to the inner sink.",97,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",97,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",97,[[["self"]],["s"]]],[11,"poll","","",97,[[["self"]],["poll",["option"]]]],[11,"start_send","","",97,N],[11,"poll_complete","","",97,[[["self"]],["poll"]]],[11,"close","","",97,[[["self"]],["poll"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"send","","Sends a value to this sink, blocking the current thread until it's able to do so.",98,N],[11,"flush","","Flushes any buffered data in this sink, blocking the current thread until it's entirely flushed.",98,[[["self"]],["result"]]],[11,"close","","Close this sink, blocking the current thread until it's entirely closed.",98,[[["self"]],["result"]]],[6,"BoxSink","","A type alias for `Box<Sink + Send>`",N,N],[8,"Sink","","A `Sink` is a value into which other values can be sent, asynchronously.",N,N],[16,"SinkItem","","The type of value that the sink accepts.",99,N],[16,"SinkError","","The type of value produced by the sink when an error occurs.",99,N],[10,"start_send","","Begin the process of sending a value to the sink.",99,N],[10,"poll_complete","","Flush all output from this sink, if necessary.",99,[[["self"]],["poll"]]],[11,"close","","A method to indicate that no more values will ever be pushed into this sink.",99,[[["self"]],["poll"]]],[11,"wait","","Creates a new object which will produce a synchronous sink.",99,[[["self"]],["wait"]]],[11,"with","","Composes a function in front of the sink.",99,[[["self"],["f"]],["with"]]],[11,"with_flat_map","","Composes a function in front of the sink.",99,[[["self"],["f"]],["withflatmap"]]],[11,"sink_map_err","","Transforms the error returned by the sink.",99,[[["self"],["f"]],["sinkmaperr"]]],[11,"sink_from_err","","Map this sink's error to any error implementing `From` for this sink's `Error`, returning a new sink.",99,[[["self"]],["sinkfromerr"]]],[11,"buffer","","Adds a fixed-size buffer to the current sink.",99,[[["self"],["usize"]],["buffer"]]],[11,"fanout","","Fanout items to multiple sinks.",99,[[["self"],["s"]],["fanout"]]],[11,"flush","","A future that completes when the sink has finished processing all pending requests.",99,[[["self"]],["flush"]]],[11,"send","","A future that completes after the given item has been fully processed into the sink, including flushing.",99,N],[11,"send_all","","A future that completes after the given stream has been fully processed into the sink, including flushing.",99,[[["self"],["s"]],["sendall"]]],[0,"task","futures","Tasks used to drive a future computation",N,N],[3,"Task","futures::task","A handle to a \"task\", which represents a single lightweight \"thread\" of execution driving a future to completion.",N,N],[3,"AtomicTask","","A synchronization primitive for task notification.",N,N],[3,"LocalKey","","A key for task-local data stored in a future's task.",N,N],[3,"UnparkEvent","","A set insertion to trigger upon `unpark`.",N,N],[5,"current","","Returns a handle to the current task to call `notify` at a later date.",N,[[],["task"]]],[5,"init","","Initialize the `futures` task system.",N,N],[5,"with_unpark_event","","For the duration of the given callback, add an \"unpark event\" to be triggered when the task handle is used to unpark the task.",N,[[["unparkevent"],["f"]],["r"]]],[8,"EventSet","","A concurrent set which allows for the insertion of `usize` values.",N,N],[10,"insert","","Insert the given ID into the set",100,[[["self"],["usize"]]]],[0,"executor","futures","Executors",N,N],[3,"Spawn","futures::executor","Representation of a spawned future/stream.",N,N],[3,"NotifyHandle","","A `NotifyHandle` is the core value through which notifications are routed in the `futures` crate.",N,N],[5,"spawn","","Spawns a future or stream, returning it and the new task responsible for running it to completion.",N,[[["t"]],["spawn"]]],[5,"with_notify","","Sets the `NotifyHandle` of the current task for the duration of the provided closure.",N,[[["t"],["usize"],["f"]],["r"]]],[8,"Notify","","A trait which represents a sink of notifications that a future is ready to make progress.",N,N],[10,"notify","","Indicates that an associated future and/or task are ready to make progress.",101,[[["self"],["usize"]]]],[11,"clone_id","","This function is called whenever a new copy of `id` is needed.",101,[[["self"],["usize"]],["usize"]]],[11,"drop_id","","All instances of `Task` store an `id` that they're going to internally notify with, and this function is called when the `Task` is dropped.",101,[[["self"],["usize"]]]],[8,"UnsafeNotify","","An unsafe trait for implementing custom forms of memory management behind a `Task`.",N,N],[10,"clone_raw","","Creates a new `NotifyHandle` from this instance of `UnsafeNotify`.",102,[[["self"]],["notifyhandle"]]],[10,"drop_raw","","Drops this instance of `UnsafeNotify`, deallocating resources associated with it.",102,[[["self"]]]],[0,"sync","futures","Future-aware synchronization",N,N],[3,"BiLock","futures::sync","A type of futures-powered synchronization primitive which is a mutex between two possible owners.",N,N],[3,"BiLockGuard","","Returned RAII guard from the `poll_lock` method.",N,N],[3,"BiLockAcquire","","Future returned by `BiLock::lock` which will resolve when the lock is acquired.",N,N],[3,"BiLockAcquired","","Resolved value of the `BiLockAcquire<T>` future.",N,N],[0,"oneshot","","A one-shot, futures-aware channel",N,N],[3,"Receiver","futures::sync::oneshot","A future representing the completion of a computation happening elsewhere in memory.",N,N],[3,"Sender","","Represents the completion half of a oneshot through which the result of a computation is signaled.",N,N],[3,"Canceled","","Error returned from a `Receiver<T>` whenever the corresponding `Sender<T>` is dropped.",N,N],[3,"SpawnHandle","","Handle returned from the `spawn` function.",N,N],[3,"Execute","","Type of future which `Execute` instances below must be able to spawn.",N,N],[5,"channel","","Creates a new futures-aware, one-shot channel.",N,N],[5,"spawn","","Spawns a `future` onto the instance of `Executor` provided, `executor`, returning a handle representing the completion of the future.",N,[[["f"],["e"]],["spawnhandle"]]],[5,"spawn_fn","","Spawns a function `f` onto the `Spawn` instance provided `s`.",N,[[["f"],["e"]],["spawnhandle"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result"]]],[11,"send","","Completes this oneshot with a successful result.",104,[[["self"],["t"]],["result"]]],[11,"poll_cancel","","Polls this `Sender` half to detect whether the `Receiver` this has paired with has gone away.",104,[[["self"]],["poll"]]],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding `Receiver` has gone away.",104,[[["self"]],["bool"]]],[11,"drop","","",104,[[["self"]]]],[11,"clone","","",105,[[["self"]],["canceled"]]],[11,"eq","","",105,[[["self"],["canceled"]],["bool"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"description","","",105,[[["self"]],["str"]]],[11,"close","","Gracefully close this receiver, preventing sending any future messages.",103,[[["self"]]]],[11,"poll","","",103,[[["self"]],["poll",["canceled"]]]],[11,"drop","","",103,[[["self"]]]],[11,"forget","","Drop this future without canceling the underlying future.",106,[[["self"]]]],[11,"poll","","",106,[[["self"]],["poll"]]],[11,"fmt","","",106,[[["self"],["formatter"]],["result"]]],[11,"drop","","",106,[[["self"]]]],[11,"poll","","",107,[[["self"]],["poll"]]],[11,"fmt","","",107,[[["self"],["formatter"]],["result"]]],[11,"drop","","",107,[[["self"]]]],[0,"mpsc","futures::sync","A multi-producer, single-consumer, futures-aware, FIFO queue with back pressure.",N,N],[3,"Sender","futures::sync::mpsc","The transmission end of a channel which is used to send values.",N,N],[3,"UnboundedSender","","The transmission end of a channel which is used to send values.",N,N],[3,"Receiver","","The receiving end of a channel which implements the `Stream` trait.",N,N],[3,"UnboundedReceiver","","The receiving end of a channel which implements the `Stream` trait.",N,N],[3,"SendError","","Error type for sending, used when the receiving end of a channel is dropped",N,N],[3,"TrySendError","","Error type returned from `try_send`",N,N],[3,"SpawnHandle","","Handle returned from the `spawn` function.",N,N],[3,"Execute","","Type of future which `Executor` instances must be able to execute for `spawn`.",N,N],[5,"channel","","Creates an in-memory channel implementation of the `Stream` trait with bounded capacity.",N,N],[5,"unbounded","","Creates an in-memory channel implementation of the `Stream` trait with unbounded capacity.",N,N],[5,"spawn","","Spawns a `stream` onto the instance of `Executor` provided, `executor`, returning a handle representing the remote stream.",N,[[["s"],["e"],["usize"]],["spawnhandle"]]],[5,"spawn_unbounded","","Spawns a `stream` onto the instance of `Executor` provided, `executor`, returning a handle representing the remote stream, with unbounded buffering.",N,[[["s"],["e"]],["spawnhandle"]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"clone","","",112,[[["self"]],["senderror"]]],[11,"eq","","",112,[[["self"],["senderror"]],["bool"]]],[11,"ne","","",112,[[["self"],["senderror"]],["bool"]]],[11,"clone","","",113,[[["self"]],["trysenderror"]]],[11,"eq","","",113,[[["self"],["trysenderror"]],["bool"]]],[11,"ne","","",113,[[["self"],["trysenderror"]],["bool"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"description","","",112,[[["self"]],["str"]]],[11,"into_inner","","Returns the message that was attempted to be sent but failed.",112,[[["self"]],["t"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"description","","",113,[[["self"]],["str"]]],[11,"is_full","","Returns true if this error is a result of the channel being full",113,[[["self"]],["bool"]]],[11,"is_disconnected","","Returns true if this error is a result of the receiver being dropped",113,[[["self"]],["bool"]]],[11,"into_inner","","Returns the message that was attempted to be sent but failed.",113,[[["self"]],["t"]]],[11,"try_send","","Attempts to send a message on this `Sender<T>` without blocking.",108,[[["self"],["t"]],["result",["trysenderror"]]]],[11,"poll_ready","","Polls the channel to determine if there is guaranteed to be capacity to send at least one item without waiting.",108,[[["self"]],["poll",["senderror"]]]],[11,"is_closed","","Returns whether this channel is closed without needing a context.",108,[[["self"]],["bool"]]],[11,"start_send","","",108,[[["self"],["t"]],["startsend",["senderror"]]]],[11,"poll_complete","","",108,[[["self"]],["poll",["senderror"]]]],[11,"close","","",108,[[["self"]],["poll",["senderror"]]]],[11,"is_closed","","Returns whether this channel is closed without needing a context.",109,[[["self"]],["bool"]]],[11,"unbounded_send","","Sends the provided message along this channel.",109,[[["self"],["t"]],["result",["senderror"]]]],[11,"start_send","","",109,[[["self"],["t"]],["startsend",["senderror"]]]],[11,"poll_complete","","",109,[[["self"]],["poll",["senderror"]]]],[11,"close","","",109,[[["self"]],["poll",["senderror"]]]],[11,"clone","","",109,[[["self"]],["unboundedsender"]]],[11,"clone","","",108,[[["self"]],["sender"]]],[11,"drop","","",108,[[["self"]]]],[11,"close","","Closes the receiving half",110,[[["self"]]]],[11,"poll","","",110,[[["self"]],["poll",["option"]]]],[11,"drop","","",110,[[["self"]]]],[11,"close","","Closes the receiving half",111,[[["self"]]]],[11,"poll","","",111,[[["self"]],["poll",["option"]]]],[11,"poll","","",114,[[["self"]],["poll",["option"]]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"poll","","",115,[[["self"]],["poll"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sync","",116,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new `BiLock` protecting the provided data.",116,N],[11,"poll_lock","","Attempt to acquire this lock, returning `NotReady` if it can't be acquired.",116,[[["self"]],["async",["bilockguard"]]]],[11,"lock","","Perform a \"blocking lock\" of this lock, consuming this lock handle and returning a future to the acquired lock.",116,[[["self"]],["bilockacquire"]]],[11,"reunite","","Attempts to put the two \"halves\" of a `BiLock<T>` back together and recover the original value. Succeeds only if the two `BiLock<T>`s originated from the same call to `BiLock::new`.",116,[[["self"],["self"]],["result",["reuniteerror"]]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"deref","","",117,[[["self"]],["t"]]],[11,"deref_mut","","",117,[[["self"]],["t"]]],[11,"drop","","",117,[[["self"]]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"poll","","",118,[[["self"]],["poll",["bilockacquired"]]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"unlock","","Recovers the original `BiLock<T>`, unlocking this lock.",119,[[["self"]],["bilock"]]],[11,"deref","","",119,[[["self"]],["t"]]],[11,"deref_mut","","",119,[[["self"]],["t"]]],[11,"drop","","",119,[[["self"]]]],[0,"unsync","futures","Future-aware single-threaded synchronization",N,N],[0,"mpsc","futures::unsync","A multi-producer, single-consumer, futures-aware, FIFO queue with back pressure, for use communicating between tasks on the same thread.",N,N],[3,"Sender","futures::unsync::mpsc","The transmission end of a channel.",N,N],[3,"Receiver","","The receiving end of a channel which implements the `Stream` trait.",N,N],[3,"UnboundedSender","","The transmission end of an unbounded channel.",N,N],[3,"UnboundedReceiver","","The receiving end of an unbounded channel.",N,N],[3,"SendError","","Error type for sending, used when the receiving end of a channel is dropped",N,N],[3,"SpawnHandle","","Handle returned from the `spawn` function.",N,N],[3,"Execute","","Type of future which `Executor` instances must be able to execute for `spawn`.",N,N],[5,"channel","","Creates a bounded in-memory channel with buffered storage.",N,N],[5,"unbounded","","Creates an unbounded in-memory channel with buffered storage.",N,N],[5,"spawn","","Spawns a `stream` onto the instance of `Executor` provided, `executor`, returning a handle representing the remote stream.",N,[[["s"],["e"],["usize"]],["spawnhandle"]]],[5,"spawn_unbounded","","Spawns a `stream` onto the instance of `Executor` provided, `executor`, returning a handle representing the remote stream, with unbounded buffering.",N,[[["s"],["e"]],["spawnhandle"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"clone","","",120,[[["self"]],["self"]]],[11,"start_send","","",120,[[["self"],["t"]],["startsend",["senderror"]]]],[11,"poll_complete","","",120,[[["self"]],["poll",["senderror"]]]],[11,"close","","",120,[[["self"]],["poll",["senderror"]]]],[11,"drop","","",120,[[["self"]]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"close","","Closes the receiving half",121,[[["self"]]]],[11,"poll","","",121,[[["self"]],["poll",["option"]]]],[11,"drop","","",121,[[["self"]]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result"]]],[11,"clone","","",122,[[["self"]],["self"]]],[11,"start_send","","",122,[[["self"],["t"]],["startsend",["senderror"]]]],[11,"poll_complete","","",122,[[["self"]],["poll",["senderror"]]]],[11,"close","","",122,[[["self"]],["poll",["senderror"]]]],[11,"unbounded_send","","Sends the provided message along this channel.",122,[[["self"],["t"]],["result",["senderror"]]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"close","","Closes the receiving half",123,[[["self"]]]],[11,"poll","","",123,[[["self"]],["poll",["option"]]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"description","","",124,[[["self"]],["str"]]],[11,"into_inner","","Returns the message that was attempted to be sent but failed.",124,[[["self"]],["t"]]],[11,"poll","","",125,[[["self"]],["poll",["option"]]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"poll","","",126,[[["self"]],["poll"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[0,"oneshot","futures::unsync","A one-shot, futures-aware channel",N,N],[3,"Sender","futures::unsync::oneshot","Represents the completion half of a oneshot through which the result of a computation is signaled.",N,N],[3,"Receiver","","A future representing the completion of a computation happening elsewhere in memory.",N,N],[3,"SpawnHandle","","Handle returned from the `spawn` function.",N,N],[3,"Execute","","Type of future which `Spawn` instances below must be able to spawn.",N,N],[5,"channel","","Creates a new futures-aware, one-shot channel.",N,N],[5,"spawn","","Spawns a `future` onto the instance of `Executor` provided, `executor`, returning a handle representing the completion of the future.",N,[[["f"],["e"]],["spawnhandle"]]],[5,"spawn_fn","","Spawns a function `f` onto the `Spawn` instance provided `s`.",N,[[["f"],["e"]],["spawnhandle"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"send","","Completes this oneshot with a successful result.",127,[[["self"],["t"]],["result"]]],[11,"poll_cancel","","Polls this `Sender` half to detect whether the `Receiver` this has paired with has gone away.",127,[[["self"]],["poll"]]],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding `Receiver` has gone away.",127,[[["self"]],["bool"]]],[11,"drop","","",127,[[["self"]]]],[11,"close","","Gracefully close this receiver, preventing sending any future messages.",128,[[["self"]]]],[11,"poll","","",128,[[["self"]],["poll"]]],[11,"drop","","",128,[[["self"]]]],[11,"forget","","Drop this future without canceling the underlying future.",129,[[["self"]]]],[11,"poll","","",129,[[["self"]],["poll"]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result"]]],[11,"poll","","",130,[[["self"]],["poll"]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result"]]],[0,"prelude","futures","A \"prelude\" for crates using the `futures` crate.",N,N],[6,"Poll","","Return type of the `Future::poll` method, indicates whether a future's value is ready or not.",N,N],[6,"StartSend","","Return type of the `Sink::start_send` method, indicating the outcome of a send attempt. See `AsyncSink` for more details.",N,N],[14,"try_ready","","A macro for extracting the successful type of a `Poll<T, E>`.",N,N],[14,"task_local","","A macro to create a `static` of type `LocalKey`",N,N],[11,"new","futures::task","Create an `AtomicTask` initialized with the given `Task`",131,[[],["atomictask"]]],[11,"register","","Registers the current task to be notified on calls to `notify`.",131,[[["self"]]]],[11,"register_task","","Registers the provided task to be notified on calls to `notify`.",131,[[["self"],["task"]]]],[11,"notify","","Notifies the task that last called `register`.",131,[[["self"]]]],[11,"default","","",131,[[],["self"]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result"]]],[11,"with","","Access this task-local key, running the provided closure with a reference to the value.",132,[[["self"],["f"]],["r"]]],[11,"wait_future","futures::executor","Waits for the internal future to complete, blocking this thread's execution until it does.",133,[[["self"]],["result"]]],[11,"wait_stream","","Like `wait_future`, except only waits for the next element to arrive on the underlying stream.",133,[[["self"]],["option",["result"]]]],[11,"wait_send","","Blocks the current thread until it's able to send `value` on this sink.",133,N],[11,"wait_flush","","Blocks the current thread until it's able to flush this sink.",133,[[["self"]],["result"]]],[11,"wait_close","","Blocks the current thread until it's able to close this sink.",133,[[["self"]],["result"]]],[11,"clone","futures::task","",134,[[["self"]],["unparkevent"]]],[11,"new","","Construct an unpark event that will insert `id` into `set` when triggered.",134,[[["arc",["eventset"]],["usize"]],["unparkevent"]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result"]]],[11,"from","futures::executor","",135,[[["arc"]],["notifyhandle"]]],[11,"clone_id","","This function is called whenever a new copy of `id` is needed.",101,[[["self"],["usize"]],["usize"]]],[11,"drop_id","","All instances of `Task` store an `id` that they're going to internally notify with, and this function is called when the `Task` is dropped.",101,[[["self"],["usize"]]]],[11,"clone","futures::task","",136,[[["self"]],["task"]]],[11,"notify","","Indicate that the task should attempt to poll its future in a timely fashion.",136,[[["self"]]]],[11,"is_current","","Returns `true` when called from within the context of the task.",136,[[["self"]],["bool"]]],[11,"will_notify_current","","This function is intended as a performance optimization for structures which store a `Task` internally.",136,[[["self"]],["bool"]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[11,"get_ref","futures::executor","Get a shared reference to the object the Spawn is wrapping.",133,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the object the Spawn is wrapping.",133,[[["self"]],["t"]]],[11,"into_inner","","Consume the Spawn, returning its inner object",133,[[["self"]],["t"]]],[11,"poll_future_notify","","Polls the internal future, scheduling notifications to be sent to the `notify` argument.",133,[[["self"],["n"],["usize"]],["poll"]]],[11,"poll_stream_notify","","Like `poll_future_notify`, except polls the underlying stream.",133,[[["self"],["n"],["usize"]],["poll",["option"]]]],[11,"start_send_notify","","Invokes the underlying `start_send` method with this task in place.",133,N],[11,"poll_flush_notify","","Invokes the underlying `poll_complete` method with this task in place.",133,[[["self"],["n"],["usize"]],["poll"]]],[11,"close_notify","","Invokes the underlying `close` method with this task in place.",133,[[["self"],["n"],["usize"]],["poll"]]],[11,"fmt","","",133,[[["self"],["formatter"]],["result"]]],[11,"new","","Constructs a new `NotifyHandle` directly.",135,N],[11,"notify","","Invokes the underlying instance of `Notify` with the provided `id`.",135,[[["self"],["usize"]]]],[11,"clone","","",135,[[["self"]],["self"]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result"]]],[11,"drop","","",135,[[["self"]]]],[11,"from","","",135,[[["t"]],["notifyhandle"]]]],"paths":[[4,"Async"],[4,"AsyncSink"],[4,"Loop"],[4,"Either"],[4,"ExecuteErrorKind"],[3,"Empty"],[3,"Lazy"],[3,"PollFn"],[3,"FutureResult"],[3,"LoopFn"],[3,"AndThen"],[3,"Flatten"],[3,"FlattenStream"],[3,"Fuse"],[3,"IntoStream"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"Map"],[3,"MapErr"],[3,"FromErr"],[3,"OrElse"],[3,"Select"],[3,"SelectNext"],[3,"Select2"],[3,"Then"],[3,"Inspect"],[3,"CatchUnwind"],[3,"JoinAll"],[3,"SelectAll"],[3,"SelectOk"],[3,"Shared"],[3,"SharedItem"],[3,"SharedError"],[8,"Future"],[8,"IntoFuture"],[8,"FutureFrom"],[8,"Executor"],[3,"ExecuteError"],[3,"ReuniteError"],[4,"MergedItem"],[3,"Iter"],[3,"IterOk"],[3,"IterResult"],[3,"Repeat"],[3,"AndThen"],[3,"Chain"],[3,"Concat2"],[3,"Concat"],[3,"Empty"],[3,"Filter"],[3,"FilterMap"],[3,"Flatten"],[3,"Fold"],[3,"ForEach"],[3,"FromErr"],[3,"Fuse"],[3,"StreamFuture"],[3,"Inspect"],[3,"InspectErr"],[3,"Map"],[3,"MapErr"],[3,"Merge"],[3,"Once"],[3,"OrElse"],[3,"Peekable"],[3,"PollFn"],[3,"Select"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"Then"],[3,"Unfold"],[3,"Zip"],[3,"Forward"],[3,"Buffered"],[3,"BufferUnordered"],[3,"CatchUnwind"],[3,"Chunks"],[3,"Collect"],[3,"Wait"],[3,"SplitStream"],[3,"SplitSink"],[3,"FuturesUnordered"],[3,"IterMut"],[3,"FuturesOrdered"],[8,"Stream"],[3,"With"],[3,"WithFlatMap"],[3,"Flush"],[3,"SinkFromErr"],[3,"Send"],[3,"SendAll"],[3,"SinkMapErr"],[3,"Fanout"],[3,"Buffer"],[3,"Wait"],[8,"Sink"],[8,"EventSet"],[8,"Notify"],[8,"UnsafeNotify"],[3,"Receiver"],[3,"Sender"],[3,"Canceled"],[3,"SpawnHandle"],[3,"Execute"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"TrySendError"],[3,"SpawnHandle"],[3,"Execute"],[3,"BiLock"],[3,"BiLockGuard"],[3,"BiLockAcquire"],[3,"BiLockAcquired"],[3,"Sender"],[3,"Receiver"],[3,"UnboundedSender"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"SpawnHandle"],[3,"Execute"],[3,"Sender"],[3,"Receiver"],[3,"SpawnHandle"],[3,"Execute"],[3,"AtomicTask"],[3,"LocalKey"],[3,"Spawn"],[3,"UnparkEvent"],[3,"NotifyHandle"],[3,"Task"]]};
searchIndex["futures_cpupool"]={"doc":"A simple crate for executing work on a thread pool, and getting back a future.","items":[[3,"CpuPool","futures_cpupool","A thread pool intended to run CPU intensive work.",N,N],[3,"Builder","","Thread pool configuration object",N,N],[3,"CpuFuture","","The type of future returned from the `CpuPool::spawn` function, which proxies the futures running on the thread pool.",N,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new thread pool with `size` worker threads associated with it.",0,[[["usize"]],["cpupool"]]],[11,"new_num_cpus","","Creates a new thread pool with a number of workers equal to the number of CPUs on the host.",0,[[],["cpupool"]]],[11,"spawn","","Spawns a future to run on this thread pool, returning a future representing the produced value.",0,[[["self"],["f"]],["cpufuture"]]],[11,"spawn_fn","","Spawns a closure on this thread pool.",0,[[["self"],["f"]],["cpufuture"]]],[11,"execute","","",0,[[["self"],["f"]],["result",["executeerror"]]]],[11,"clone","","",0,[[["self"]],["cpupool"]]],[11,"drop","","",0,[[["self"]]]],[11,"forget","","Drop this future without canceling the underlying future.",2,[[["self"]]]],[11,"poll","","",2,[[["self"]],["poll"]]],[11,"new","","Create a builder a number of workers equal to the number of CPUs on the host.",1,[[],["builder"]]],[11,"pool_size","","Set size of a future CpuPool",1,[[["self"],["usize"]],["self"]]],[11,"stack_size","","Set stack size of threads in the pool.",1,[[["self"],["usize"]],["self"]]],[11,"name_prefix","","Set thread name prefix of a future CpuPool",1,[[["self"],["s"]],["self"]]],[11,"after_start","","Execute function `f` right after each thread is started but before running any jobs on it.",1,[[["self"],["f"]],["self"]]],[11,"before_stop","","Execute function `f` before each worker thread stops.",1,[[["self"],["f"]],["self"]]],[11,"create","","Create CpuPool with configured parameters",1,[[["self"]],["cpupool"]]]],"paths":[[3,"CpuPool"],[3,"Builder"],[3,"CpuFuture"]]};
searchIndex["lazy_static"]={"doc":"A macro for declaring lazily evaluated statics.","items":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes it if it has not been already.",N,[[["t"]]]],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy static values.",N,N],[14,"lazy_static","","",N,N]],"paths":[]};
searchIndex["libc"]={"doc":"Crate docs","items":[[3,"group","libc","",N,N],[12,"gr_name","","",0,N],[12,"gr_passwd","","",0,N],[12,"gr_gid","","",0,N],[12,"gr_mem","","",0,N],[3,"utimbuf","","",N,N],[12,"actime","","",1,N],[12,"modtime","","",1,N],[3,"timeval","","",N,N],[12,"tv_sec","","",2,N],[12,"tv_usec","","",2,N],[3,"timespec","","",N,N],[12,"tv_sec","","",3,N],[12,"tv_nsec","","",3,N],[3,"rlimit","","",N,N],[12,"rlim_cur","","",4,N],[12,"rlim_max","","",4,N],[3,"rusage","","",N,N],[12,"ru_utime","","",5,N],[12,"ru_stime","","",5,N],[12,"ru_maxrss","","",5,N],[12,"ru_ixrss","","",5,N],[12,"ru_idrss","","",5,N],[12,"ru_isrss","","",5,N],[12,"ru_minflt","","",5,N],[12,"ru_majflt","","",5,N],[12,"ru_nswap","","",5,N],[12,"ru_inblock","","",5,N],[12,"ru_oublock","","",5,N],[12,"ru_msgsnd","","",5,N],[12,"ru_msgrcv","","",5,N],[12,"ru_nsignals","","",5,N],[12,"ru_nvcsw","","",5,N],[12,"ru_nivcsw","","",5,N],[3,"in_addr","","",N,N],[12,"s_addr","","",6,N],[3,"in6_addr","","",N,N],[12,"s6_addr","","",7,N],[3,"ip_mreq","","",N,N],[12,"imr_multiaddr","","",8,N],[12,"imr_interface","","",8,N],[3,"ipv6_mreq","","",N,N],[12,"ipv6mr_multiaddr","","",9,N],[12,"ipv6mr_interface","","",9,N],[3,"hostent","","",N,N],[12,"h_name","","",10,N],[12,"h_aliases","","",10,N],[12,"h_addrtype","","",10,N],[12,"h_length","","",10,N],[12,"h_addr_list","","",10,N],[3,"iovec","","",N,N],[12,"iov_base","","",11,N],[12,"iov_len","","",11,N],[3,"pollfd","","",N,N],[12,"fd","","",12,N],[12,"events","","",12,N],[12,"revents","","",12,N],[3,"winsize","","",N,N],[12,"ws_row","","",13,N],[12,"ws_col","","",13,N],[12,"ws_xpixel","","",13,N],[12,"ws_ypixel","","",13,N],[3,"linger","","",N,N],[12,"l_onoff","","",14,N],[12,"l_linger","","",14,N],[3,"sigval","","",N,N],[12,"sival_ptr","","",15,N],[3,"itimerval","","",N,N],[12,"it_interval","","",16,N],[12,"it_value","","",16,N],[3,"tms","","",N,N],[12,"tms_utime","","",17,N],[12,"tms_stime","","",17,N],[12,"tms_cutime","","",17,N],[12,"tms_cstime","","",17,N],[3,"servent","","",N,N],[12,"s_name","","",18,N],[12,"s_aliases","","",18,N],[12,"s_port","","",18,N],[12,"s_proto","","",18,N],[3,"protoent","","",N,N],[12,"p_name","","",19,N],[12,"p_aliases","","",19,N],[12,"p_proto","","",19,N],[3,"sockaddr","","",N,N],[12,"sa_len","","",20,N],[12,"sa_family","","",20,N],[12,"sa_data","","",20,N],[3,"sockaddr_in6","","",N,N],[12,"sin6_len","","",21,N],[12,"sin6_family","","",21,N],[12,"sin6_port","","",21,N],[12,"sin6_flowinfo","","",21,N],[12,"sin6_addr","","",21,N],[12,"sin6_scope_id","","",21,N],[3,"sockaddr_un","","",N,N],[12,"sun_len","","",22,N],[12,"sun_family","","",22,N],[12,"sun_path","","",22,N],[3,"passwd","","",N,N],[12,"pw_name","","",23,N],[12,"pw_passwd","","",23,N],[12,"pw_uid","","",23,N],[12,"pw_gid","","",23,N],[12,"pw_change","","",23,N],[12,"pw_class","","",23,N],[12,"pw_gecos","","",23,N],[12,"pw_dir","","",23,N],[12,"pw_shell","","",23,N],[12,"pw_expire","","",23,N],[3,"ifaddrs","","",N,N],[12,"ifa_next","","",24,N],[12,"ifa_name","","",24,N],[12,"ifa_flags","","",24,N],[12,"ifa_addr","","",24,N],[12,"ifa_netmask","","",24,N],[12,"ifa_dstaddr","","",24,N],[12,"ifa_data","","",24,N],[3,"fd_set","","",N,N],[3,"tm","","",N,N],[12,"tm_sec","","",25,N],[12,"tm_min","","",25,N],[12,"tm_hour","","",25,N],[12,"tm_mday","","",25,N],[12,"tm_mon","","",25,N],[12,"tm_year","","",25,N],[12,"tm_wday","","",25,N],[12,"tm_yday","","",25,N],[12,"tm_isdst","","",25,N],[12,"tm_gmtoff","","",25,N],[12,"tm_zone","","",25,N],[3,"utsname","","",N,N],[12,"sysname","","",26,N],[12,"nodename","","",26,N],[12,"release","","",26,N],[12,"version","","",26,N],[12,"machine","","",26,N],[3,"msghdr","","",N,N],[12,"msg_name","","",27,N],[12,"msg_namelen","","",27,N],[12,"msg_iov","","",27,N],[12,"msg_iovlen","","",27,N],[12,"msg_control","","",27,N],[12,"msg_controllen","","",27,N],[12,"msg_flags","","",27,N],[3,"cmsghdr","","",N,N],[12,"cmsg_len","","",28,N],[12,"cmsg_level","","",28,N],[12,"cmsg_type","","",28,N],[3,"fsid_t","","",N,N],[3,"if_nameindex","","",N,N],[12,"if_index","","",29,N],[12,"if_name","","",29,N],[3,"aiocb","","",N,N],[12,"aio_fildes","","",30,N],[12,"aio_offset","","",30,N],[12,"aio_buf","","",30,N],[12,"aio_nbytes","","",30,N],[12,"aio_reqprio","","",30,N],[12,"aio_sigevent","","",30,N],[12,"aio_lio_opcode","","",30,N],[3,"utmpx","","",N,N],[12,"ut_user","","",31,N],[12,"ut_id","","",31,N],[12,"ut_line","","",31,N],[12,"ut_pid","","",31,N],[12,"ut_type","","",31,N],[12,"ut_tv","","",31,N],[12,"ut_host","","",31,N],[3,"glob_t","","",N,N],[12,"gl_pathc","","",32,N],[12,"gl_offs","","",32,N],[12,"gl_pathv","","",32,N],[3,"sockaddr_storage","","",N,N],[12,"ss_len","","",33,N],[12,"ss_family","","",33,N],[3,"addrinfo","","",N,N],[12,"ai_flags","","",34,N],[12,"ai_family","","",34,N],[12,"ai_socktype","","",34,N],[12,"ai_protocol","","",34,N],[12,"ai_addrlen","","",34,N],[12,"ai_canonname","","",34,N],[12,"ai_addr","","",34,N],[12,"ai_next","","",34,N],[3,"mach_timebase_info","","",N,N],[12,"numer","","",35,N],[12,"denom","","",35,N],[3,"stat","","",N,N],[12,"st_dev","","",36,N],[12,"st_mode","","",36,N],[12,"st_nlink","","",36,N],[12,"st_ino","","",36,N],[12,"st_uid","","",36,N],[12,"st_gid","","",36,N],[12,"st_rdev","","",36,N],[12,"st_atime","","",36,N],[12,"st_atime_nsec","","",36,N],[12,"st_mtime","","",36,N],[12,"st_mtime_nsec","","",36,N],[12,"st_ctime","","",36,N],[12,"st_ctime_nsec","","",36,N],[12,"st_birthtime","","",36,N],[12,"st_birthtime_nsec","","",36,N],[12,"st_size","","",36,N],[12,"st_blocks","","",36,N],[12,"st_blksize","","",36,N],[12,"st_flags","","",36,N],[12,"st_gen","","",36,N],[12,"st_lspare","","",36,N],[12,"st_qspare","","",36,N],[3,"dirent","","",N,N],[12,"d_ino","","",37,N],[12,"d_seekoff","","",37,N],[12,"d_reclen","","",37,N],[12,"d_namlen","","",37,N],[12,"d_type","","",37,N],[12,"d_name","","",37,N],[3,"pthread_mutex_t","","",N,N],[3,"pthread_mutexattr_t","","",N,N],[3,"pthread_cond_t","","",N,N],[3,"pthread_condattr_t","","",N,N],[3,"pthread_rwlock_t","","",N,N],[3,"pthread_rwlockattr_t","","",N,N],[3,"siginfo_t","","",N,N],[12,"si_signo","","",38,N],[12,"si_errno","","",38,N],[12,"si_code","","",38,N],[12,"si_pid","","",38,N],[12,"si_uid","","",38,N],[12,"si_status","","",38,N],[12,"si_addr","","",38,N],[3,"sigaction","","",N,N],[12,"sa_sigaction","","",39,N],[12,"sa_mask","","",39,N],[12,"sa_flags","","",39,N],[3,"stack_t","","",N,N],[12,"ss_sp","","",40,N],[12,"ss_size","","",40,N],[12,"ss_flags","","",40,N],[3,"fstore_t","","",N,N],[12,"fst_flags","","",41,N],[12,"fst_posmode","","",41,N],[12,"fst_offset","","",41,N],[12,"fst_length","","",41,N],[12,"fst_bytesalloc","","",41,N],[3,"radvisory","","",N,N],[12,"ra_offset","","",42,N],[12,"ra_count","","",42,N],[3,"statvfs","","",N,N],[12,"f_bsize","","",43,N],[12,"f_frsize","","",43,N],[12,"f_blocks","","",43,N],[12,"f_bfree","","",43,N],[12,"f_bavail","","",43,N],[12,"f_files","","",43,N],[12,"f_ffree","","",43,N],[12,"f_favail","","",43,N],[12,"f_fsid","","",43,N],[12,"f_flag","","",43,N],[12,"f_namemax","","",43,N],[3,"Dl_info","","",N,N],[12,"dli_fname","","",44,N],[12,"dli_fbase","","",44,N],[12,"dli_sname","","",44,N],[12,"dli_saddr","","",44,N],[3,"sockaddr_in","","",N,N],[12,"sin_len","","",45,N],[12,"sin_family","","",45,N],[12,"sin_port","","",45,N],[12,"sin_addr","","",45,N],[12,"sin_zero","","",45,N],[3,"statfs","","",N,N],[12,"f_bsize","","",46,N],[12,"f_iosize","","",46,N],[12,"f_blocks","","",46,N],[12,"f_bfree","","",46,N],[12,"f_bavail","","",46,N],[12,"f_files","","",46,N],[12,"f_ffree","","",46,N],[12,"f_fsid","","",46,N],[12,"f_owner","","",46,N],[12,"f_type","","",46,N],[12,"f_flags","","",46,N],[12,"f_fssubtype","","",46,N],[12,"f_fstypename","","",46,N],[12,"f_mntonname","","",46,N],[12,"f_mntfromname","","",46,N],[12,"f_reserved","","",46,N],[3,"kevent","","",N,N],[12,"ident","","",47,N],[12,"filter","","",47,N],[12,"flags","","",47,N],[12,"fflags","","",47,N],[12,"data","","",47,N],[12,"udata","","",47,N],[3,"kevent64_s","","",N,N],[12,"ident","","",48,N],[12,"filter","","",48,N],[12,"flags","","",48,N],[12,"fflags","","",48,N],[12,"data","","",48,N],[12,"udata","","",48,N],[12,"ext","","",48,N],[3,"dqblk","","",N,N],[12,"dqb_bhardlimit","","",49,N],[12,"dqb_bsoftlimit","","",49,N],[12,"dqb_curbytes","","",49,N],[12,"dqb_ihardlimit","","",49,N],[12,"dqb_isoftlimit","","",49,N],[12,"dqb_curinodes","","",49,N],[12,"dqb_btime","","",49,N],[12,"dqb_itime","","",49,N],[12,"dqb_id","","",49,N],[12,"dqb_spare","","",49,N],[3,"if_msghdr","","",N,N],[12,"ifm_msglen","","",50,N],[12,"ifm_version","","",50,N],[12,"ifm_type","","",50,N],[12,"ifm_addrs","","",50,N],[12,"ifm_flags","","",50,N],[12,"ifm_index","","",50,N],[12,"ifm_data","","",50,N],[3,"termios","","",N,N],[12,"c_iflag","","",51,N],[12,"c_oflag","","",51,N],[12,"c_cflag","","",51,N],[12,"c_lflag","","",51,N],[12,"c_cc","","",51,N],[12,"c_ispeed","","",51,N],[12,"c_ospeed","","",51,N],[3,"flock","","",N,N],[12,"l_start","","",52,N],[12,"l_len","","",52,N],[12,"l_pid","","",52,N],[12,"l_type","","",52,N],[12,"l_whence","","",52,N],[3,"sf_hdtr","","",N,N],[12,"headers","","",53,N],[12,"hdr_cnt","","",53,N],[12,"trailers","","",53,N],[12,"trl_cnt","","",53,N],[3,"lconv","","",N,N],[12,"decimal_point","","",54,N],[12,"thousands_sep","","",54,N],[12,"grouping","","",54,N],[12,"int_curr_symbol","","",54,N],[12,"currency_symbol","","",54,N],[12,"mon_decimal_point","","",54,N],[12,"mon_thousands_sep","","",54,N],[12,"mon_grouping","","",54,N],[12,"positive_sign","","",54,N],[12,"negative_sign","","",54,N],[12,"int_frac_digits","","",54,N],[12,"frac_digits","","",54,N],[12,"p_cs_precedes","","",54,N],[12,"p_sep_by_space","","",54,N],[12,"n_cs_precedes","","",54,N],[12,"n_sep_by_space","","",54,N],[12,"p_sign_posn","","",54,N],[12,"n_sign_posn","","",54,N],[12,"int_p_cs_precedes","","",54,N],[12,"int_n_cs_precedes","","",54,N],[12,"int_p_sep_by_space","","",54,N],[12,"int_n_sep_by_space","","",54,N],[12,"int_p_sign_posn","","",54,N],[12,"int_n_sign_posn","","",54,N],[3,"sigevent","","",N,N],[12,"sigev_notify","","",55,N],[12,"sigev_signo","","",55,N],[12,"sigev_value","","",55,N],[12,"sigev_notify_attributes","","",55,N],[3,"proc_taskinfo","","",N,N],[12,"pti_virtual_size","","",56,N],[12,"pti_resident_size","","",56,N],[12,"pti_total_user","","",56,N],[12,"pti_total_system","","",56,N],[12,"pti_threads_user","","",56,N],[12,"pti_threads_system","","",56,N],[12,"pti_policy","","",56,N],[12,"pti_faults","","",56,N],[12,"pti_pageins","","",56,N],[12,"pti_cow_faults","","",56,N],[12,"pti_messages_sent","","",56,N],[12,"pti_messages_received","","",56,N],[12,"pti_syscalls_mach","","",56,N],[12,"pti_syscalls_unix","","",56,N],[12,"pti_csw","","",56,N],[12,"pti_threadnum","","",56,N],[12,"pti_numrunning","","",56,N],[12,"pti_priority","","",56,N],[3,"proc_bsdinfo","","",N,N],[12,"pbi_flags","","",57,N],[12,"pbi_status","","",57,N],[12,"pbi_xstatus","","",57,N],[12,"pbi_pid","","",57,N],[12,"pbi_ppid","","",57,N],[12,"pbi_uid","","",57,N],[12,"pbi_gid","","",57,N],[12,"pbi_ruid","","",57,N],[12,"pbi_rgid","","",57,N],[12,"pbi_svuid","","",57,N],[12,"pbi_svgid","","",57,N],[12,"rfu_1","","",57,N],[12,"pbi_comm","","",57,N],[12,"pbi_name","","",57,N],[12,"pbi_nfiles","","",57,N],[12,"pbi_pgid","","",57,N],[12,"pbi_pjobc","","",57,N],[12,"e_tdev","","",57,N],[12,"e_tpgid","","",57,N],[12,"pbi_nice","","",57,N],[12,"pbi_start_tvsec","","",57,N],[12,"pbi_start_tvusec","","",57,N],[3,"proc_taskallinfo","","",N,N],[12,"pbsd","","",58,N],[12,"ptinfo","","",58,N],[3,"proc_threadinfo","","",N,N],[12,"pth_user_time","","",59,N],[12,"pth_system_time","","",59,N],[12,"pth_cpu_usage","","",59,N],[12,"pth_policy","","",59,N],[12,"pth_run_state","","",59,N],[12,"pth_flags","","",59,N],[12,"pth_sleep_time","","",59,N],[12,"pth_curpri","","",59,N],[12,"pth_priority","","",59,N],[12,"pth_maxpriority","","",59,N],[12,"pth_name","","",59,N],[3,"xsw_usage","","",N,N],[12,"xsu_total","","",60,N],[12,"xsu_avail","","",60,N],[12,"xsu_used","","",60,N],[12,"xsu_pagesize","","",60,N],[12,"xsu_encrypted","","",60,N],[3,"xucred","","",N,N],[12,"cr_version","","",61,N],[12,"cr_uid","","",61,N],[12,"cr_ngroups","","",61,N],[12,"cr_groups","","",61,N],[3,"mach_header","","",N,N],[12,"magic","","",62,N],[12,"cputype","","",62,N],[12,"cpusubtype","","",62,N],[12,"filetype","","",62,N],[12,"ncmds","","",62,N],[12,"sizeofcmds","","",62,N],[12,"flags","","",62,N],[3,"mach_header_64","","",N,N],[12,"magic","","",63,N],[12,"cputype","","",63,N],[12,"cpusubtype","","",63,N],[12,"filetype","","",63,N],[12,"ncmds","","",63,N],[12,"sizeofcmds","","",63,N],[12,"flags","","",63,N],[12,"reserved","","",63,N],[3,"segment_command","","",N,N],[12,"cmd","","",64,N],[12,"cmdsize","","",64,N],[12,"segname","","",64,N],[12,"vmaddr","","",64,N],[12,"vmsize","","",64,N],[12,"fileoff","","",64,N],[12,"filesize","","",64,N],[12,"maxprot","","",64,N],[12,"initprot","","",64,N],[12,"nsects","","",64,N],[12,"flags","","",64,N],[3,"segment_command_64","","",N,N],[12,"cmd","","",65,N],[12,"cmdsize","","",65,N],[12,"segname","","",65,N],[12,"vmaddr","","",65,N],[12,"vmsize","","",65,N],[12,"fileoff","","",65,N],[12,"filesize","","",65,N],[12,"maxprot","","",65,N],[12,"initprot","","",65,N],[12,"nsects","","",65,N],[12,"flags","","",65,N],[3,"load_command","","",N,N],[12,"cmd","","",66,N],[12,"cmdsize","","",66,N],[3,"sockaddr_dl","","",N,N],[12,"sdl_len","","",67,N],[12,"sdl_family","","",67,N],[12,"sdl_index","","",67,N],[12,"sdl_type","","",67,N],[12,"sdl_nlen","","",67,N],[12,"sdl_alen","","",67,N],[12,"sdl_slen","","",67,N],[12,"sdl_data","","",67,N],[3,"sockaddr_inarp","","",N,N],[12,"sin_len","","",68,N],[12,"sin_family","","",68,N],[12,"sin_port","","",68,N],[12,"sin_addr","","",68,N],[12,"sin_srcaddr","","",68,N],[12,"sin_tos","","",68,N],[12,"sin_other","","",68,N],[3,"sockaddr_ctl","","",N,N],[12,"sc_len","","",69,N],[12,"sc_family","","",69,N],[12,"ss_sysaddr","","",69,N],[12,"sc_id","","",69,N],[12,"sc_unit","","",69,N],[12,"sc_reserved","","",69,N],[3,"in_pktinfo","","",N,N],[12,"ipi_ifindex","","",70,N],[12,"ipi_spec_dst","","",70,N],[12,"ipi_addr","","",70,N],[3,"in6_pktinfo","","",N,N],[12,"ipi6_addr","","",71,N],[12,"ipi6_ifindex","","",71,N],[3,"ipc_perm","","",N,N],[12,"uid","","",72,N],[12,"gid","","",72,N],[12,"cuid","","",72,N],[12,"cgid","","",72,N],[12,"mode","","",72,N],[12,"_seq","","",72,N],[12,"_key","","",72,N],[3,"shmid_ds","","",N,N],[12,"shm_perm","","",73,N],[12,"shm_segsz","","",73,N],[12,"shm_lpid","","",73,N],[12,"shm_cpid","","",73,N],[12,"shm_nattch","","",73,N],[12,"shm_atime","","",73,N],[12,"shm_dtime","","",73,N],[12,"shm_ctime","","",73,N],[12,"shm_internal","","",73,N],[3,"arphdr","","",N,N],[12,"ar_hrd","","",74,N],[12,"ar_pro","","",74,N],[12,"ar_hln","","",74,N],[12,"ar_pln","","",74,N],[12,"ar_op","","",74,N],[3,"pthread_attr_t","","",N,N],[3,"timeval32","","",N,N],[12,"tv_sec","","",75,N],[12,"tv_usec","","",75,N],[3,"if_data","","",N,N],[12,"ifi_type","","",76,N],[12,"ifi_typelen","","",76,N],[12,"ifi_physical","","",76,N],[12,"ifi_addrlen","","",76,N],[12,"ifi_hdrlen","","",76,N],[12,"ifi_recvquota","","",76,N],[12,"ifi_xmitquota","","",76,N],[12,"ifi_unused1","","",76,N],[12,"ifi_mtu","","",76,N],[12,"ifi_metric","","",76,N],[12,"ifi_baudrate","","",76,N],[12,"ifi_ipackets","","",76,N],[12,"ifi_ierrors","","",76,N],[12,"ifi_opackets","","",76,N],[12,"ifi_oerrors","","",76,N],[12,"ifi_collisions","","",76,N],[12,"ifi_ibytes","","",76,N],[12,"ifi_obytes","","",76,N],[12,"ifi_imcasts","","",76,N],[12,"ifi_omcasts","","",76,N],[12,"ifi_iqdrops","","",76,N],[12,"ifi_noproto","","",76,N],[12,"ifi_recvtiming","","",76,N],[12,"ifi_xmittiming","","",76,N],[12,"ifi_lastchange","","",76,N],[12,"ifi_unused2","","",76,N],[12,"ifi_hwassist","","",76,N],[12,"ifi_reserved1","","",76,N],[12,"ifi_reserved2","","",76,N],[3,"bpf_hdr","","",N,N],[12,"bh_tstamp","","",77,N],[12,"bh_caplen","","",77,N],[12,"bh_datalen","","",77,N],[12,"bh_hdrlen","","",77,N],[4,"c_void","","",N,N],[4,"FILE","","",N,N],[4,"fpos_t","","",N,N],[4,"DIR","","",N,N],[4,"locale_t","","",N,N],[4,"timezone","","",N,N],[5,"FD_CLR","","",N,N],[5,"FD_ISSET","","",N,N],[5,"FD_SET","","",N,N],[5,"FD_ZERO","","",N,N],[5,"WTERMSIG","","",N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED","","",N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS","","",N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP","","",N,[[["c_int"]],["bool"]]],[5,"QCMD","","",N,[[["c_int"],["c_int"]],["c_int"]]],[5,"WSTOPSIG","","",N,[[["c_int"]],["c_int"]]],[5,"_WSTATUS","","",N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED","","",N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED","","",N,[[["c_int"]],["bool"]]],[5,"WIFSTOPPED","","",N,[[["c_int"]],["bool"]]],[5,"isalnum","","",N,N],[5,"isalpha","","",N,N],[5,"iscntrl","","",N,N],[5,"isdigit","","",N,N],[5,"isgraph","","",N,N],[5,"islower","","",N,N],[5,"isprint","","",N,N],[5,"ispunct","","",N,N],[5,"isspace","","",N,N],[5,"isupper","","",N,N],[5,"isxdigit","","",N,N],[5,"tolower","","",N,N],[5,"toupper","","",N,N],[5,"fopen","","",N,N],[5,"freopen","","",N,N],[5,"fflush","","",N,N],[5,"fclose","","",N,N],[5,"remove","","",N,N],[5,"rename","","",N,N],[5,"tmpfile","","",N,N],[5,"setvbuf","","",N,N],[5,"setbuf","","",N,N],[5,"getchar","","",N,N],[5,"putchar","","",N,N],[5,"fgetc","","",N,N],[5,"fgets","","",N,N],[5,"fputc","","",N,N],[5,"fputs","","",N,N],[5,"puts","","",N,N],[5,"ungetc","","",N,N],[5,"fread","","",N,N],[5,"fwrite","","",N,N],[5,"fseek","","",N,N],[5,"ftell","","",N,N],[5,"rewind","","",N,N],[5,"fgetpos","","",N,N],[5,"fsetpos","","",N,N],[5,"feof","","",N,N],[5,"ferror","","",N,N],[5,"perror","","",N,N],[5,"atoi","","",N,N],[5,"strtod","","",N,N],[5,"strtol","","",N,N],[5,"strtoul","","",N,N],[5,"calloc","","",N,N],[5,"malloc","","",N,N],[5,"realloc","","",N,N],[5,"free","","",N,N],[5,"abort","","",N,N],[5,"exit","","",N,N],[5,"_exit","","",N,N],[5,"atexit","","",N,N],[5,"system","","",N,N],[5,"getenv","","",N,N],[5,"strcpy","","",N,N],[5,"strncpy","","",N,N],[5,"strcat","","",N,N],[5,"strncat","","",N,N],[5,"strcmp","","",N,N],[5,"strncmp","","",N,N],[5,"strcoll","","",N,N],[5,"strchr","","",N,N],[5,"strrchr","","",N,N],[5,"strspn","","",N,N],[5,"strcspn","","",N,N],[5,"strdup","","",N,N],[5,"strpbrk","","",N,N],[5,"strstr","","",N,N],[5,"strlen","","",N,N],[5,"strnlen","","",N,N],[5,"strerror","","",N,N],[5,"strtok","","",N,N],[5,"strxfrm","","",N,N],[5,"wcslen","","",N,N],[5,"wcstombs","","",N,N],[5,"memchr","","",N,N],[5,"memcmp","","",N,N],[5,"memcpy","","",N,N],[5,"memmove","","",N,N],[5,"memset","","",N,N],[5,"abs","","",N,N],[5,"atof","","",N,N],[5,"labs","","",N,N],[5,"rand","","",N,N],[5,"srand","","",N,N],[5,"getpwnam","","",N,N],[5,"getpwuid","","",N,N],[5,"fprintf","","",N,N],[5,"printf","","",N,N],[5,"snprintf","","",N,N],[5,"sprintf","","",N,N],[5,"fscanf","","",N,N],[5,"scanf","","",N,N],[5,"sscanf","","",N,N],[5,"getchar_unlocked","","",N,N],[5,"putchar_unlocked","","",N,N],[5,"socket","","",N,N],[5,"connect","","",N,N],[5,"listen","","",N,N],[5,"accept","","",N,N],[5,"getpeername","","",N,N],[5,"getsockname","","",N,N],[5,"setsockopt","","",N,N],[5,"socketpair","","",N,N],[5,"sendto","","",N,N],[5,"shutdown","","",N,N],[5,"chmod","","",N,N],[5,"fchmod","","",N,N],[5,"fstat","","",N,N],[5,"mkdir","","",N,N],[5,"stat","","",N,N],[5,"pclose","","",N,N],[5,"fdopen","","",N,N],[5,"fileno","","",N,N],[5,"open","","",N,N],[5,"creat","","",N,N],[5,"fcntl","","",N,N],[5,"opendir","","",N,N],[5,"fdopendir","","",N,N],[5,"readdir","","",N,N],[5,"readdir_r","","",N,N],[5,"closedir","","",N,N],[5,"rewinddir","","",N,N],[5,"openat","","",N,N],[5,"fchmodat","","",N,N],[5,"fchown","","",N,N],[5,"fchownat","","",N,N],[5,"fstatat","","",N,N],[5,"linkat","","",N,N],[5,"mkdirat","","",N,N],[5,"readlinkat","","",N,N],[5,"renameat","","",N,N],[5,"symlinkat","","",N,N],[5,"unlinkat","","",N,N],[5,"access","","",N,N],[5,"alarm","","",N,N],[5,"chdir","","",N,N],[5,"fchdir","","",N,N],[5,"chown","","",N,N],[5,"lchown","","",N,N],[5,"close","","",N,N],[5,"dup","","",N,N],[5,"dup2","","",N,N],[5,"execl","","",N,N],[5,"execle","","",N,N],[5,"execlp","","",N,N],[5,"execv","","",N,N],[5,"execve","","",N,N],[5,"execvp","","",N,N],[5,"fork","","",N,N],[5,"fpathconf","","",N,N],[5,"getcwd","","",N,N],[5,"getegid","","",N,N],[5,"geteuid","","",N,N],[5,"getgid","","",N,N],[5,"getgroups","","",N,N],[5,"getlogin","","",N,N],[5,"getopt","","",N,N],[5,"getpgid","","",N,N],[5,"getpgrp","","",N,N],[5,"getpid","","",N,N],[5,"getppid","","",N,N],[5,"getuid","","",N,N],[5,"isatty","","",N,N],[5,"link","","",N,N],[5,"lseek","","",N,N],[5,"pathconf","","",N,N],[5,"pause","","",N,N],[5,"pipe","","",N,N],[5,"posix_memalign","","",N,N],[5,"read","","",N,N],[5,"rmdir","","",N,N],[5,"seteuid","","",N,N],[5,"setgid","","",N,N],[5,"setpgid","","",N,N],[5,"setsid","","",N,N],[5,"setuid","","",N,N],[5,"sleep","","",N,N],[5,"nanosleep","","",N,N],[5,"tcgetpgrp","","",N,N],[5,"tcsetpgrp","","",N,N],[5,"ttyname","","",N,N],[5,"unlink","","",N,N],[5,"wait","","",N,N],[5,"waitpid","","",N,N],[5,"write","","",N,N],[5,"pread","","",N,N],[5,"pwrite","","",N,N],[5,"umask","","",N,N],[5,"utime","","",N,N],[5,"kill","","",N,N],[5,"killpg","","",N,N],[5,"mlock","","",N,N],[5,"munlock","","",N,N],[5,"mlockall","","",N,N],[5,"munlockall","","",N,N],[5,"mmap","","",N,N],[5,"munmap","","",N,N],[5,"if_nametoindex","","",N,N],[5,"if_indextoname","","",N,N],[5,"lstat","","",N,N],[5,"fsync","","",N,N],[5,"setenv","","",N,N],[5,"unsetenv","","",N,N],[5,"symlink","","",N,N],[5,"ftruncate","","",N,N],[5,"signal","","",N,N],[5,"getrlimit","","",N,N],[5,"setrlimit","","",N,N],[5,"getrusage","","",N,N],[5,"realpath","","",N,N],[5,"flock","","",N,N],[5,"gettimeofday","","",N,N],[5,"times","","",N,N],[5,"pthread_self","","",N,N],[5,"pthread_join","","",N,N],[5,"pthread_exit","","",N,N],[5,"pthread_attr_init","","",N,N],[5,"pthread_attr_destroy","","",N,N],[5,"pthread_attr_setstacksize","","",N,N],[5,"pthread_attr_setdetachstate","","",N,N],[5,"pthread_detach","","",N,N],[5,"sched_yield","","",N,N],[5,"pthread_key_create","","",N,N],[5,"pthread_key_delete","","",N,N],[5,"pthread_getspecific","","",N,N],[5,"pthread_setspecific","","",N,N],[5,"pthread_mutex_init","","",N,N],[5,"pthread_mutex_destroy","","",N,N],[5,"pthread_mutex_lock","","",N,N],[5,"pthread_mutex_trylock","","",N,N],[5,"pthread_mutex_unlock","","",N,N],[5,"pthread_mutexattr_init","","",N,N],[5,"pthread_mutexattr_destroy","","",N,N],[5,"pthread_mutexattr_settype","","",N,N],[5,"pthread_cond_init","","",N,N],[5,"pthread_cond_wait","","",N,N],[5,"pthread_cond_timedwait","","",N,N],[5,"pthread_cond_signal","","",N,N],[5,"pthread_cond_broadcast","","",N,N],[5,"pthread_cond_destroy","","",N,N],[5,"pthread_condattr_init","","",N,N],[5,"pthread_condattr_destroy","","",N,N],[5,"pthread_rwlock_init","","",N,N],[5,"pthread_rwlock_destroy","","",N,N],[5,"pthread_rwlock_rdlock","","",N,N],[5,"pthread_rwlock_tryrdlock","","",N,N],[5,"pthread_rwlock_wrlock","","",N,N],[5,"pthread_rwlock_trywrlock","","",N,N],[5,"pthread_rwlock_unlock","","",N,N],[5,"pthread_rwlockattr_init","","",N,N],[5,"pthread_rwlockattr_destroy","","",N,N],[5,"strerror_r","","",N,N],[5,"getsockopt","","",N,N],[5,"raise","","",N,N],[5,"sigaction","","",N,N],[5,"utimes","","",N,N],[5,"dlopen","","",N,N],[5,"dlerror","","",N,N],[5,"dlsym","","",N,N],[5,"dlclose","","",N,N],[5,"dladdr","","",N,N],[5,"getaddrinfo","","",N,N],[5,"freeaddrinfo","","",N,N],[5,"gai_strerror","","",N,N],[5,"res_init","","",N,N],[5,"gmtime_r","","",N,N],[5,"localtime_r","","",N,N],[5,"mktime","","",N,N],[5,"time","","",N,N],[5,"gmtime","","",N,N],[5,"localtime","","",N,N],[5,"difftime","","",N,N],[5,"mknod","","",N,N],[5,"uname","","",N,N],[5,"gethostname","","",N,N],[5,"getservbyname","","",N,N],[5,"getprotobyname","","",N,N],[5,"getprotobynumber","","",N,N],[5,"chroot","","",N,N],[5,"usleep","","",N,N],[5,"send","","",N,N],[5,"recv","","",N,N],[5,"putenv","","",N,N],[5,"poll","","",N,N],[5,"select","","",N,N],[5,"setlocale","","",N,N],[5,"localeconv","","",N,N],[5,"sem_destroy","","",N,N],[5,"sem_wait","","",N,N],[5,"sem_trywait","","",N,N],[5,"sem_post","","",N,N],[5,"sem_init","","",N,N],[5,"statvfs","","",N,N],[5,"fstatvfs","","",N,N],[5,"readlink","","",N,N],[5,"sigemptyset","","",N,N],[5,"sigaddset","","",N,N],[5,"sigfillset","","",N,N],[5,"sigdelset","","",N,N],[5,"sigismember","","",N,N],[5,"sigprocmask","","",N,N],[5,"sigpending","","",N,N],[5,"timegm","","",N,N],[5,"getsid","","",N,N],[5,"sysconf","","",N,N],[5,"mkfifo","","",N,N],[5,"pselect","","",N,N],[5,"fseeko","","",N,N],[5,"ftello","","",N,N],[5,"tcdrain","","",N,N],[5,"cfgetispeed","","",N,N],[5,"cfgetospeed","","",N,N],[5,"cfmakeraw","","",N,N],[5,"cfsetispeed","","",N,N],[5,"cfsetospeed","","",N,N],[5,"cfsetspeed","","",N,N],[5,"tcgetattr","","",N,N],[5,"tcsetattr","","",N,N],[5,"tcflow","","",N,N],[5,"tcflush","","",N,N],[5,"tcgetsid","","",N,N],[5,"tcsendbreak","","",N,N],[5,"mkstemp","","",N,N],[5,"mkdtemp","","",N,N],[5,"tmpnam","","",N,N],[5,"openlog","","",N,N],[5,"closelog","","",N,N],[5,"setlogmask","","",N,N],[5,"syslog","","",N,N],[5,"nice","","",N,N],[5,"grantpt","","",N,N],[5,"posix_openpt","","",N,N],[5,"ptsname","","",N,N],[5,"unlockpt","","",N,N],[5,"getifaddrs","","",N,N],[5,"freeifaddrs","","",N,N],[5,"setgroups","","",N,N],[5,"ioctl","","",N,N],[5,"kqueue","","",N,N],[5,"unmount","","",N,N],[5,"syscall","","",N,N],[5,"getpwent","","",N,N],[5,"setpwent","","",N,N],[5,"endpwent","","",N,N],[5,"setgrent","","",N,N],[5,"endgrent","","",N,N],[5,"getgrent","","",N,N],[5,"getprogname","","",N,N],[5,"setprogname","","",N,N],[5,"getloadavg","","",N,N],[5,"if_nameindex","","",N,N],[5,"if_freenameindex","","",N,N],[5,"getpeereid","","",N,N],[5,"glob","","",N,N],[5,"globfree","","",N,N],[5,"posix_madvise","","",N,N],[5,"shm_unlink","","",N,N],[5,"seekdir","","",N,N],[5,"telldir","","",N,N],[5,"madvise","","",N,N],[5,"msync","","",N,N],[5,"recvfrom","","",N,N],[5,"mkstemps","","",N,N],[5,"futimes","","",N,N],[5,"nl_langinfo","","",N,N],[5,"bind","","",N,N],[5,"writev","","",N,N],[5,"readv","","",N,N],[5,"sendmsg","","",N,N],[5,"recvmsg","","",N,N],[5,"sync","","",N,N],[5,"getgrgid_r","","",N,N],[5,"sigaltstack","","",N,N],[5,"sem_close","","",N,N],[5,"getdtablesize","","",N,N],[5,"getgrnam_r","","",N,N],[5,"pthread_sigmask","","",N,N],[5,"sem_open","","",N,N],[5,"getgrnam","","",N,N],[5,"pthread_cancel","","",N,N],[5,"pthread_kill","","",N,N],[5,"sem_unlink","","",N,N],[5,"daemon","","",N,N],[5,"getpwnam_r","","",N,N],[5,"getpwuid_r","","",N,N],[5,"sigwait","","",N,N],[5,"pthread_atfork","","",N,N],[5,"getgrgid","","",N,N],[5,"popen","","",N,N],[5,"faccessat","","",N,N],[5,"pthread_create","","",N,N],[5,"aio_read","","",N,N],[5,"aio_write","","",N,N],[5,"aio_fsync","","",N,N],[5,"aio_error","","",N,N],[5,"aio_return","","",N,N],[5,"aio_suspend","","",N,N],[5,"aio_cancel","","",N,N],[5,"clock_getres","","",N,N],[5,"clock_gettime","","",N,N],[5,"lio_listio","","",N,N],[5,"dirfd","","",N,N],[5,"lutimes","","",N,N],[5,"getutxent","","",N,N],[5,"getutxid","","",N,N],[5,"getutxline","","",N,N],[5,"pututxline","","",N,N],[5,"setutxent","","",N,N],[5,"endutxent","","",N,N],[5,"utmpxname","","",N,N],[5,"getnameinfo","","",N,N],[5,"mincore","","",N,N],[5,"sysctlnametomib","","",N,N],[5,"mprotect","","",N,N],[5,"shm_open","","",N,N],[5,"shmat","","",N,N],[5,"shmdt","","",N,N],[5,"shmctl","","",N,N],[5,"shmget","","",N,N],[5,"sysctl","","",N,N],[5,"sysctlbyname","","",N,N],[5,"mach_absolute_time","","",N,N],[5,"mach_timebase_info","","",N,N],[5,"pthread_setname_np","","",N,N],[5,"pthread_get_stackaddr_np","","",N,N],[5,"pthread_get_stacksize_np","","",N,N],[5,"pthread_condattr_setpshared","","",N,N],[5,"pthread_condattr_getpshared","","",N,N],[5,"pthread_mutexattr_setpshared","","",N,N],[5,"pthread_mutexattr_getpshared","","",N,N],[5,"pthread_rwlockattr_getpshared","","",N,N],[5,"pthread_rwlockattr_setpshared","","",N,N],[5,"__error","","",N,N],[5,"backtrace","","",N,N],[5,"statfs","","",N,N],[5,"fstatfs","","",N,N],[5,"kevent","","",N,N],[5,"kevent64","","",N,N],[5,"mount","","",N,N],[5,"ptrace","","",N,N],[5,"quotactl","","",N,N],[5,"sethostname","","",N,N],[5,"sendfile","","",N,N],[5,"openpty","","",N,N],[5,"forkpty","","",N,N],[5,"duplocale","","",N,N],[5,"freelocale","","",N,N],[5,"localeconv_l","","",N,N],[5,"newlocale","","",N,N],[5,"uselocale","","",N,N],[5,"querylocale","","",N,N],[5,"getpriority","","",N,N],[5,"setpriority","","",N,N],[5,"getdomainname","","",N,N],[5,"setdomainname","","",N,N],[5,"getxattr","","",N,N],[5,"fgetxattr","","",N,N],[5,"setxattr","","",N,N],[5,"fsetxattr","","",N,N],[5,"listxattr","","",N,N],[5,"flistxattr","","",N,N],[5,"removexattr","","",N,N],[5,"renamex_np","","",N,N],[5,"renameatx_np","","",N,N],[5,"fremovexattr","","",N,N],[5,"getgrouplist","","",N,N],[5,"initgroups","","",N,N],[5,"waitid","","",N,N],[5,"brk","","",N,N],[5,"sbrk","","",N,N],[5,"settimeofday","","",N,N],[5,"_dyld_image_count","","",N,N],[5,"_dyld_get_image_header","","",N,N],[5,"_dyld_get_image_vmaddr_slide","","",N,N],[5,"_dyld_get_image_name","","",N,N],[5,"posix_spawn","","",N,N],[5,"posix_spawnp","","",N,N],[5,"posix_spawnattr_init","","",N,N],[5,"posix_spawnattr_destroy","","",N,N],[5,"posix_spawnattr_getsigdefault","","",N,N],[5,"posix_spawnattr_setsigdefault","","",N,N],[5,"posix_spawnattr_getsigmask","","",N,N],[5,"posix_spawnattr_setsigmask","","",N,N],[5,"posix_spawnattr_getflags","","",N,N],[5,"posix_spawnattr_setflags","","",N,N],[5,"posix_spawnattr_getpgroup","","",N,N],[5,"posix_spawnattr_setpgroup","","",N,N],[5,"posix_spawn_file_actions_init","","",N,N],[5,"posix_spawn_file_actions_destroy","","",N,N],[5,"posix_spawn_file_actions_addopen","","",N,N],[5,"posix_spawn_file_actions_addclose","","",N,N],[5,"posix_spawn_file_actions_adddup2","","",N,N],[11,"clone","","",78,[[["self"]],["pthread_attr_t"]]],[11,"clone","","",75,[[["self"]],["timeval32"]]],[11,"clone","","",76,[[["self"]],["if_data"]]],[11,"clone","","",77,[[["self"]],["bpf_hdr"]]],[11,"clone","","",30,[[["self"]],["aiocb"]]],[11,"clone","","",31,[[["self"]],["utmpx"]]],[11,"clone","","",32,[[["self"]],["glob_t"]]],[11,"clone","","",33,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",34,[[["self"]],["addrinfo"]]],[11,"clone","","",35,[[["self"]],["mach_timebase_info"]]],[11,"clone","","",36,[[["self"]],["stat"]]],[11,"clone","","",37,[[["self"]],["dirent"]]],[11,"clone","","",79,[[["self"]],["pthread_mutex_t"]]],[11,"clone","","",80,[[["self"]],["pthread_mutexattr_t"]]],[11,"clone","","",81,[[["self"]],["pthread_cond_t"]]],[11,"clone","","",82,[[["self"]],["pthread_condattr_t"]]],[11,"clone","","",83,[[["self"]],["pthread_rwlock_t"]]],[11,"clone","","",84,[[["self"]],["pthread_rwlockattr_t"]]],[11,"clone","","",38,[[["self"]],["siginfo_t"]]],[11,"clone","","",39,[[["self"]],["sigaction"]]],[11,"clone","","",40,[[["self"]],["stack_t"]]],[11,"clone","","",41,[[["self"]],["fstore_t"]]],[11,"clone","","",42,[[["self"]],["radvisory"]]],[11,"clone","","",43,[[["self"]],["statvfs"]]],[11,"clone","","",44,[[["self"]],["dl_info"]]],[11,"clone","","",45,[[["self"]],["sockaddr_in"]]],[11,"clone","","",46,[[["self"]],["statfs"]]],[11,"clone","","",47,[[["self"]],["kevent"]]],[11,"clone","","",48,[[["self"]],["kevent64_s"]]],[11,"clone","","",49,[[["self"]],["dqblk"]]],[11,"clone","","",50,[[["self"]],["if_msghdr"]]],[11,"clone","","",51,[[["self"]],["termios"]]],[11,"clone","","",52,[[["self"]],["flock"]]],[11,"clone","","",53,[[["self"]],["sf_hdtr"]]],[11,"clone","","",54,[[["self"]],["lconv"]]],[11,"clone","","",55,[[["self"]],["sigevent"]]],[11,"clone","","",56,[[["self"]],["proc_taskinfo"]]],[11,"clone","","",57,[[["self"]],["proc_bsdinfo"]]],[11,"clone","","",58,[[["self"]],["proc_taskallinfo"]]],[11,"clone","","",59,[[["self"]],["proc_threadinfo"]]],[11,"clone","","",60,[[["self"]],["xsw_usage"]]],[11,"clone","","",61,[[["self"]],["xucred"]]],[11,"clone","","",62,[[["self"]],["mach_header"]]],[11,"clone","","",63,[[["self"]],["mach_header_64"]]],[11,"clone","","",64,[[["self"]],["segment_command"]]],[11,"clone","","",65,[[["self"]],["segment_command_64"]]],[11,"clone","","",66,[[["self"]],["load_command"]]],[11,"clone","","",67,[[["self"]],["sockaddr_dl"]]],[11,"clone","","",68,[[["self"]],["sockaddr_inarp"]]],[11,"clone","","",69,[[["self"]],["sockaddr_ctl"]]],[11,"clone","","",70,[[["self"]],["in_pktinfo"]]],[11,"clone","","",71,[[["self"]],["in6_pktinfo"]]],[11,"clone","","",72,[[["self"]],["ipc_perm"]]],[11,"clone","","",73,[[["self"]],["shmid_ds"]]],[11,"clone","","",74,[[["self"]],["arphdr"]]],[11,"clone","","",20,[[["self"]],["sockaddr"]]],[11,"clone","","",21,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",22,[[["self"]],["sockaddr_un"]]],[11,"clone","","",23,[[["self"]],["passwd"]]],[11,"clone","","",24,[[["self"]],["ifaddrs"]]],[11,"clone","","",85,[[["self"]],["fd_set"]]],[11,"clone","","",25,[[["self"]],["tm"]]],[11,"clone","","",26,[[["self"]],["utsname"]]],[11,"clone","","",27,[[["self"]],["msghdr"]]],[11,"clone","","",28,[[["self"]],["cmsghdr"]]],[11,"clone","","",86,[[["self"]],["fsid_t"]]],[11,"clone","","",29,[[["self"]],["if_nameindex"]]],[11,"clone","","",0,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["utimbuf"]]],[11,"clone","","",2,[[["self"]],["timeval"]]],[11,"clone","","",3,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["rlimit"]]],[11,"clone","","",5,[[["self"]],["rusage"]]],[11,"clone","","",6,[[["self"]],["in_addr"]]],[11,"clone","","",7,[[["self"]],["in6_addr"]]],[11,"clone","","",8,[[["self"]],["ip_mreq"]]],[11,"clone","","",9,[[["self"]],["ipv6_mreq"]]],[11,"clone","","",10,[[["self"]],["hostent"]]],[11,"clone","","",11,[[["self"]],["iovec"]]],[11,"clone","","",12,[[["self"]],["pollfd"]]],[11,"clone","","",13,[[["self"]],["winsize"]]],[11,"clone","","",14,[[["self"]],["linger"]]],[11,"clone","","",15,[[["self"]],["sigval"]]],[11,"clone","","",16,[[["self"]],["itimerval"]]],[11,"clone","","",17,[[["self"]],["tms"]]],[11,"clone","","",18,[[["self"]],["servent"]]],[11,"clone","","",19,[[["self"]],["protoent"]]],[6,"int8_t","","",N,N],[6,"int16_t","","",N,N],[6,"int32_t","","",N,N],[6,"int64_t","","",N,N],[6,"uint8_t","","",N,N],[6,"uint16_t","","",N,N],[6,"uint32_t","","",N,N],[6,"uint64_t","","",N,N],[6,"c_schar","","",N,N],[6,"c_uchar","","",N,N],[6,"c_short","","",N,N],[6,"c_ushort","","",N,N],[6,"c_int","","",N,N],[6,"c_uint","","",N,N],[6,"c_float","","",N,N],[6,"c_double","","",N,N],[6,"c_longlong","","",N,N],[6,"c_ulonglong","","",N,N],[6,"intmax_t","","",N,N],[6,"uintmax_t","","",N,N],[6,"size_t","","",N,N],[6,"ptrdiff_t","","",N,N],[6,"intptr_t","","",N,N],[6,"uintptr_t","","",N,N],[6,"ssize_t","","",N,N],[6,"pid_t","","",N,N],[6,"uid_t","","",N,N],[6,"gid_t","","",N,N],[6,"in_addr_t","","",N,N],[6,"in_port_t","","",N,N],[6,"sighandler_t","","",N,N],[6,"cc_t","","",N,N],[6,"wchar_t","","",N,N],[6,"off_t","","",N,N],[6,"useconds_t","","",N,N],[6,"blkcnt_t","","",N,N],[6,"socklen_t","","",N,N],[6,"sa_family_t","","",N,N],[6,"pthread_t","","",N,N],[6,"nfds_t","","",N,N],[6,"c_char","","",N,N],[6,"clock_t","","",N,N],[6,"time_t","","",N,N],[6,"suseconds_t","","",N,N],[6,"dev_t","","",N,N],[6,"ino_t","","",N,N],[6,"mode_t","","",N,N],[6,"nlink_t","","",N,N],[6,"blksize_t","","",N,N],[6,"rlim_t","","",N,N],[6,"mach_timebase_info_data_t","","",N,N],[6,"pthread_key_t","","",N,N],[6,"sigset_t","","",N,N],[6,"clockid_t","","",N,N],[6,"fsblkcnt_t","","",N,N],[6,"fsfilcnt_t","","",N,N],[6,"speed_t","","",N,N],[6,"tcflag_t","","",N,N],[6,"nl_item","","",N,N],[6,"id_t","","",N,N],[6,"sem_t","","",N,N],[6,"idtype_t","","",N,N],[6,"integer_t","","",N,N],[6,"cpu_type_t","","",N,N],[6,"cpu_subtype_t","","",N,N],[6,"vm_prot_t","","",N,N],[6,"posix_spawnattr_t","","",N,N],[6,"posix_spawn_file_actions_t","","",N,N],[6,"key_t","","",N,N],[6,"shmatt_t","","",N,N],[6,"c_long","","",N,N],[6,"c_ulong","","",N,N],[6,"boolean_t","","",N,N],[17,"INT_MIN","","",N,N],[17,"INT_MAX","","",N,N],[17,"SIG_DFL","","",N,N],[17,"SIG_IGN","","",N,N],[17,"SIG_ERR","","",N,N],[17,"DT_UNKNOWN","","",N,N],[17,"DT_FIFO","","",N,N],[17,"DT_CHR","","",N,N],[17,"DT_DIR","","",N,N],[17,"DT_BLK","","",N,N],[17,"DT_REG","","",N,N],[17,"DT_LNK","","",N,N],[17,"DT_SOCK","","",N,N],[17,"FD_CLOEXEC","","",N,N],[17,"USRQUOTA","","",N,N],[17,"GRPQUOTA","","",N,N],[17,"SIGIOT","","",N,N],[17,"S_ISUID","","",N,N],[17,"S_ISGID","","",N,N],[17,"S_ISVTX","","",N,N],[17,"IF_NAMESIZE","","",N,N],[17,"IFNAMSIZ","","",N,N],[17,"LOG_EMERG","","",N,N],[17,"LOG_ALERT","","",N,N],[17,"LOG_CRIT","","",N,N],[17,"LOG_ERR","","",N,N],[17,"LOG_WARNING","","",N,N],[17,"LOG_NOTICE","","",N,N],[17,"LOG_INFO","","",N,N],[17,"LOG_DEBUG","","",N,N],[17,"LOG_KERN","","",N,N],[17,"LOG_USER","","",N,N],[17,"LOG_MAIL","","",N,N],[17,"LOG_DAEMON","","",N,N],[17,"LOG_AUTH","","",N,N],[17,"LOG_SYSLOG","","",N,N],[17,"LOG_LPR","","",N,N],[17,"LOG_NEWS","","",N,N],[17,"LOG_UUCP","","",N,N],[17,"LOG_LOCAL0","","",N,N],[17,"LOG_LOCAL1","","",N,N],[17,"LOG_LOCAL2","","",N,N],[17,"LOG_LOCAL3","","",N,N],[17,"LOG_LOCAL4","","",N,N],[17,"LOG_LOCAL5","","",N,N],[17,"LOG_LOCAL6","","",N,N],[17,"LOG_LOCAL7","","",N,N],[17,"LOG_PID","","",N,N],[17,"LOG_CONS","","",N,N],[17,"LOG_ODELAY","","",N,N],[17,"LOG_NDELAY","","",N,N],[17,"LOG_NOWAIT","","",N,N],[17,"LOG_PRIMASK","","",N,N],[17,"LOG_FACMASK","","",N,N],[17,"PRIO_PROCESS","","",N,N],[17,"PRIO_PGRP","","",N,N],[17,"PRIO_USER","","",N,N],[17,"PRIO_MIN","","",N,N],[17,"PRIO_MAX","","",N,N],[17,"IPPROTO_ICMP","","",N,N],[17,"IPPROTO_ICMPV6","","",N,N],[17,"IPPROTO_TCP","","",N,N],[17,"IPPROTO_UDP","","",N,N],[17,"IPPROTO_IP","","",N,N],[17,"IPPROTO_IPV6","","",N,N],[17,"INADDR_LOOPBACK","","",N,N],[17,"INADDR_ANY","","",N,N],[17,"INADDR_BROADCAST","","",N,N],[17,"INADDR_NONE","","",N,N],[17,"ARPOP_REQUEST","","",N,N],[17,"ARPOP_REPLY","","",N,N],[17,"ATF_COM","","",N,N],[17,"ATF_PERM","","",N,N],[17,"ATF_PUBL","","",N,N],[17,"ATF_USETRAILERS","","",N,N],[17,"LC_ALL","","",N,N],[17,"LC_COLLATE","","",N,N],[17,"LC_CTYPE","","",N,N],[17,"LC_MONETARY","","",N,N],[17,"LC_NUMERIC","","",N,N],[17,"LC_TIME","","",N,N],[17,"LC_MESSAGES","","",N,N],[17,"FIOCLEX","","",N,N],[17,"FIONBIO","","",N,N],[17,"PATH_MAX","","",N,N],[17,"SA_ONSTACK","","",N,N],[17,"SA_SIGINFO","","",N,N],[17,"SA_RESTART","","",N,N],[17,"SA_RESETHAND","","",N,N],[17,"SA_NOCLDSTOP","","",N,N],[17,"SA_NODEFER","","",N,N],[17,"SA_NOCLDWAIT","","",N,N],[17,"SS_ONSTACK","","",N,N],[17,"SS_DISABLE","","",N,N],[17,"SIGCHLD","","",N,N],[17,"SIGBUS","","",N,N],[17,"SIGUSR1","","",N,N],[17,"SIGUSR2","","",N,N],[17,"SIGCONT","","",N,N],[17,"SIGSTOP","","",N,N],[17,"SIGTSTP","","",N,N],[17,"SIGURG","","",N,N],[17,"SIGIO","","",N,N],[17,"SIGSYS","","",N,N],[17,"SIGTTIN","","",N,N],[17,"SIGTTOU","","",N,N],[17,"SIGXCPU","","",N,N],[17,"SIGXFSZ","","",N,N],[17,"SIGVTALRM","","",N,N],[17,"SIGPROF","","",N,N],[17,"SIGWINCH","","",N,N],[17,"SIGINFO","","",N,N],[17,"SIG_SETMASK","","",N,N],[17,"SIG_BLOCK","","",N,N],[17,"SIG_UNBLOCK","","",N,N],[17,"IP_MULTICAST_IF","","",N,N],[17,"IP_MULTICAST_TTL","","",N,N],[17,"IP_MULTICAST_LOOP","","",N,N],[17,"IPV6_UNICAST_HOPS","","",N,N],[17,"IPV6_MULTICAST_IF","","",N,N],[17,"IPV6_MULTICAST_HOPS","","",N,N],[17,"IPV6_MULTICAST_LOOP","","",N,N],[17,"IPV6_V6ONLY","","",N,N],[17,"ST_RDONLY","","",N,N],[17,"SCM_RIGHTS","","",N,N],[17,"NCCS","","",N,N],[17,"O_ACCMODE","","",N,N],[17,"O_RDONLY","","",N,N],[17,"O_WRONLY","","",N,N],[17,"O_RDWR","","",N,N],[17,"O_APPEND","","",N,N],[17,"O_CREAT","","",N,N],[17,"O_TRUNC","","",N,N],[17,"O_EXCL","","",N,N],[17,"O_ASYNC","","",N,N],[17,"O_SYNC","","",N,N],[17,"O_NONBLOCK","","",N,N],[17,"O_NOFOLLOW","","",N,N],[17,"O_SHLOCK","","",N,N],[17,"O_EXLOCK","","",N,N],[17,"O_FSYNC","","",N,N],[17,"O_NDELAY","","",N,N],[17,"F_GETOWN","","",N,N],[17,"F_SETOWN","","",N,N],[17,"MNT_FORCE","","",N,N],[17,"Q_SYNC","","",N,N],[17,"Q_QUOTAON","","",N,N],[17,"Q_QUOTAOFF","","",N,N],[17,"TCIOFF","","",N,N],[17,"TCION","","",N,N],[17,"TCOOFF","","",N,N],[17,"TCOON","","",N,N],[17,"TCIFLUSH","","",N,N],[17,"TCOFLUSH","","",N,N],[17,"TCIOFLUSH","","",N,N],[17,"TCSANOW","","",N,N],[17,"TCSADRAIN","","",N,N],[17,"TCSAFLUSH","","",N,N],[17,"VEOF","","",N,N],[17,"VEOL","","",N,N],[17,"VEOL2","","",N,N],[17,"VERASE","","",N,N],[17,"VWERASE","","",N,N],[17,"VKILL","","",N,N],[17,"VREPRINT","","",N,N],[17,"VINTR","","",N,N],[17,"VQUIT","","",N,N],[17,"VSUSP","","",N,N],[17,"VDSUSP","","",N,N],[17,"VSTART","","",N,N],[17,"VSTOP","","",N,N],[17,"VLNEXT","","",N,N],[17,"VDISCARD","","",N,N],[17,"VMIN","","",N,N],[17,"VTIME","","",N,N],[17,"VSTATUS","","",N,N],[17,"_POSIX_VDISABLE","","",N,N],[17,"IGNBRK","","",N,N],[17,"BRKINT","","",N,N],[17,"IGNPAR","","",N,N],[17,"PARMRK","","",N,N],[17,"INPCK","","",N,N],[17,"ISTRIP","","",N,N],[17,"INLCR","","",N,N],[17,"IGNCR","","",N,N],[17,"ICRNL","","",N,N],[17,"IXON","","",N,N],[17,"IXOFF","","",N,N],[17,"IXANY","","",N,N],[17,"IMAXBEL","","",N,N],[17,"OPOST","","",N,N],[17,"ONLCR","","",N,N],[17,"OXTABS","","",N,N],[17,"ONOEOT","","",N,N],[17,"CIGNORE","","",N,N],[17,"CSIZE","","",N,N],[17,"CS5","","",N,N],[17,"CS6","","",N,N],[17,"CS7","","",N,N],[17,"CS8","","",N,N],[17,"CSTOPB","","",N,N],[17,"CREAD","","",N,N],[17,"PARENB","","",N,N],[17,"PARODD","","",N,N],[17,"HUPCL","","",N,N],[17,"CLOCAL","","",N,N],[17,"ECHOKE","","",N,N],[17,"ECHOE","","",N,N],[17,"ECHOK","","",N,N],[17,"ECHO","","",N,N],[17,"ECHONL","","",N,N],[17,"ECHOPRT","","",N,N],[17,"ECHOCTL","","",N,N],[17,"ISIG","","",N,N],[17,"ICANON","","",N,N],[17,"ALTWERASE","","",N,N],[17,"IEXTEN","","",N,N],[17,"EXTPROC","","",N,N],[17,"TOSTOP","","",N,N],[17,"FLUSHO","","",N,N],[17,"NOKERNINFO","","",N,N],[17,"PENDIN","","",N,N],[17,"NOFLSH","","",N,N],[17,"MDMBUF","","",N,N],[17,"WNOHANG","","",N,N],[17,"WUNTRACED","","",N,N],[17,"RTLD_LAZY","","",N,N],[17,"RTLD_NOW","","",N,N],[17,"RTLD_NEXT","","",N,N],[17,"RTLD_DEFAULT","","",N,N],[17,"RTLD_SELF","","",N,N],[17,"LOG_CRON","","",N,N],[17,"LOG_AUTHPRIV","","",N,N],[17,"LOG_FTP","","",N,N],[17,"LOG_PERROR","","",N,N],[17,"TCP_MAXSEG","","",N,N],[17,"PIPE_BUF","","",N,N],[17,"POLLIN","","",N,N],[17,"POLLPRI","","",N,N],[17,"POLLOUT","","",N,N],[17,"POLLERR","","",N,N],[17,"POLLHUP","","",N,N],[17,"POLLNVAL","","",N,N],[17,"POLLRDNORM","","",N,N],[17,"POLLWRNORM","","",N,N],[17,"POLLRDBAND","","",N,N],[17,"POLLWRBAND","","",N,N],[17,"_UTX_USERSIZE","","",N,N],[17,"_UTX_LINESIZE","","",N,N],[17,"_UTX_IDSIZE","","",N,N],[17,"_UTX_HOSTSIZE","","",N,N],[17,"EMPTY","","",N,N],[17,"RUN_LVL","","",N,N],[17,"BOOT_TIME","","",N,N],[17,"OLD_TIME","","",N,N],[17,"NEW_TIME","","",N,N],[17,"INIT_PROCESS","","",N,N],[17,"LOGIN_PROCESS","","",N,N],[17,"USER_PROCESS","","",N,N],[17,"DEAD_PROCESS","","",N,N],[17,"ACCOUNTING","","",N,N],[17,"SIGNATURE","","",N,N],[17,"SHUTDOWN_TIME","","",N,N],[17,"LC_COLLATE_MASK","","",N,N],[17,"LC_CTYPE_MASK","","",N,N],[17,"LC_MESSAGES_MASK","","",N,N],[17,"LC_MONETARY_MASK","","",N,N],[17,"LC_NUMERIC_MASK","","",N,N],[17,"LC_TIME_MASK","","",N,N],[17,"LC_ALL_MASK","","",N,N],[17,"CODESET","","",N,N],[17,"D_T_FMT","","",N,N],[17,"D_FMT","","",N,N],[17,"T_FMT","","",N,N],[17,"T_FMT_AMPM","","",N,N],[17,"AM_STR","","",N,N],[17,"PM_STR","","",N,N],[17,"DAY_1","","",N,N],[17,"DAY_2","","",N,N],[17,"DAY_3","","",N,N],[17,"DAY_4","","",N,N],[17,"DAY_5","","",N,N],[17,"DAY_6","","",N,N],[17,"DAY_7","","",N,N],[17,"ABDAY_1","","",N,N],[17,"ABDAY_2","","",N,N],[17,"ABDAY_3","","",N,N],[17,"ABDAY_4","","",N,N],[17,"ABDAY_5","","",N,N],[17,"ABDAY_6","","",N,N],[17,"ABDAY_7","","",N,N],[17,"MON_1","","",N,N],[17,"MON_2","","",N,N],[17,"MON_3","","",N,N],[17,"MON_4","","",N,N],[17,"MON_5","","",N,N],[17,"MON_6","","",N,N],[17,"MON_7","","",N,N],[17,"MON_8","","",N,N],[17,"MON_9","","",N,N],[17,"MON_10","","",N,N],[17,"MON_11","","",N,N],[17,"MON_12","","",N,N],[17,"ABMON_1","","",N,N],[17,"ABMON_2","","",N,N],[17,"ABMON_3","","",N,N],[17,"ABMON_4","","",N,N],[17,"ABMON_5","","",N,N],[17,"ABMON_6","","",N,N],[17,"ABMON_7","","",N,N],[17,"ABMON_8","","",N,N],[17,"ABMON_9","","",N,N],[17,"ABMON_10","","",N,N],[17,"ABMON_11","","",N,N],[17,"ABMON_12","","",N,N],[17,"CLOCK_REALTIME","","",N,N],[17,"CLOCK_MONOTONIC","","",N,N],[17,"CLOCK_PROCESS_CPUTIME_ID","","",N,N],[17,"CLOCK_THREAD_CPUTIME_ID","","",N,N],[17,"ERA","","",N,N],[17,"ERA_D_FMT","","",N,N],[17,"ERA_D_T_FMT","","",N,N],[17,"ERA_T_FMT","","",N,N],[17,"ALT_DIGITS","","",N,N],[17,"RADIXCHAR","","",N,N],[17,"THOUSEP","","",N,N],[17,"YESEXPR","","",N,N],[17,"NOEXPR","","",N,N],[17,"YESSTR","","",N,N],[17,"NOSTR","","",N,N],[17,"CRNCYSTR","","",N,N],[17,"D_MD_ORDER","","",N,N],[17,"EXIT_FAILURE","","",N,N],[17,"EXIT_SUCCESS","","",N,N],[17,"RAND_MAX","","",N,N],[17,"EOF","","",N,N],[17,"SEEK_SET","","",N,N],[17,"SEEK_CUR","","",N,N],[17,"SEEK_END","","",N,N],[17,"_IOFBF","","",N,N],[17,"_IONBF","","",N,N],[17,"_IOLBF","","",N,N],[17,"BUFSIZ","","",N,N],[17,"FOPEN_MAX","","",N,N],[17,"FILENAME_MAX","","",N,N],[17,"L_tmpnam","","",N,N],[17,"TMP_MAX","","",N,N],[17,"_PC_LINK_MAX","","",N,N],[17,"_PC_MAX_CANON","","",N,N],[17,"_PC_MAX_INPUT","","",N,N],[17,"_PC_NAME_MAX","","",N,N],[17,"_PC_PATH_MAX","","",N,N],[17,"_PC_PIPE_BUF","","",N,N],[17,"_PC_CHOWN_RESTRICTED","","",N,N],[17,"_PC_NO_TRUNC","","",N,N],[17,"_PC_VDISABLE","","",N,N],[17,"O_DSYNC","","",N,N],[17,"O_NOCTTY","","",N,N],[17,"O_CLOEXEC","","",N,N],[17,"O_DIRECTORY","","",N,N],[17,"S_IFIFO","","",N,N],[17,"S_IFCHR","","",N,N],[17,"S_IFBLK","","",N,N],[17,"S_IFDIR","","",N,N],[17,"S_IFREG","","",N,N],[17,"S_IFLNK","","",N,N],[17,"S_IFSOCK","","",N,N],[17,"S_IFMT","","",N,N],[17,"S_IEXEC","","",N,N],[17,"S_IWRITE","","",N,N],[17,"S_IREAD","","",N,N],[17,"S_IRWXU","","",N,N],[17,"S_IXUSR","","",N,N],[17,"S_IWUSR","","",N,N],[17,"S_IRUSR","","",N,N],[17,"S_IRWXG","","",N,N],[17,"S_IXGRP","","",N,N],[17,"S_IWGRP","","",N,N],[17,"S_IRGRP","","",N,N],[17,"S_IRWXO","","",N,N],[17,"S_IXOTH","","",N,N],[17,"S_IWOTH","","",N,N],[17,"S_IROTH","","",N,N],[17,"F_OK","","",N,N],[17,"R_OK","","",N,N],[17,"W_OK","","",N,N],[17,"X_OK","","",N,N],[17,"STDIN_FILENO","","",N,N],[17,"STDOUT_FILENO","","",N,N],[17,"STDERR_FILENO","","",N,N],[17,"F_LOCK","","",N,N],[17,"F_TEST","","",N,N],[17,"F_TLOCK","","",N,N],[17,"F_ULOCK","","",N,N],[17,"F_GETLK","","",N,N],[17,"F_SETLK","","",N,N],[17,"F_SETLKW","","",N,N],[17,"SIGHUP","","",N,N],[17,"SIGINT","","",N,N],[17,"SIGQUIT","","",N,N],[17,"SIGILL","","",N,N],[17,"SIGABRT","","",N,N],[17,"SIGEMT","","",N,N],[17,"SIGFPE","","",N,N],[17,"SIGKILL","","",N,N],[17,"SIGSEGV","","",N,N],[17,"SIGPIPE","","",N,N],[17,"SIGALRM","","",N,N],[17,"SIGTERM","","",N,N],[17,"PROT_NONE","","",N,N],[17,"PROT_READ","","",N,N],[17,"PROT_WRITE","","",N,N],[17,"PROT_EXEC","","",N,N],[17,"MAP_FILE","","",N,N],[17,"MAP_SHARED","","",N,N],[17,"MAP_PRIVATE","","",N,N],[17,"MAP_FIXED","","",N,N],[17,"MAP_ANON","","",N,N],[17,"VM_FLAGS_FIXED","","",N,N],[17,"VM_FLAGS_ANYWHERE","","",N,N],[17,"VM_FLAGS_PURGABLE","","",N,N],[17,"VM_FLAGS_RANDOM_ADDR","","",N,N],[17,"VM_FLAGS_NO_CACHE","","",N,N],[17,"VM_FLAGS_RESILIENT_CODESIGN","","",N,N],[17,"VM_FLAGS_RESILIENT_MEDIA","","",N,N],[17,"VM_FLAGS_OVERWRITE","","",N,N],[17,"VM_FLAGS_SUPERPAGE_MASK","","",N,N],[17,"VM_FLAGS_RETURN_DATA_ADDR","","",N,N],[17,"VM_FLAGS_RETURN_4K_DATA_ADDR","","",N,N],[17,"VM_FLAGS_ALIAS_MASK","","",N,N],[17,"VM_FLAGS_USER_ALLOCATE","","",N,N],[17,"VM_FLAGS_USER_MAP","","",N,N],[17,"VM_FLAGS_USER_REMAP","","",N,N],[17,"VM_FLAGS_SUPERPAGE_SHIFT","","",N,N],[17,"SUPERPAGE_NONE","","",N,N],[17,"SUPERPAGE_SIZE_ANY","","",N,N],[17,"VM_FLAGS_SUPERPAGE_NONE","","",N,N],[17,"VM_FLAGS_SUPERPAGE_SIZE_ANY","","",N,N],[17,"SUPERPAGE_SIZE_2MB","","",N,N],[17,"VM_FLAGS_SUPERPAGE_SIZE_2MB","","",N,N],[17,"VM_MEMORY_MALLOC","","",N,N],[17,"VM_MEMORY_MALLOC_SMALL","","",N,N],[17,"VM_MEMORY_MALLOC_LARGE","","",N,N],[17,"VM_MEMORY_MALLOC_HUGE","","",N,N],[17,"VM_MEMORY_SBRK","","",N,N],[17,"VM_MEMORY_REALLOC","","",N,N],[17,"VM_MEMORY_MALLOC_TINY","","",N,N],[17,"VM_MEMORY_MALLOC_LARGE_REUSABLE","","",N,N],[17,"VM_MEMORY_MALLOC_LARGE_REUSED","","",N,N],[17,"VM_MEMORY_ANALYSIS_TOOL","","",N,N],[17,"VM_MEMORY_MALLOC_NANO","","",N,N],[17,"VM_MEMORY_MACH_MSG","","",N,N],[17,"VM_MEMORY_IOKIT","","",N,N],[17,"VM_MEMORY_STACK","","",N,N],[17,"VM_MEMORY_GUARD","","",N,N],[17,"VM_MEMORY_SHARED_PMAP","","",N,N],[17,"VM_MEMORY_DYLIB","","",N,N],[17,"VM_MEMORY_OBJC_DISPATCHERS","","",N,N],[17,"VM_MEMORY_UNSHARED_PMAP","","",N,N],[17,"VM_MEMORY_APPKIT","","",N,N],[17,"VM_MEMORY_FOUNDATION","","",N,N],[17,"VM_MEMORY_COREGRAPHICS","","",N,N],[17,"VM_MEMORY_CORESERVICES","","",N,N],[17,"VM_MEMORY_CARBON","","",N,N],[17,"VM_MEMORY_JAVA","","",N,N],[17,"VM_MEMORY_COREDATA","","",N,N],[17,"VM_MEMORY_COREDATA_OBJECTIDS","","",N,N],[17,"VM_MEMORY_ATS","","",N,N],[17,"VM_MEMORY_LAYERKIT","","",N,N],[17,"VM_MEMORY_CGIMAGE","","",N,N],[17,"VM_MEMORY_TCMALLOC","","",N,N],[17,"VM_MEMORY_COREGRAPHICS_DATA","","",N,N],[17,"VM_MEMORY_COREGRAPHICS_SHARED","","",N,N],[17,"VM_MEMORY_COREGRAPHICS_FRAMEBUFFERS","","",N,N],[17,"VM_MEMORY_COREGRAPHICS_BACKINGSTORES","","",N,N],[17,"VM_MEMORY_COREGRAPHICS_XALLOC","","",N,N],[17,"VM_MEMORY_COREGRAPHICS_MISC","","",N,N],[17,"VM_MEMORY_DYLD","","",N,N],[17,"VM_MEMORY_DYLD_MALLOC","","",N,N],[17,"VM_MEMORY_SQLITE","","",N,N],[17,"VM_MEMORY_JAVASCRIPT_CORE","","",N,N],[17,"VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR","","",N,N],[17,"VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE","","",N,N],[17,"VM_MEMORY_GLSL","","",N,N],[17,"VM_MEMORY_OPENCL","","",N,N],[17,"VM_MEMORY_COREIMAGE","","",N,N],[17,"VM_MEMORY_WEBCORE_PURGEABLE_BUFFERS","","",N,N],[17,"VM_MEMORY_IMAGEIO","","",N,N],[17,"VM_MEMORY_COREPROFILE","","",N,N],[17,"VM_MEMORY_ASSETSD","","",N,N],[17,"VM_MEMORY_OS_ALLOC_ONCE","","",N,N],[17,"VM_MEMORY_LIBDISPATCH","","",N,N],[17,"VM_MEMORY_ACCELERATE","","",N,N],[17,"VM_MEMORY_COREUI","","",N,N],[17,"VM_MEMORY_COREUIFILE","","",N,N],[17,"VM_MEMORY_GENEALOGY","","",N,N],[17,"VM_MEMORY_RAWCAMERA","","",N,N],[17,"VM_MEMORY_CORPSEINFO","","",N,N],[17,"VM_MEMORY_ASL","","",N,N],[17,"VM_MEMORY_SWIFT_RUNTIME","","",N,N],[17,"VM_MEMORY_SWIFT_METADATA","","",N,N],[17,"VM_MEMORY_DHMM","","",N,N],[17,"VM_MEMORY_SCENEKIT","","",N,N],[17,"VM_MEMORY_SKYWALK","","",N,N],[17,"VM_MEMORY_APPLICATION_SPECIFIC_1","","",N,N],[17,"VM_MEMORY_APPLICATION_SPECIFIC_16","","",N,N],[17,"MAP_FAILED","","",N,N],[17,"MCL_CURRENT","","",N,N],[17,"MCL_FUTURE","","",N,N],[17,"MS_ASYNC","","",N,N],[17,"MS_INVALIDATE","","",N,N],[17,"MS_SYNC","","",N,N],[17,"MS_KILLPAGES","","",N,N],[17,"MS_DEACTIVATE","","",N,N],[17,"EPERM","","",N,N],[17,"ENOENT","","",N,N],[17,"ESRCH","","",N,N],[17,"EINTR","","",N,N],[17,"EIO","","",N,N],[17,"ENXIO","","",N,N],[17,"E2BIG","","",N,N],[17,"ENOEXEC","","",N,N],[17,"EBADF","","",N,N],[17,"ECHILD","","",N,N],[17,"EDEADLK","","",N,N],[17,"ENOMEM","","",N,N],[17,"EACCES","","",N,N],[17,"EFAULT","","",N,N],[17,"ENOTBLK","","",N,N],[17,"EBUSY","","",N,N],[17,"EEXIST","","",N,N],[17,"EXDEV","","",N,N],[17,"ENODEV","","",N,N],[17,"ENOTDIR","","",N,N],[17,"EISDIR","","",N,N],[17,"EINVAL","","",N,N],[17,"ENFILE","","",N,N],[17,"EMFILE","","",N,N],[17,"ENOTTY","","",N,N],[17,"ETXTBSY","","",N,N],[17,"EFBIG","","",N,N],[17,"ENOSPC","","",N,N],[17,"ESPIPE","","",N,N],[17,"EROFS","","",N,N],[17,"EMLINK","","",N,N],[17,"EPIPE","","",N,N],[17,"EDOM","","",N,N],[17,"ERANGE","","",N,N],[17,"EAGAIN","","",N,N],[17,"EWOULDBLOCK","","",N,N],[17,"EINPROGRESS","","",N,N],[17,"EALREADY","","",N,N],[17,"ENOTSOCK","","",N,N],[17,"EDESTADDRREQ","","",N,N],[17,"EMSGSIZE","","",N,N],[17,"EPROTOTYPE","","",N,N],[17,"ENOPROTOOPT","","",N,N],[17,"EPROTONOSUPPORT","","",N,N],[17,"ESOCKTNOSUPPORT","","",N,N],[17,"ENOTSUP","","",N,N],[17,"EPFNOSUPPORT","","",N,N],[17,"EAFNOSUPPORT","","",N,N],[17,"EADDRINUSE","","",N,N],[17,"EADDRNOTAVAIL","","",N,N],[17,"ENETDOWN","","",N,N],[17,"ENETUNREACH","","",N,N],[17,"ENETRESET","","",N,N],[17,"ECONNABORTED","","",N,N],[17,"ECONNRESET","","",N,N],[17,"ENOBUFS","","",N,N],[17,"EISCONN","","",N,N],[17,"ENOTCONN","","",N,N],[17,"ESHUTDOWN","","",N,N],[17,"ETOOMANYREFS","","",N,N],[17,"ETIMEDOUT","","",N,N],[17,"ECONNREFUSED","","",N,N],[17,"ELOOP","","",N,N],[17,"ENAMETOOLONG","","",N,N],[17,"EHOSTDOWN","","",N,N],[17,"EHOSTUNREACH","","",N,N],[17,"ENOTEMPTY","","",N,N],[17,"EPROCLIM","","",N,N],[17,"EUSERS","","",N,N],[17,"EDQUOT","","",N,N],[17,"ESTALE","","",N,N],[17,"EREMOTE","","",N,N],[17,"EBADRPC","","",N,N],[17,"ERPCMISMATCH","","",N,N],[17,"EPROGUNAVAIL","","",N,N],[17,"EPROGMISMATCH","","",N,N],[17,"EPROCUNAVAIL","","",N,N],[17,"ENOLCK","","",N,N],[17,"ENOSYS","","",N,N],[17,"EFTYPE","","",N,N],[17,"EAUTH","","",N,N],[17,"ENEEDAUTH","","",N,N],[17,"EPWROFF","","",N,N],[17,"EDEVERR","","",N,N],[17,"EOVERFLOW","","",N,N],[17,"EBADEXEC","","",N,N],[17,"EBADARCH","","",N,N],[17,"ESHLIBVERS","","",N,N],[17,"EBADMACHO","","",N,N],[17,"ECANCELED","","",N,N],[17,"EIDRM","","",N,N],[17,"ENOMSG","","",N,N],[17,"EILSEQ","","",N,N],[17,"ENOATTR","","",N,N],[17,"EBADMSG","","",N,N],[17,"EMULTIHOP","","",N,N],[17,"ENODATA","","",N,N],[17,"ENOLINK","","",N,N],[17,"ENOSR","","",N,N],[17,"ENOSTR","","",N,N],[17,"EPROTO","","",N,N],[17,"ETIME","","",N,N],[17,"EOPNOTSUPP","","",N,N],[17,"ENOPOLICY","","",N,N],[17,"ENOTRECOVERABLE","","",N,N],[17,"EOWNERDEAD","","",N,N],[17,"EQFULL","","",N,N],[17,"ELAST","","",N,N],[17,"EAI_AGAIN","","",N,N],[17,"EAI_BADFLAGS","","",N,N],[17,"EAI_FAIL","","",N,N],[17,"EAI_FAMILY","","",N,N],[17,"EAI_MEMORY","","",N,N],[17,"EAI_NODATA","","",N,N],[17,"EAI_NONAME","","",N,N],[17,"EAI_SERVICE","","",N,N],[17,"EAI_SOCKTYPE","","",N,N],[17,"EAI_SYSTEM","","",N,N],[17,"EAI_OVERFLOW","","",N,N],[17,"F_DUPFD","","",N,N],[17,"F_DUPFD_CLOEXEC","","",N,N],[17,"F_GETFD","","",N,N],[17,"F_SETFD","","",N,N],[17,"F_GETFL","","",N,N],[17,"F_SETFL","","",N,N],[17,"F_PREALLOCATE","","",N,N],[17,"F_RDADVISE","","",N,N],[17,"F_RDAHEAD","","",N,N],[17,"F_NOCACHE","","",N,N],[17,"F_GETPATH","","",N,N],[17,"F_FULLFSYNC","","",N,N],[17,"F_FREEZE_FS","","",N,N],[17,"F_THAW_FS","","",N,N],[17,"F_GLOBAL_NOCACHE","","",N,N],[17,"F_NODIRECT","","",N,N],[17,"F_ALLOCATECONTIG","","",N,N],[17,"F_ALLOCATEALL","","",N,N],[17,"F_PEOFPOSMODE","","",N,N],[17,"F_VOLPOSMODE","","",N,N],[17,"AT_FDCWD","","",N,N],[17,"AT_EACCESS","","",N,N],[17,"AT_SYMLINK_NOFOLLOW","","",N,N],[17,"AT_SYMLINK_FOLLOW","","",N,N],[17,"AT_REMOVEDIR","","",N,N],[17,"TIOCMODG","","",N,N],[17,"TIOCMODS","","",N,N],[17,"TIOCM_LE","","",N,N],[17,"TIOCM_DTR","","",N,N],[17,"TIOCM_RTS","","",N,N],[17,"TIOCM_ST","","",N,N],[17,"TIOCM_SR","","",N,N],[17,"TIOCM_CTS","","",N,N],[17,"TIOCM_CAR","","",N,N],[17,"TIOCM_CD","","",N,N],[17,"TIOCM_RNG","","",N,N],[17,"TIOCM_RI","","",N,N],[17,"TIOCM_DSR","","",N,N],[17,"TIOCEXCL","","",N,N],[17,"TIOCNXCL","","",N,N],[17,"TIOCFLUSH","","",N,N],[17,"TIOCGETD","","",N,N],[17,"TIOCSETD","","",N,N],[17,"TIOCIXON","","",N,N],[17,"TIOCIXOFF","","",N,N],[17,"TIOCSBRK","","",N,N],[17,"TIOCCBRK","","",N,N],[17,"TIOCSDTR","","",N,N],[17,"TIOCCDTR","","",N,N],[17,"TIOCGPGRP","","",N,N],[17,"TIOCSPGRP","","",N,N],[17,"TIOCOUTQ","","",N,N],[17,"TIOCSTI","","",N,N],[17,"TIOCNOTTY","","",N,N],[17,"TIOCPKT","","",N,N],[17,"TIOCPKT_DATA","","",N,N],[17,"TIOCPKT_FLUSHREAD","","",N,N],[17,"TIOCPKT_FLUSHWRITE","","",N,N],[17,"TIOCPKT_STOP","","",N,N],[17,"TIOCPKT_START","","",N,N],[17,"TIOCPKT_NOSTOP","","",N,N],[17,"TIOCPKT_DOSTOP","","",N,N],[17,"TIOCPKT_IOCTL","","",N,N],[17,"TIOCSTOP","","",N,N],[17,"TIOCSTART","","",N,N],[17,"TIOCMSET","","",N,N],[17,"TIOCMBIS","","",N,N],[17,"TIOCMBIC","","",N,N],[17,"TIOCMGET","","",N,N],[17,"TIOCREMOTE","","",N,N],[17,"TIOCGWINSZ","","",N,N],[17,"TIOCSWINSZ","","",N,N],[17,"TIOCUCNTL","","",N,N],[17,"TIOCSTAT","","",N,N],[17,"TIOCSCONS","","",N,N],[17,"TIOCCONS","","",N,N],[17,"TIOCSCTTY","","",N,N],[17,"TIOCEXT","","",N,N],[17,"TIOCSIG","","",N,N],[17,"TIOCDRAIN","","",N,N],[17,"TIOCMSDTRWAIT","","",N,N],[17,"TIOCMGDTRWAIT","","",N,N],[17,"TIOCSDRAINWAIT","","",N,N],[17,"TIOCGDRAINWAIT","","",N,N],[17,"TIOCDSIMICROCODE","","",N,N],[17,"TIOCPTYGRANT","","",N,N],[17,"TIOCPTYGNAME","","",N,N],[17,"TIOCPTYUNLK","","",N,N],[17,"FIONCLEX","","",N,N],[17,"FIONREAD","","",N,N],[17,"FIOASYNC","","",N,N],[17,"FIOSETOWN","","",N,N],[17,"FIOGETOWN","","",N,N],[17,"FIODTYPE","","",N,N],[17,"B0","","",N,N],[17,"B50","","",N,N],[17,"B75","","",N,N],[17,"B110","","",N,N],[17,"B134","","",N,N],[17,"B150","","",N,N],[17,"B200","","",N,N],[17,"B300","","",N,N],[17,"B600","","",N,N],[17,"B1200","","",N,N],[17,"B1800","","",N,N],[17,"B2400","","",N,N],[17,"B4800","","",N,N],[17,"B9600","","",N,N],[17,"B19200","","",N,N],[17,"B38400","","",N,N],[17,"B7200","","",N,N],[17,"B14400","","",N,N],[17,"B28800","","",N,N],[17,"B57600","","",N,N],[17,"B76800","","",N,N],[17,"B115200","","",N,N],[17,"B230400","","",N,N],[17,"EXTA","","",N,N],[17,"EXTB","","",N,N],[17,"SIGTRAP","","",N,N],[17,"GLOB_APPEND","","",N,N],[17,"GLOB_DOOFFS","","",N,N],[17,"GLOB_ERR","","",N,N],[17,"GLOB_MARK","","",N,N],[17,"GLOB_NOCHECK","","",N,N],[17,"GLOB_NOSORT","","",N,N],[17,"GLOB_NOESCAPE","","",N,N],[17,"GLOB_NOSPACE","","",N,N],[17,"GLOB_ABORTED","","",N,N],[17,"GLOB_NOMATCH","","",N,N],[17,"POSIX_MADV_NORMAL","","",N,N],[17,"POSIX_MADV_RANDOM","","",N,N],[17,"POSIX_MADV_SEQUENTIAL","","",N,N],[17,"POSIX_MADV_WILLNEED","","",N,N],[17,"POSIX_MADV_DONTNEED","","",N,N],[17,"_SC_IOV_MAX","","",N,N],[17,"_SC_GETGR_R_SIZE_MAX","","",N,N],[17,"_SC_GETPW_R_SIZE_MAX","","",N,N],[17,"_SC_LOGIN_NAME_MAX","","",N,N],[17,"_SC_MQ_PRIO_MAX","","",N,N],[17,"_SC_THREAD_ATTR_STACKADDR","","",N,N],[17,"_SC_THREAD_ATTR_STACKSIZE","","",N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",N,N],[17,"_SC_THREAD_KEYS_MAX","","",N,N],[17,"_SC_THREAD_PRIO_INHERIT","","",N,N],[17,"_SC_THREAD_PRIO_PROTECT","","",N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_THREAD_PROCESS_SHARED","","",N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",N,N],[17,"_SC_THREAD_STACK_MIN","","",N,N],[17,"_SC_THREAD_THREADS_MAX","","",N,N],[17,"_SC_THREADS","","",N,N],[17,"_SC_TTY_NAME_MAX","","",N,N],[17,"_SC_ATEXIT_MAX","","",N,N],[17,"_SC_XOPEN_CRYPT","","",N,N],[17,"_SC_XOPEN_ENH_I18N","","",N,N],[17,"_SC_XOPEN_LEGACY","","",N,N],[17,"_SC_XOPEN_REALTIME","","",N,N],[17,"_SC_XOPEN_REALTIME_THREADS","","",N,N],[17,"_SC_XOPEN_SHM","","",N,N],[17,"_SC_XOPEN_UNIX","","",N,N],[17,"_SC_XOPEN_VERSION","","",N,N],[17,"_SC_XOPEN_XCU_VERSION","","",N,N],[17,"_SC_PHYS_PAGES","","",N,N],[17,"PTHREAD_PROCESS_PRIVATE","","",N,N],[17,"PTHREAD_PROCESS_SHARED","","",N,N],[17,"PTHREAD_CREATE_JOINABLE","","",N,N],[17,"PTHREAD_CREATE_DETACHED","","",N,N],[17,"PTHREAD_STACK_MIN","","",N,N],[17,"RLIMIT_CPU","","",N,N],[17,"RLIMIT_FSIZE","","",N,N],[17,"RLIMIT_DATA","","",N,N],[17,"RLIMIT_STACK","","",N,N],[17,"RLIMIT_CORE","","",N,N],[17,"RLIMIT_AS","","",N,N],[17,"RLIMIT_RSS","","",N,N],[17,"RLIMIT_MEMLOCK","","",N,N],[17,"RLIMIT_NPROC","","",N,N],[17,"RLIMIT_NOFILE","","",N,N],[17,"RLIM_NLIMITS","","",N,N],[17,"_RLIMIT_POSIX_FLAG","","",N,N],[17,"RLIM_INFINITY","","",N,N],[17,"RUSAGE_SELF","","",N,N],[17,"RUSAGE_CHILDREN","","",N,N],[17,"MADV_NORMAL","","",N,N],[17,"MADV_RANDOM","","",N,N],[17,"MADV_SEQUENTIAL","","",N,N],[17,"MADV_WILLNEED","","",N,N],[17,"MADV_DONTNEED","","",N,N],[17,"MADV_FREE","","",N,N],[17,"MADV_ZERO_WIRED_PAGES","","",N,N],[17,"MADV_FREE_REUSABLE","","",N,N],[17,"MADV_FREE_REUSE","","",N,N],[17,"MADV_CAN_REUSE","","",N,N],[17,"MINCORE_INCORE","","",N,N],[17,"MINCORE_REFERENCED","","",N,N],[17,"MINCORE_MODIFIED","","",N,N],[17,"MINCORE_REFERENCED_OTHER","","",N,N],[17,"MINCORE_MODIFIED_OTHER","","",N,N],[17,"IPPROTO_HOPOPTS","","IP6 hop-by-hop options",N,N],[17,"IPPROTO_IGMP","","group mgmt protocol",N,N],[17,"IPPROTO_GGP","","gateway2 (deprecated)",N,N],[17,"IPPROTO_IPIP","","for compatibility",N,N],[17,"IPPROTO_ST","","Stream protocol II.",N,N],[17,"IPPROTO_EGP","","exterior gateway protocol",N,N],[17,"IPPROTO_PIGP","","private interior gateway",N,N],[17,"IPPROTO_RCCMON","","BBN RCC Monitoring",N,N],[17,"IPPROTO_NVPII","","network voice protocol",N,N],[17,"IPPROTO_PUP","","pup",N,N],[17,"IPPROTO_ARGUS","","Argus",N,N],[17,"IPPROTO_EMCON","","EMCON",N,N],[17,"IPPROTO_XNET","","Cross Net Debugger",N,N],[17,"IPPROTO_CHAOS","","Chaos",N,N],[17,"IPPROTO_MUX","","Multiplexing",N,N],[17,"IPPROTO_MEAS","","DCN Measurement Subsystems",N,N],[17,"IPPROTO_HMP","","Host Monitoring",N,N],[17,"IPPROTO_PRM","","Packet Radio Measurement",N,N],[17,"IPPROTO_IDP","","xns idp",N,N],[17,"IPPROTO_TRUNK1","","Trunk-1",N,N],[17,"IPPROTO_TRUNK2","","Trunk-2",N,N],[17,"IPPROTO_LEAF1","","Leaf-1",N,N],[17,"IPPROTO_LEAF2","","Leaf-2",N,N],[17,"IPPROTO_RDP","","Reliable Data",N,N],[17,"IPPROTO_IRTP","","Reliable Transaction",N,N],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",N,N],[17,"IPPROTO_BLT","","Bulk Data Transfer",N,N],[17,"IPPROTO_NSP","","Network Services",N,N],[17,"IPPROTO_INP","","Merit Internodal",N,N],[17,"IPPROTO_SEP","","Sequential Exchange",N,N],[17,"IPPROTO_3PC","","Third Party Connect",N,N],[17,"IPPROTO_IDPR","","InterDomain Policy Routing",N,N],[17,"IPPROTO_XTP","","XTP",N,N],[17,"IPPROTO_DDP","","Datagram Delivery",N,N],[17,"IPPROTO_CMTP","","Control Message Transport",N,N],[17,"IPPROTO_TPXX","","TP++ Transport",N,N],[17,"IPPROTO_IL","","IL transport protocol",N,N],[17,"IPPROTO_SDRP","","Source Demand Routing",N,N],[17,"IPPROTO_ROUTING","","IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",N,N],[17,"IPPROTO_IDRP","","InterDomain Routing",N,N],[17,"IPPROTO_RSVP","","resource reservation",N,N],[17,"IPPROTO_GRE","","General Routing Encap.",N,N],[17,"IPPROTO_MHRP","","Mobile Host Routing",N,N],[17,"IPPROTO_BHA","","BHA",N,N],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH","","IP6 Auth Header",N,N],[17,"IPPROTO_INLSP","","Integ. Net Layer Security",N,N],[17,"IPPROTO_SWIPE","","IP with encryption",N,N],[17,"IPPROTO_NHRP","","Next Hop Resolution",N,N],[17,"IPPROTO_NONE","","IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS","","IP6 destination option",N,N],[17,"IPPROTO_AHIP","","any host internal protocol",N,N],[17,"IPPROTO_CFTP","","CFTP",N,N],[17,"IPPROTO_HELLO","","\"hello\" routing protocol",N,N],[17,"IPPROTO_SATEXPAK","","SATNET/Backroom EXPAK",N,N],[17,"IPPROTO_KRYPTOLAN","","Kryptolan",N,N],[17,"IPPROTO_RVD","","Remote Virtual Disk",N,N],[17,"IPPROTO_IPPC","","Pluribus Packet Core",N,N],[17,"IPPROTO_ADFS","","Any distributed FS",N,N],[17,"IPPROTO_SATMON","","Satnet Monitoring",N,N],[17,"IPPROTO_VISA","","VISA Protocol",N,N],[17,"IPPROTO_IPCV","","Packet Core Utility",N,N],[17,"IPPROTO_CPNX","","Comp. Prot. Net. Executive",N,N],[17,"IPPROTO_CPHB","","Comp. Prot. HeartBeat",N,N],[17,"IPPROTO_WSN","","Wang Span Network",N,N],[17,"IPPROTO_PVP","","Packet Video Protocol",N,N],[17,"IPPROTO_BRSATMON","","BackRoom SATNET Monitoring",N,N],[17,"IPPROTO_ND","","Sun net disk proto (temp.)",N,N],[17,"IPPROTO_WBMON","","WIDEBAND Monitoring",N,N],[17,"IPPROTO_WBEXPAK","","WIDEBAND EXPAK",N,N],[17,"IPPROTO_EON","","ISO cnlp",N,N],[17,"IPPROTO_VMTP","","VMTP",N,N],[17,"IPPROTO_SVMTP","","Secure VMTP",N,N],[17,"IPPROTO_VINES","","Banyon VINES",N,N],[17,"IPPROTO_TTP","","TTP",N,N],[17,"IPPROTO_IGP","","NSFNET-IGP",N,N],[17,"IPPROTO_DGP","","dissimilar gateway prot.",N,N],[17,"IPPROTO_TCF","","TCF",N,N],[17,"IPPROTO_IGRP","","Cisco/GXS IGRP",N,N],[17,"IPPROTO_OSPFIGP","","OSPFIGP",N,N],[17,"IPPROTO_SRPC","","Strite RPC protocol",N,N],[17,"IPPROTO_LARP","","Locus Address Resoloution",N,N],[17,"IPPROTO_MTP","","Multicast Transport",N,N],[17,"IPPROTO_AX25","","AX.25 Frames",N,N],[17,"IPPROTO_IPEIP","","IP encapsulated in IP",N,N],[17,"IPPROTO_MICP","","Mobile Int.ing control",N,N],[17,"IPPROTO_SCCSP","","Semaphore Comm. security",N,N],[17,"IPPROTO_ETHERIP","","Ethernet IP encapsulation",N,N],[17,"IPPROTO_ENCAP","","encapsulation header",N,N],[17,"IPPROTO_APES","","any private encr. scheme",N,N],[17,"IPPROTO_GMTP","","GMTP",N,N],[17,"IPPROTO_PIM","","Protocol Independent Mcast",N,N],[17,"IPPROTO_IPCOMP","","payload compression (IPComp)",N,N],[17,"IPPROTO_PGM","","PGM",N,N],[17,"IPPROTO_SCTP","","SCTP",N,N],[17,"IPPROTO_DIVERT","","divert pseudo-protocol",N,N],[17,"IPPROTO_RAW","","raw IP packet",N,N],[17,"IPPROTO_MAX","","",N,N],[17,"IPPROTO_DONE","","last return value of *_input(), meaning \"all job for this pkt is done\".",N,N],[17,"AF_UNSPEC","","",N,N],[17,"AF_LOCAL","","",N,N],[17,"AF_UNIX","","",N,N],[17,"AF_INET","","",N,N],[17,"AF_IMPLINK","","",N,N],[17,"AF_PUP","","",N,N],[17,"AF_CHAOS","","",N,N],[17,"AF_NS","","",N,N],[17,"AF_ISO","","",N,N],[17,"AF_OSI","","",N,N],[17,"AF_ECMA","","",N,N],[17,"AF_DATAKIT","","",N,N],[17,"AF_CCITT","","",N,N],[17,"AF_SNA","","",N,N],[17,"AF_DECnet","","",N,N],[17,"AF_DLI","","",N,N],[17,"AF_LAT","","",N,N],[17,"AF_HYLINK","","",N,N],[17,"AF_APPLETALK","","",N,N],[17,"AF_ROUTE","","",N,N],[17,"AF_LINK","","",N,N],[17,"pseudo_AF_XTP","","",N,N],[17,"AF_COIP","","",N,N],[17,"AF_CNT","","",N,N],[17,"pseudo_AF_RTIP","","",N,N],[17,"AF_IPX","","",N,N],[17,"AF_SIP","","",N,N],[17,"pseudo_AF_PIP","","",N,N],[17,"AF_ISDN","","",N,N],[17,"AF_E164","","",N,N],[17,"pseudo_AF_KEY","","",N,N],[17,"AF_INET6","","",N,N],[17,"AF_NATM","","",N,N],[17,"AF_SYSTEM","","",N,N],[17,"AF_NETBIOS","","",N,N],[17,"AF_PPP","","",N,N],[17,"pseudo_AF_HDRCMPLT","","",N,N],[17,"AF_SYS_CONTROL","","",N,N],[17,"SYSPROTO_EVENT","","",N,N],[17,"SYSPROTO_CONTROL","","",N,N],[17,"PF_UNSPEC","","",N,N],[17,"PF_LOCAL","","",N,N],[17,"PF_UNIX","","",N,N],[17,"PF_INET","","",N,N],[17,"PF_IMPLINK","","",N,N],[17,"PF_PUP","","",N,N],[17,"PF_CHAOS","","",N,N],[17,"PF_NS","","",N,N],[17,"PF_ISO","","",N,N],[17,"PF_OSI","","",N,N],[17,"PF_ECMA","","",N,N],[17,"PF_DATAKIT","","",N,N],[17,"PF_CCITT","","",N,N],[17,"PF_SNA","","",N,N],[17,"PF_DECnet","","",N,N],[17,"PF_DLI","","",N,N],[17,"PF_LAT","","",N,N],[17,"PF_HYLINK","","",N,N],[17,"PF_APPLETALK","","",N,N],[17,"PF_ROUTE","","",N,N],[17,"PF_LINK","","",N,N],[17,"PF_XTP","","",N,N],[17,"PF_COIP","","",N,N],[17,"PF_CNT","","",N,N],[17,"PF_SIP","","",N,N],[17,"PF_IPX","","",N,N],[17,"PF_RTIP","","",N,N],[17,"PF_PIP","","",N,N],[17,"PF_ISDN","","",N,N],[17,"PF_KEY","","",N,N],[17,"PF_INET6","","",N,N],[17,"PF_NATM","","",N,N],[17,"PF_SYSTEM","","",N,N],[17,"PF_NETBIOS","","",N,N],[17,"PF_PPP","","",N,N],[17,"NET_RT_DUMP","","",N,N],[17,"NET_RT_FLAGS","","",N,N],[17,"NET_RT_IFLIST","","",N,N],[17,"SOMAXCONN","","",N,N],[17,"SOCK_MAXADDRLEN","","",N,N],[17,"SOCK_STREAM","","",N,N],[17,"SOCK_DGRAM","","",N,N],[17,"SOCK_RAW","","",N,N],[17,"SOCK_RDM","","",N,N],[17,"SOCK_SEQPACKET","","",N,N],[17,"IP_TTL","","",N,N],[17,"IP_HDRINCL","","",N,N],[17,"IP_ADD_MEMBERSHIP","","",N,N],[17,"IP_DROP_MEMBERSHIP","","",N,N],[17,"IP_PKTINFO","","",N,N],[17,"IPV6_JOIN_GROUP","","",N,N],[17,"IPV6_LEAVE_GROUP","","",N,N],[17,"IPV6_PKTINFO","","",N,N],[17,"IPV6_RECVPKTINFO","","",N,N],[17,"TCP_NODELAY","","",N,N],[17,"TCP_KEEPALIVE","","",N,N],[17,"SOL_LOCAL","","",N,N],[17,"LOCAL_PEERCRED","","",N,N],[17,"LOCAL_PEERPID","","",N,N],[17,"LOCAL_PEEREPID","","",N,N],[17,"LOCAL_PEERUUID","","",N,N],[17,"LOCAL_PEEREUUID","","",N,N],[17,"SOL_SOCKET","","",N,N],[17,"SO_DEBUG","","",N,N],[17,"SO_ACCEPTCONN","","",N,N],[17,"SO_REUSEADDR","","",N,N],[17,"SO_KEEPALIVE","","",N,N],[17,"SO_DONTROUTE","","",N,N],[17,"SO_BROADCAST","","",N,N],[17,"SO_USELOOPBACK","","",N,N],[17,"SO_LINGER","","",N,N],[17,"SO_OOBINLINE","","",N,N],[17,"SO_REUSEPORT","","",N,N],[17,"SO_TIMESTAMP","","",N,N],[17,"SO_TIMESTAMP_MONOTONIC","","",N,N],[17,"SO_DONTTRUNC","","",N,N],[17,"SO_WANTMORE","","",N,N],[17,"SO_WANTOOBFLAG","","",N,N],[17,"SO_SNDBUF","","",N,N],[17,"SO_RCVBUF","","",N,N],[17,"SO_SNDLOWAT","","",N,N],[17,"SO_RCVLOWAT","","",N,N],[17,"SO_SNDTIMEO","","",N,N],[17,"SO_RCVTIMEO","","",N,N],[17,"SO_ERROR","","",N,N],[17,"SO_TYPE","","",N,N],[17,"SO_LABEL","","",N,N],[17,"SO_PEERLABEL","","",N,N],[17,"SO_NREAD","","",N,N],[17,"SO_NKE","","",N,N],[17,"SO_NOSIGPIPE","","",N,N],[17,"SO_NOADDRERR","","",N,N],[17,"SO_NWRITE","","",N,N],[17,"SO_REUSESHAREUID","","",N,N],[17,"SO_NOTIFYCONFLICT","","",N,N],[17,"SO_RANDOMPORT","","",N,N],[17,"SO_NP_EXTENSIONS","","",N,N],[17,"MSG_OOB","","",N,N],[17,"MSG_PEEK","","",N,N],[17,"MSG_DONTROUTE","","",N,N],[17,"MSG_EOR","","",N,N],[17,"MSG_TRUNC","","",N,N],[17,"MSG_CTRUNC","","",N,N],[17,"MSG_WAITALL","","",N,N],[17,"MSG_DONTWAIT","","",N,N],[17,"MSG_EOF","","",N,N],[17,"MSG_FLUSH","","",N,N],[17,"MSG_HOLD","","",N,N],[17,"MSG_SEND","","",N,N],[17,"MSG_HAVEMORE","","",N,N],[17,"MSG_RCVMORE","","",N,N],[17,"SCM_TIMESTAMP","","",N,N],[17,"SCM_CREDS","","",N,N],[17,"IFF_UP","","",N,N],[17,"IFF_BROADCAST","","",N,N],[17,"IFF_DEBUG","","",N,N],[17,"IFF_LOOPBACK","","",N,N],[17,"IFF_POINTOPOINT","","",N,N],[17,"IFF_NOTRAILERS","","",N,N],[17,"IFF_RUNNING","","",N,N],[17,"IFF_NOARP","","",N,N],[17,"IFF_PROMISC","","",N,N],[17,"IFF_ALLMULTI","","",N,N],[17,"IFF_OACTIVE","","",N,N],[17,"IFF_SIMPLEX","","",N,N],[17,"IFF_LINK0","","",N,N],[17,"IFF_LINK1","","",N,N],[17,"IFF_LINK2","","",N,N],[17,"IFF_ALTPHYS","","",N,N],[17,"IFF_MULTICAST","","",N,N],[17,"SHUT_RD","","",N,N],[17,"SHUT_WR","","",N,N],[17,"SHUT_RDWR","","",N,N],[17,"LOCK_SH","","",N,N],[17,"LOCK_EX","","",N,N],[17,"LOCK_NB","","",N,N],[17,"LOCK_UN","","",N,N],[17,"MAP_COPY","","",N,N],[17,"MAP_RENAME","","",N,N],[17,"MAP_NORESERVE","","",N,N],[17,"MAP_NOEXTEND","","",N,N],[17,"MAP_HASSEMAPHORE","","",N,N],[17,"MAP_NOCACHE","","",N,N],[17,"MAP_JIT","","",N,N],[17,"_SC_ARG_MAX","","",N,N],[17,"_SC_CHILD_MAX","","",N,N],[17,"_SC_CLK_TCK","","",N,N],[17,"_SC_NGROUPS_MAX","","",N,N],[17,"_SC_OPEN_MAX","","",N,N],[17,"_SC_JOB_CONTROL","","",N,N],[17,"_SC_SAVED_IDS","","",N,N],[17,"_SC_VERSION","","",N,N],[17,"_SC_BC_BASE_MAX","","",N,N],[17,"_SC_BC_DIM_MAX","","",N,N],[17,"_SC_BC_SCALE_MAX","","",N,N],[17,"_SC_BC_STRING_MAX","","",N,N],[17,"_SC_COLL_WEIGHTS_MAX","","",N,N],[17,"_SC_EXPR_NEST_MAX","","",N,N],[17,"_SC_LINE_MAX","","",N,N],[17,"_SC_RE_DUP_MAX","","",N,N],[17,"_SC_2_VERSION","","",N,N],[17,"_SC_2_C_BIND","","",N,N],[17,"_SC_2_C_DEV","","",N,N],[17,"_SC_2_CHAR_TERM","","",N,N],[17,"_SC_2_FORT_DEV","","",N,N],[17,"_SC_2_FORT_RUN","","",N,N],[17,"_SC_2_LOCALEDEF","","",N,N],[17,"_SC_2_SW_DEV","","",N,N],[17,"_SC_2_UPE","","",N,N],[17,"_SC_STREAM_MAX","","",N,N],[17,"_SC_TZNAME_MAX","","",N,N],[17,"_SC_ASYNCHRONOUS_IO","","",N,N],[17,"_SC_PAGESIZE","","",N,N],[17,"_SC_MEMLOCK","","",N,N],[17,"_SC_MEMLOCK_RANGE","","",N,N],[17,"_SC_MEMORY_PROTECTION","","",N,N],[17,"_SC_MESSAGE_PASSING","","",N,N],[17,"_SC_PRIORITIZED_IO","","",N,N],[17,"_SC_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_REALTIME_SIGNALS","","",N,N],[17,"_SC_SEMAPHORES","","",N,N],[17,"_SC_FSYNC","","",N,N],[17,"_SC_SHARED_MEMORY_OBJECTS","","",N,N],[17,"_SC_SYNCHRONIZED_IO","","",N,N],[17,"_SC_TIMERS","","",N,N],[17,"_SC_AIO_LISTIO_MAX","","",N,N],[17,"_SC_AIO_MAX","","",N,N],[17,"_SC_AIO_PRIO_DELTA_MAX","","",N,N],[17,"_SC_DELAYTIMER_MAX","","",N,N],[17,"_SC_MQ_OPEN_MAX","","",N,N],[17,"_SC_MAPPED_FILES","","",N,N],[17,"_SC_RTSIG_MAX","","",N,N],[17,"_SC_SEM_NSEMS_MAX","","",N,N],[17,"_SC_SEM_VALUE_MAX","","",N,N],[17,"_SC_SIGQUEUE_MAX","","",N,N],[17,"_SC_TIMER_MAX","","",N,N],[17,"_SC_NPROCESSORS_CONF","","",N,N],[17,"_SC_NPROCESSORS_ONLN","","",N,N],[17,"_SC_2_PBS","","",N,N],[17,"_SC_2_PBS_ACCOUNTING","","",N,N],[17,"_SC_2_PBS_CHECKPOINT","","",N,N],[17,"_SC_2_PBS_LOCATE","","",N,N],[17,"_SC_2_PBS_MESSAGE","","",N,N],[17,"_SC_2_PBS_TRACK","","",N,N],[17,"_SC_ADVISORY_INFO","","",N,N],[17,"_SC_BARRIERS","","",N,N],[17,"_SC_CLOCK_SELECTION","","",N,N],[17,"_SC_CPUTIME","","",N,N],[17,"_SC_FILE_LOCKING","","",N,N],[17,"_SC_HOST_NAME_MAX","","",N,N],[17,"_SC_MONOTONIC_CLOCK","","",N,N],[17,"_SC_READER_WRITER_LOCKS","","",N,N],[17,"_SC_REGEXP","","",N,N],[17,"_SC_SHELL","","",N,N],[17,"_SC_SPAWN","","",N,N],[17,"_SC_SPIN_LOCKS","","",N,N],[17,"_SC_SPORADIC_SERVER","","",N,N],[17,"_SC_THREAD_CPUTIME","","",N,N],[17,"_SC_THREAD_SPORADIC_SERVER","","",N,N],[17,"_SC_TIMEOUTS","","",N,N],[17,"_SC_TRACE","","",N,N],[17,"_SC_TRACE_EVENT_FILTER","","",N,N],[17,"_SC_TRACE_INHERIT","","",N,N],[17,"_SC_TRACE_LOG","","",N,N],[17,"_SC_TYPED_MEMORY_OBJECTS","","",N,N],[17,"_SC_V6_ILP32_OFF32","","",N,N],[17,"_SC_V6_ILP32_OFFBIG","","",N,N],[17,"_SC_V6_LP64_OFF64","","",N,N],[17,"_SC_V6_LPBIG_OFFBIG","","",N,N],[17,"_SC_IPV6","","",N,N],[17,"_SC_RAW_SOCKETS","","",N,N],[17,"_SC_SYMLOOP_MAX","","",N,N],[17,"_SC_PAGE_SIZE","","",N,N],[17,"_SC_XOPEN_STREAMS","","",N,N],[17,"_SC_XBS5_ILP32_OFF32","","",N,N],[17,"_SC_XBS5_ILP32_OFFBIG","","",N,N],[17,"_SC_XBS5_LP64_OFF64","","",N,N],[17,"_SC_XBS5_LPBIG_OFFBIG","","",N,N],[17,"_SC_SS_REPL_MAX","","",N,N],[17,"_SC_TRACE_EVENT_NAME_MAX","","",N,N],[17,"_SC_TRACE_NAME_MAX","","",N,N],[17,"_SC_TRACE_SYS_MAX","","",N,N],[17,"_SC_TRACE_USER_EVENT_MAX","","",N,N],[17,"_SC_PASS_MAX","","",N,N],[17,"PTHREAD_MUTEX_NORMAL","","",N,N],[17,"PTHREAD_MUTEX_ERRORCHECK","","",N,N],[17,"PTHREAD_MUTEX_RECURSIVE","","",N,N],[17,"PTHREAD_MUTEX_DEFAULT","","",N,N],[17,"_PTHREAD_MUTEX_SIG_init","","",N,N],[17,"_PTHREAD_COND_SIG_init","","",N,N],[17,"_PTHREAD_RWLOCK_SIG_init","","",N,N],[17,"PTHREAD_MUTEX_INITIALIZER","","",N,N],[17,"PTHREAD_COND_INITIALIZER","","",N,N],[17,"PTHREAD_RWLOCK_INITIALIZER","","",N,N],[17,"SIGSTKSZ","","",N,N],[17,"FD_SETSIZE","","",N,N],[17,"ST_NOSUID","","",N,N],[17,"EVFILT_READ","","",N,N],[17,"EVFILT_WRITE","","",N,N],[17,"EVFILT_AIO","","",N,N],[17,"EVFILT_VNODE","","",N,N],[17,"EVFILT_PROC","","",N,N],[17,"EVFILT_SIGNAL","","",N,N],[17,"EVFILT_TIMER","","",N,N],[17,"EVFILT_MACHPORT","","",N,N],[17,"EVFILT_FS","","",N,N],[17,"EVFILT_USER","","",N,N],[17,"EVFILT_VM","","",N,N],[17,"EV_ADD","","",N,N],[17,"EV_DELETE","","",N,N],[17,"EV_ENABLE","","",N,N],[17,"EV_DISABLE","","",N,N],[17,"EV_ONESHOT","","",N,N],[17,"EV_CLEAR","","",N,N],[17,"EV_RECEIPT","","",N,N],[17,"EV_DISPATCH","","",N,N],[17,"EV_FLAG0","","",N,N],[17,"EV_POLL","","",N,N],[17,"EV_FLAG1","","",N,N],[17,"EV_OOBAND","","",N,N],[17,"EV_ERROR","","",N,N],[17,"EV_EOF","","",N,N],[17,"EV_SYSFLAGS","","",N,N],[17,"NOTE_TRIGGER","","",N,N],[17,"NOTE_FFNOP","","",N,N],[17,"NOTE_FFAND","","",N,N],[17,"NOTE_FFOR","","",N,N],[17,"NOTE_FFCOPY","","",N,N],[17,"NOTE_FFCTRLMASK","","",N,N],[17,"NOTE_FFLAGSMASK","","",N,N],[17,"NOTE_LOWAT","","",N,N],[17,"NOTE_DELETE","","",N,N],[17,"NOTE_WRITE","","",N,N],[17,"NOTE_EXTEND","","",N,N],[17,"NOTE_ATTRIB","","",N,N],[17,"NOTE_LINK","","",N,N],[17,"NOTE_RENAME","","",N,N],[17,"NOTE_REVOKE","","",N,N],[17,"NOTE_NONE","","",N,N],[17,"NOTE_EXIT","","",N,N],[17,"NOTE_FORK","","",N,N],[17,"NOTE_EXEC","","",N,N],[17,"NOTE_REAP","","",N,N],[17,"NOTE_SIGNAL","","",N,N],[17,"NOTE_EXITSTATUS","","",N,N],[17,"NOTE_EXIT_DETAIL","","",N,N],[17,"NOTE_PDATAMASK","","",N,N],[17,"NOTE_PCTRLMASK","","",N,N],[17,"NOTE_EXIT_REPARENTED","","",N,N],[17,"NOTE_EXIT_DETAIL_MASK","","",N,N],[17,"NOTE_EXIT_DECRYPTFAIL","","",N,N],[17,"NOTE_EXIT_MEMORY","","",N,N],[17,"NOTE_EXIT_CSERROR","","",N,N],[17,"NOTE_VM_PRESSURE","","",N,N],[17,"NOTE_VM_PRESSURE_TERMINATE","","",N,N],[17,"NOTE_VM_PRESSURE_SUDDEN_TERMINATE","","",N,N],[17,"NOTE_VM_ERROR","","",N,N],[17,"NOTE_SECONDS","","",N,N],[17,"NOTE_USECONDS","","",N,N],[17,"NOTE_NSECONDS","","",N,N],[17,"NOTE_ABSOLUTE","","",N,N],[17,"NOTE_LEEWAY","","",N,N],[17,"NOTE_CRITICAL","","",N,N],[17,"NOTE_BACKGROUND","","",N,N],[17,"NOTE_TRACK","","",N,N],[17,"NOTE_TRACKERR","","",N,N],[17,"NOTE_CHILD","","",N,N],[17,"OCRNL","","",N,N],[17,"ONOCR","","",N,N],[17,"ONLRET","","",N,N],[17,"OFILL","","",N,N],[17,"NLDLY","","",N,N],[17,"TABDLY","","",N,N],[17,"CRDLY","","",N,N],[17,"FFDLY","","",N,N],[17,"BSDLY","","",N,N],[17,"VTDLY","","",N,N],[17,"OFDEL","","",N,N],[17,"NL0","","",N,N],[17,"NL1","","",N,N],[17,"TAB0","","",N,N],[17,"TAB1","","",N,N],[17,"TAB2","","",N,N],[17,"CR0","","",N,N],[17,"CR1","","",N,N],[17,"CR2","","",N,N],[17,"CR3","","",N,N],[17,"FF0","","",N,N],[17,"FF1","","",N,N],[17,"BS0","","",N,N],[17,"BS1","","",N,N],[17,"TAB3","","",N,N],[17,"VT0","","",N,N],[17,"VT1","","",N,N],[17,"IUTF8","","",N,N],[17,"CRTSCTS","","",N,N],[17,"NI_MAXHOST","","",N,N],[17,"Q_GETQUOTA","","",N,N],[17,"Q_SETQUOTA","","",N,N],[17,"RENAME_SWAP","","",N,N],[17,"RENAME_EXCL","","",N,N],[17,"RTLD_LOCAL","","",N,N],[17,"RTLD_FIRST","","",N,N],[17,"RTLD_NODELETE","","",N,N],[17,"RTLD_NOLOAD","","",N,N],[17,"RTLD_GLOBAL","","",N,N],[17,"_WSTOPPED","","",N,N],[17,"LOG_NETINFO","","",N,N],[17,"LOG_REMOTEAUTH","","",N,N],[17,"LOG_INSTALL","","",N,N],[17,"LOG_RAS","","",N,N],[17,"LOG_LAUNCHD","","",N,N],[17,"LOG_NFACILITIES","","",N,N],[17,"CTLTYPE","","",N,N],[17,"CTLTYPE_NODE","","",N,N],[17,"CTLTYPE_INT","","",N,N],[17,"CTLTYPE_STRING","","",N,N],[17,"CTLTYPE_QUAD","","",N,N],[17,"CTLTYPE_OPAQUE","","",N,N],[17,"CTLTYPE_STRUCT","","",N,N],[17,"CTLFLAG_RD","","",N,N],[17,"CTLFLAG_WR","","",N,N],[17,"CTLFLAG_RW","","",N,N],[17,"CTLFLAG_NOLOCK","","",N,N],[17,"CTLFLAG_ANYBODY","","",N,N],[17,"CTLFLAG_SECURE","","",N,N],[17,"CTLFLAG_MASKED","","",N,N],[17,"CTLFLAG_NOAUTO","","",N,N],[17,"CTLFLAG_KERN","","",N,N],[17,"CTLFLAG_LOCKED","","",N,N],[17,"CTLFLAG_OID2","","",N,N],[17,"CTL_UNSPEC","","",N,N],[17,"CTL_KERN","","",N,N],[17,"CTL_VM","","",N,N],[17,"CTL_VFS","","",N,N],[17,"CTL_NET","","",N,N],[17,"CTL_DEBUG","","",N,N],[17,"CTL_HW","","",N,N],[17,"CTL_MACHDEP","","",N,N],[17,"CTL_USER","","",N,N],[17,"CTL_MAXID","","",N,N],[17,"KERN_OSTYPE","","",N,N],[17,"KERN_OSRELEASE","","",N,N],[17,"KERN_OSREV","","",N,N],[17,"KERN_VERSION","","",N,N],[17,"KERN_MAXVNODES","","",N,N],[17,"KERN_MAXPROC","","",N,N],[17,"KERN_MAXFILES","","",N,N],[17,"KERN_ARGMAX","","",N,N],[17,"KERN_SECURELVL","","",N,N],[17,"KERN_HOSTNAME","","",N,N],[17,"KERN_HOSTID","","",N,N],[17,"KERN_CLOCKRATE","","",N,N],[17,"KERN_VNODE","","",N,N],[17,"KERN_PROC","","",N,N],[17,"KERN_FILE","","",N,N],[17,"KERN_PROF","","",N,N],[17,"KERN_POSIX1","","",N,N],[17,"KERN_NGROUPS","","",N,N],[17,"KERN_JOB_CONTROL","","",N,N],[17,"KERN_SAVED_IDS","","",N,N],[17,"KERN_BOOTTIME","","",N,N],[17,"KERN_NISDOMAINNAME","","",N,N],[17,"KERN_DOMAINNAME","","",N,N],[17,"KERN_MAXPARTITIONS","","",N,N],[17,"KERN_KDEBUG","","",N,N],[17,"KERN_UPDATEINTERVAL","","",N,N],[17,"KERN_OSRELDATE","","",N,N],[17,"KERN_NTP_PLL","","",N,N],[17,"KERN_BOOTFILE","","",N,N],[17,"KERN_MAXFILESPERPROC","","",N,N],[17,"KERN_MAXPROCPERUID","","",N,N],[17,"KERN_DUMPDEV","","",N,N],[17,"KERN_IPC","","",N,N],[17,"KERN_DUMMY","","",N,N],[17,"KERN_PS_STRINGS","","",N,N],[17,"KERN_USRSTACK32","","",N,N],[17,"KERN_LOGSIGEXIT","","",N,N],[17,"KERN_SYMFILE","","",N,N],[17,"KERN_PROCARGS","","",N,N],[17,"KERN_NETBOOT","","",N,N],[17,"KERN_SYSV","","",N,N],[17,"KERN_AFFINITY","","",N,N],[17,"KERN_TRANSLATE","","",N,N],[17,"KERN_CLASSIC","","",N,N],[17,"KERN_EXEC","","",N,N],[17,"KERN_CLASSICHANDLER","","",N,N],[17,"KERN_AIOMAX","","",N,N],[17,"KERN_AIOPROCMAX","","",N,N],[17,"KERN_AIOTHREADS","","",N,N],[17,"KERN_COREFILE","","",N,N],[17,"KERN_COREDUMP","","",N,N],[17,"KERN_SUGID_COREDUMP","","",N,N],[17,"KERN_PROCDELAYTERM","","",N,N],[17,"KERN_SHREG_PRIVATIZABLE","","",N,N],[17,"KERN_LOW_PRI_WINDOW","","",N,N],[17,"KERN_LOW_PRI_DELAY","","",N,N],[17,"KERN_POSIX","","",N,N],[17,"KERN_USRSTACK64","","",N,N],[17,"KERN_NX_PROTECTION","","",N,N],[17,"KERN_TFP","","",N,N],[17,"KERN_PROCNAME","","",N,N],[17,"KERN_THALTSTACK","","",N,N],[17,"KERN_SPECULATIVE_READS","","",N,N],[17,"KERN_OSVERSION","","",N,N],[17,"KERN_SAFEBOOT","","",N,N],[17,"KERN_RAGEVNODE","","",N,N],[17,"KERN_TTY","","",N,N],[17,"KERN_CHECKOPENEVT","","",N,N],[17,"KERN_THREADNAME","","",N,N],[17,"KERN_MAXID","","",N,N],[17,"KERN_RAGE_PROC","","",N,N],[17,"KERN_RAGE_THREAD","","",N,N],[17,"KERN_UNRAGE_PROC","","",N,N],[17,"KERN_UNRAGE_THREAD","","",N,N],[17,"KERN_OPENEVT_PROC","","",N,N],[17,"KERN_UNOPENEVT_PROC","","",N,N],[17,"KERN_TFP_POLICY","","",N,N],[17,"KERN_TFP_POLICY_DENY","","",N,N],[17,"KERN_TFP_POLICY_DEFAULT","","",N,N],[17,"KERN_KDEFLAGS","","",N,N],[17,"KERN_KDDFLAGS","","",N,N],[17,"KERN_KDENABLE","","",N,N],[17,"KERN_KDSETBUF","","",N,N],[17,"KERN_KDGETBUF","","",N,N],[17,"KERN_KDSETUP","","",N,N],[17,"KERN_KDREMOVE","","",N,N],[17,"KERN_KDSETREG","","",N,N],[17,"KERN_KDGETREG","","",N,N],[17,"KERN_KDREADTR","","",N,N],[17,"KERN_KDPIDTR","","",N,N],[17,"KERN_KDTHRMAP","","",N,N],[17,"KERN_KDPIDEX","","",N,N],[17,"KERN_KDSETRTCDEC","","",N,N],[17,"KERN_KDGETENTROPY","","",N,N],[17,"KERN_KDWRITETR","","",N,N],[17,"KERN_KDWRITEMAP","","",N,N],[17,"KERN_KDENABLE_BG_TRACE","","",N,N],[17,"KERN_KDDISABLE_BG_TRACE","","",N,N],[17,"KERN_KDREADCURTHRMAP","","",N,N],[17,"KERN_KDSET_TYPEFILTER","","",N,N],[17,"KERN_KDBUFWAIT","","",N,N],[17,"KERN_KDCPUMAP","","",N,N],[17,"KERN_PROC_ALL","","",N,N],[17,"KERN_PROC_PID","","",N,N],[17,"KERN_PROC_PGRP","","",N,N],[17,"KERN_PROC_SESSION","","",N,N],[17,"KERN_PROC_TTY","","",N,N],[17,"KERN_PROC_UID","","",N,N],[17,"KERN_PROC_RUID","","",N,N],[17,"KERN_PROC_LCID","","",N,N],[17,"KIPC_MAXSOCKBUF","","",N,N],[17,"KIPC_SOCKBUF_WASTE","","",N,N],[17,"KIPC_SOMAXCONN","","",N,N],[17,"KIPC_MAX_LINKHDR","","",N,N],[17,"KIPC_MAX_PROTOHDR","","",N,N],[17,"KIPC_MAX_HDR","","",N,N],[17,"KIPC_MAX_DATALEN","","",N,N],[17,"KIPC_MBSTAT","","",N,N],[17,"KIPC_NMBCLUSTERS","","",N,N],[17,"KIPC_SOQLIMITCOMPAT","","",N,N],[17,"VM_METER","","",N,N],[17,"VM_LOADAVG","","",N,N],[17,"VM_MACHFACTOR","","",N,N],[17,"VM_SWAPUSAGE","","",N,N],[17,"VM_MAXID","","",N,N],[17,"HW_MACHINE","","",N,N],[17,"HW_MODEL","","",N,N],[17,"HW_NCPU","","",N,N],[17,"HW_BYTEORDER","","",N,N],[17,"HW_PHYSMEM","","",N,N],[17,"HW_USERMEM","","",N,N],[17,"HW_PAGESIZE","","",N,N],[17,"HW_DISKNAMES","","",N,N],[17,"HW_DISKSTATS","","",N,N],[17,"HW_EPOCH","","",N,N],[17,"HW_FLOATINGPT","","",N,N],[17,"HW_MACHINE_ARCH","","",N,N],[17,"HW_VECTORUNIT","","",N,N],[17,"HW_BUS_FREQ","","",N,N],[17,"HW_CPU_FREQ","","",N,N],[17,"HW_CACHELINE","","",N,N],[17,"HW_L1ICACHESIZE","","",N,N],[17,"HW_L1DCACHESIZE","","",N,N],[17,"HW_L2SETTINGS","","",N,N],[17,"HW_L2CACHESIZE","","",N,N],[17,"HW_L3SETTINGS","","",N,N],[17,"HW_L3CACHESIZE","","",N,N],[17,"HW_TB_FREQ","","",N,N],[17,"HW_MEMSIZE","","",N,N],[17,"HW_AVAILCPU","","",N,N],[17,"HW_MAXID","","",N,N],[17,"USER_CS_PATH","","",N,N],[17,"USER_BC_BASE_MAX","","",N,N],[17,"USER_BC_DIM_MAX","","",N,N],[17,"USER_BC_SCALE_MAX","","",N,N],[17,"USER_BC_STRING_MAX","","",N,N],[17,"USER_COLL_WEIGHTS_MAX","","",N,N],[17,"USER_EXPR_NEST_MAX","","",N,N],[17,"USER_LINE_MAX","","",N,N],[17,"USER_RE_DUP_MAX","","",N,N],[17,"USER_POSIX2_VERSION","","",N,N],[17,"USER_POSIX2_C_BIND","","",N,N],[17,"USER_POSIX2_C_DEV","","",N,N],[17,"USER_POSIX2_CHAR_TERM","","",N,N],[17,"USER_POSIX2_FORT_DEV","","",N,N],[17,"USER_POSIX2_FORT_RUN","","",N,N],[17,"USER_POSIX2_LOCALEDEF","","",N,N],[17,"USER_POSIX2_SW_DEV","","",N,N],[17,"USER_POSIX2_UPE","","",N,N],[17,"USER_STREAM_MAX","","",N,N],[17,"USER_TZNAME_MAX","","",N,N],[17,"USER_MAXID","","",N,N],[17,"CTL_DEBUG_NAME","","",N,N],[17,"CTL_DEBUG_VALUE","","",N,N],[17,"CTL_DEBUG_MAXID","","",N,N],[17,"PRIO_DARWIN_THREAD","","",N,N],[17,"PRIO_DARWIN_PROCESS","","",N,N],[17,"PRIO_DARWIN_BG","","",N,N],[17,"PRIO_DARWIN_NONUI","","",N,N],[17,"SEM_FAILED","","",N,N],[17,"SIGEV_NONE","","",N,N],[17,"SIGEV_SIGNAL","","",N,N],[17,"SIGEV_THREAD","","",N,N],[17,"AIO_CANCELED","","",N,N],[17,"AIO_NOTCANCELED","","",N,N],[17,"AIO_ALLDONE","","",N,N],[17,"AIO_LISTIO_MAX","","",N,N],[17,"LIO_NOP","","",N,N],[17,"LIO_WRITE","","",N,N],[17,"LIO_READ","","",N,N],[17,"LIO_WAIT","","",N,N],[17,"LIO_NOWAIT","","",N,N],[17,"WEXITED","","",N,N],[17,"WSTOPPED","","",N,N],[17,"WCONTINUED","","",N,N],[17,"WNOWAIT","","",N,N],[17,"P_ALL","","",N,N],[17,"P_PID","","",N,N],[17,"P_PGID","","",N,N],[17,"XATTR_NOFOLLOW","","",N,N],[17,"XATTR_CREATE","","",N,N],[17,"XATTR_REPLACE","","",N,N],[17,"XATTR_NOSECURITY","","",N,N],[17,"XATTR_NODEFAULT","","",N,N],[17,"XATTR_SHOWCOMPRESSION","","",N,N],[17,"NET_RT_IFLIST2","","",N,N],[17,"RTF_UP","","",N,N],[17,"RTF_GATEWAY","","",N,N],[17,"RTF_HOST","","",N,N],[17,"RTF_REJECT","","",N,N],[17,"RTF_DYNAMIC","","",N,N],[17,"RTF_MODIFIED","","",N,N],[17,"RTF_DONE","","",N,N],[17,"RTF_DELCLONE","","",N,N],[17,"RTF_CLONING","","",N,N],[17,"RTF_XRESOLVE","","",N,N],[17,"RTF_LLINFO","","",N,N],[17,"RTF_STATIC","","",N,N],[17,"RTF_BLACKHOLE","","",N,N],[17,"RTF_NOIFREF","","",N,N],[17,"RTF_PROTO2","","",N,N],[17,"RTF_PROTO1","","",N,N],[17,"RTF_PRCLONING","","",N,N],[17,"RTF_WASCLONED","","",N,N],[17,"RTF_PROTO3","","",N,N],[17,"RTF_PINNED","","",N,N],[17,"RTF_LOCAL","","",N,N],[17,"RTF_BROADCAST","","",N,N],[17,"RTF_MULTICAST","","",N,N],[17,"RTF_IFSCOPE","","",N,N],[17,"RTF_CONDEMNED","","",N,N],[17,"RTF_IFREF","","",N,N],[17,"RTF_PROXY","","",N,N],[17,"RTF_ROUTER","","",N,N],[17,"RTM_VERSION","","",N,N],[17,"RTM_ADD","","",N,N],[17,"RTM_DELETE","","",N,N],[17,"RTM_CHANGE","","",N,N],[17,"RTM_GET","","",N,N],[17,"RTM_LOSING","","",N,N],[17,"RTM_REDIRECT","","",N,N],[17,"RTM_MISS","","",N,N],[17,"RTM_LOCK","","",N,N],[17,"RTM_OLDADD","","",N,N],[17,"RTM_OLDDEL","","",N,N],[17,"RTM_RESOLVE","","",N,N],[17,"RTM_NEWADDR","","",N,N],[17,"RTM_DELADDR","","",N,N],[17,"RTM_IFINFO","","",N,N],[17,"RTM_NEWMADDR","","",N,N],[17,"RTM_DELMADDR","","",N,N],[17,"RTM_IFINFO2","","",N,N],[17,"RTM_NEWMADDR2","","",N,N],[17,"RTM_GET2","","",N,N],[17,"RTV_MTU","","",N,N],[17,"RTV_HOPCOUNT","","",N,N],[17,"RTV_EXPIRE","","",N,N],[17,"RTV_RPIPE","","",N,N],[17,"RTV_SPIPE","","",N,N],[17,"RTV_SSTHRESH","","",N,N],[17,"RTV_RTT","","",N,N],[17,"RTV_RTTVAR","","",N,N],[17,"RTA_DST","","",N,N],[17,"RTA_GATEWAY","","",N,N],[17,"RTA_NETMASK","","",N,N],[17,"RTA_GENMASK","","",N,N],[17,"RTA_IFP","","",N,N],[17,"RTA_IFA","","",N,N],[17,"RTA_AUTHOR","","",N,N],[17,"RTA_BRD","","",N,N],[17,"RTAX_DST","","",N,N],[17,"RTAX_GATEWAY","","",N,N],[17,"RTAX_NETMASK","","",N,N],[17,"RTAX_GENMASK","","",N,N],[17,"RTAX_IFP","","",N,N],[17,"RTAX_IFA","","",N,N],[17,"RTAX_AUTHOR","","",N,N],[17,"RTAX_BRD","","",N,N],[17,"RTAX_MAX","","",N,N],[17,"KERN_PROCARGS2","","",N,N],[17,"PROC_PIDTASKALLINFO","","",N,N],[17,"PROC_PIDTASKINFO","","",N,N],[17,"PROC_PIDTHREADINFO","","",N,N],[17,"MAXCOMLEN","","",N,N],[17,"MAXTHREADNAMESIZE","","",N,N],[17,"XUCRED_VERSION","","",N,N],[17,"LC_SEGMENT","","",N,N],[17,"LC_SEGMENT_64","","",N,N],[17,"MH_MAGIC","","",N,N],[17,"MH_MAGIC_64","","",N,N],[17,"UTUN_OPT_FLAGS","","",N,N],[17,"UTUN_OPT_IFNAME","","",N,N],[17,"DLT_NULL","","",N,N],[17,"DLT_EN10MB","","",N,N],[17,"DLT_EN3MB","","",N,N],[17,"DLT_AX25","","",N,N],[17,"DLT_PRONET","","",N,N],[17,"DLT_CHAOS","","",N,N],[17,"DLT_IEEE802","","",N,N],[17,"DLT_ARCNET","","",N,N],[17,"DLT_SLIP","","",N,N],[17,"DLT_PPP","","",N,N],[17,"DLT_FDDI","","",N,N],[17,"DLT_ATM_RFC1483","","",N,N],[17,"DLT_RAW","","",N,N],[17,"DLT_LOOP","","",N,N],[17,"BPF_ALIGNMENT","","",N,N],[17,"POSIX_SPAWN_RESETIDS","","",N,N],[17,"POSIX_SPAWN_SETPGROUP","","",N,N],[17,"POSIX_SPAWN_SETSIGDEF","","",N,N],[17,"POSIX_SPAWN_SETSIGMASK","","",N,N],[17,"POSIX_SPAWN_SETEXEC","","",N,N],[17,"POSIX_SPAWN_START_SUSPENDED","","",N,N],[17,"POSIX_SPAWN_CLOEXEC_DEFAULT","","",N,N],[17,"IPC_CREAT","","",N,N],[17,"IPC_EXCL","","",N,N],[17,"IPC_NOWAIT","","",N,N],[17,"IPC_PRIVATE","","",N,N],[17,"IPC_RMID","","",N,N],[17,"IPC_SET","","",N,N],[17,"IPC_STAT","","",N,N],[17,"IPC_R","","",N,N],[17,"IPC_W","","",N,N],[17,"IPC_M","","",N,N],[17,"SHM_RDONLY","","",N,N],[17,"SHM_RND","","",N,N],[17,"SHMLBA","","",N,N],[17,"SHM_R","","",N,N],[17,"SHM_W","","",N,N],[17,"__PTHREAD_MUTEX_SIZE__","","",N,N],[17,"__PTHREAD_COND_SIZE__","","",N,N],[17,"__PTHREAD_CONDATTR_SIZE__","","",N,N],[17,"__PTHREAD_RWLOCK_SIZE__","","",N,N],[17,"__PTHREAD_RWLOCKATTR_SIZE__","","",N,N],[17,"TIOCTIMESTAMP","","",N,N],[17,"TIOCDCDTIMESTAMP","","",N,N]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"passwd"],[3,"ifaddrs"],[3,"tm"],[3,"utsname"],[3,"msghdr"],[3,"cmsghdr"],[3,"if_nameindex"],[3,"aiocb"],[3,"utmpx"],[3,"glob_t"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"mach_timebase_info"],[3,"stat"],[3,"dirent"],[3,"siginfo_t"],[3,"sigaction"],[3,"stack_t"],[3,"fstore_t"],[3,"radvisory"],[3,"statvfs"],[3,"Dl_info"],[3,"sockaddr_in"],[3,"statfs"],[3,"kevent"],[3,"kevent64_s"],[3,"dqblk"],[3,"if_msghdr"],[3,"termios"],[3,"flock"],[3,"sf_hdtr"],[3,"lconv"],[3,"sigevent"],[3,"proc_taskinfo"],[3,"proc_bsdinfo"],[3,"proc_taskallinfo"],[3,"proc_threadinfo"],[3,"xsw_usage"],[3,"xucred"],[3,"mach_header"],[3,"mach_header_64"],[3,"segment_command"],[3,"segment_command_64"],[3,"load_command"],[3,"sockaddr_dl"],[3,"sockaddr_inarp"],[3,"sockaddr_ctl"],[3,"in_pktinfo"],[3,"in6_pktinfo"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"arphdr"],[3,"timeval32"],[3,"if_data"],[3,"bpf_hdr"],[3,"pthread_attr_t"],[3,"pthread_mutex_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"pthread_rwlock_t"],[3,"pthread_rwlockattr_t"],[3,"fd_set"],[3,"fsid_t"]]};
searchIndex["makeppkg"]={"doc":"","items":[[14,"eprintln","makeppkg","",N,N]],"paths":[]};
searchIndex["md5"]={"doc":"The [MD5] hash function.","items":[[3,"Digest","md5","A digest.",N,N],[12,"0","","",0,N],[3,"Context","","A context.",N,N],[5,"compute","","Compute the digest of data.",N,[[["t"]],["digest"]]],[11,"clone","","",0,[[["self"]],["digest"]]],[11,"eq","","",0,[[["self"],["digest"]],["bool"]]],[11,"ne","","",0,[[["self"],["digest"]],["bool"]]],[11,"deref","","",0,N],[11,"deref_mut","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a context for computing a digest.",1,[[],["context"]]],[11,"consume","","Consume data.",1,[[["self"],["t"]]]],[11,"compute","","Finalize and return the digest.",1,[[["self"]],["digest"]]],[11,"clone","","",1,[[["self"]],["context"]]],[11,"from","","",0,[[["context"]],["digest"]]],[11,"write","","",1,N],[11,"flush","","",1,[[["self"]],["result"]]]],"paths":[[3,"Digest"],[3,"Context"]]};
searchIndex["md6"]={"doc":"An implementation of the MD6 hash function, via FFI to reference implementation.","items":[[3,"Md6","md6","Hashing state for multiple data sets.",N,N],[4,"Md6Error","","Some functions in the library can fail, this enum represents all the possible ways they can.",N,N],[13,"Fail","","Generic failure state",0,N],[13,"BadHashbitlen","","`hashbitlen` passed to `Md6::new()` or `hash()` incorrect",0,N],[5,"hash","","Hash all data in one fell swoop.",N,N],[6,"Result","","Helper result type containing `Md6Error`.",N,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["md6error"]]],[11,"hash","","",0,N],[11,"eq","","",0,[[["self"],["md6error"]],["bool"]]],[11,"new","","Create a new hash state and initialise it with the given bit length.",1,[[["i32"]],["result",["md6"]]]],[11,"update","","Append the provided data to the hash function.",1,N],[11,"finalise","","Finish hashing and store the output result in the provided space.",1,N],[11,"write","","",1,N],[11,"flush","","",1,[[["self"]],["result"]]],[11,"drop","","",1,[[["self"]]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"from","","Passing incorrect error values yields unspecified behaviour.",0,[[["i32"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[4,"Md6Error"],[3,"Md6"]]};
searchIndex["memchr"]={"doc":"The `memchr` crate provides heavily optimized routines for searching bytes.","items":[[3,"Memchr","memchr","An iterator for `memchr`.",N,N],[3,"Memchr2","","An iterator for `memchr2`.",N,N],[3,"Memchr3","","An iterator for `memchr3`.",N,N],[5,"memchr_iter","","An iterator over all occurrences of the needle in a haystack.",N,N],[5,"memchr2_iter","","An iterator over all occurrences of the needles in a haystack.",N,N],[5,"memchr3_iter","","An iterator over all occurrences of the needles in a haystack.",N,N],[5,"memrchr_iter","","An iterator over all occurrences of the needle in a haystack, in reverse.",N,N],[5,"memrchr2_iter","","An iterator over all occurrences of the needles in a haystack, in reverse.",N,N],[5,"memrchr3_iter","","An iterator over all occurrences of the needles in a haystack, in reverse.",N,N],[5,"memchr","","Search for the first occurrence of a byte in a slice.",N,N],[5,"memchr2","","Like `memchr`, but searches for two bytes instead of one.",N,N],[5,"memchr3","","Like `memchr`, but searches for three bytes instead of one.",N,N],[5,"memrchr","","Search for the last occurrence of a byte in a slice.",N,N],[5,"memrchr2","","Like `memrchr`, but searches for two bytes instead of one.",N,N],[5,"memrchr3","","Like `memrchr`, but searches for three bytes instead of one.",N,N],[11,"new","","Creates a new iterator that yields all positions of needle in haystack.",0,N],[11,"next","","",0,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",0,N],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"new","","Creates a new iterator that yields all positions of needle in haystack.",1,N],[11,"next","","",1,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",1,N],[11,"next_back","","",1,[[["self"]],["option"]]],[11,"new","","Create a new `Memchr3` that's initialized to zero with a haystack",2,N],[11,"next","","",2,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",2,N],[11,"next_back","","",2,[[["self"]],["option"]]]],"paths":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]};
searchIndex["nodrop"]={"doc":"The nodrop crate has the following cargo feature flags:","items":[[3,"NoDrop","nodrop","A type holding T that will not call its destructor on drop",N,N],[11,"new","","Create a new NoDrop.",0,[[["t"]],["nodrop"]]],[11,"into_inner","","Extract the inner value.",0,[[["self"]],["t"]]],[11,"drop","","",0,[[["self"]]]],[11,"deref","","",0,[[["self"]],["t"]]],[11,"deref_mut","","",0,[[["self"]],["t"]]]],"paths":[[3,"NoDrop"]]};
searchIndex["num_cpus"]={"doc":"A crate with utilities to determine the number of CPUs available on the current system.","items":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",N,[[],["usize"]]],[5,"get_physical","","Returns the number of physical cores of the current system.",N,[[],["usize"]]]],"paths":[]};
searchIndex["pbr"]={"doc":"Terminal progress bar for Rust","items":[[3,"ProgressBar","pbr","",N,N],[12,"total","","",0,N],[12,"is_finish","","",0,N],[12,"is_multibar","","",0,N],[12,"show_bar","","",0,N],[12,"show_speed","","",0,N],[12,"show_percent","","",0,N],[12,"show_counter","","",0,N],[12,"show_time_left","","",0,N],[12,"show_tick","","",0,N],[12,"show_message","","",0,N],[3,"MultiBar","","",N,N],[3,"Pipe","","",N,N],[3,"PbIter","","",N,N],[4,"Units","","",N,N],[13,"Default","","",1,N],[13,"Bytes","","",1,N],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new ProgressBar with default configuration.",0,[[["u64"]],["progressbar",["stdout"]]]],[11,"on","","Create a new ProgressBar with default configuration but pass an arbitrary writer.",0,[[["t"],["u64"]],["progressbar"]]],[11,"set_units","","Set units, default is simple numbers",0,[[["self"],["units"]]]],[11,"format","","Set custom format to the drawing bar, default is `[=>-]`",0,[[["self"],["str"]]]],[11,"message","","Set message to display in the prefix, call with \"\" to stop printing a message.",0,[[["self"],["str"]]]],[11,"tick_format","","Set tick format for the progressBar, default is \\|/-",0,[[["self"],["str"]]]],[11,"set_width","","Set width, or `None` for default.",0,[[["self"],["option",["usize"]]]]],[11,"set_max_refresh_rate","","Set max refresh rate, above which the progress bar will not redraw, or `None` for none.",0,[[["self"],["option",["duration"]]]]],[11,"tick","","Update progress bar even though no progress are made Useful to see if a program is bricked or just not doing any progress.",0,[[["self"]]]],[11,"add","","Add to current value",0,[[["self"],["u64"]],["u64"]]],[11,"set","","Manually set the current value of the bar",0,[[["self"],["u64"]],["u64"]]],[11,"inc","","Increment current value",0,[[["self"]],["u64"]]],[11,"finish","","Calling finish manually will set current to total and draw the last time",0,[[["self"]]]],[11,"finish_print","","Call finish and write string `s` that will replace the progress bar.",0,[[["self"],["str"]]]],[11,"finish_println","","Call finish and write string `s` below the progress bar.",0,[[["self"],["str"]]]],[11,"write","","",0,N],[11,"flush","","",0,[[["self"]],["result"]]],[11,"new","","Create a new MultiBar with stdout as a writer.",2,[[],["multibar",["stdout"]]]],[11,"on","","Create a new MultiBar with an arbitrary writer.",2,[[["t"]],["multibar"]]],[11,"println","","println used to add text lines between the bars. for example: you could add a header to your application, or text separators between bars.",2,[[["self"],["str"]]]],[11,"create_bar","","create_bar creates new `ProgressBar` with `Pipe` as the writer.",2,[[["self"],["u64"]],["progressbar",["pipe"]]]],[11,"listen","","listen start listen to all bars changes.",2,[[["self"]]]],[11,"write","","",3,N],[11,"flush","","",3,[[["self"]],["result"]]],[11,"new","","",4,[[["i"]],["self"]]],[11,"on","","",4,[[["t"],["i"]],["self"]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,N]],"paths":[[3,"ProgressBar"],[4,"Units"],[3,"MultiBar"],[3,"Pipe"],[3,"PbIter"]]};
searchIndex["pkgparse_rs"]={"doc":"","items":[[3,"pkgbuild_t","pkgparse_rs","",N,N],[5,"pkgbuild_parse","","",N,N],[5,"pkgbuild_names","","",N,N],[5,"pkgbuild_sources","","",N,N],[5,"pkgbuild_md5sums","","",N,N],[5,"pkgbuild_sha1sums","","",N,N],[5,"pkgbuild_sha256sums","","",N,N],[5,"pkgbuild_sha512sums","","",N,N]],"paths":[]};
searchIndex["rand"]={"doc":"Utilities for random number generation","items":[[8,"RngCore","rand","The core of a random number generator.",N,N],[10,"next_u32","","Return the next random `u32`.",0,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",0,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",0,N],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",0,N],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or [`BlockRngCore`] implementation is supposed to be cryptographically secure.",N,N],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",N,N],[16,"Seed","","Seed type, which is restricted to types mutably-dereferencable as `u8` arrays (we recommend `[u8; N]` for some `N`).",1,N],[10,"from_seed","","Create a new PRNG using the given seed.",1,N],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",1,[[["r"]],["result",["error"]]]],[4,"ErrorKind","","Error kind which can be matched over.",N,N],[13,"Unavailable","","Feature is not available; not recoverable.",2,N],[13,"Unexpected","","General failure; there may be a chance of recovery on retry.",2,N],[13,"Transient","","A transient failure which likely can be resolved or worked around.",2,N],[13,"NotReady","","Not ready yet: recommended to try again a little later.",2,N],[3,"Error","","Error type of random number generators",N,N],[12,"kind","","The error kind",3,N],[12,"msg","","The error message",3,N],[3,"Generator","","Iterator which will generate a stream of random items.",N,N],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",N,N],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number generator, seeded by the system. Intended to be used in method chaining style, e.g. `thread_rng().gen::<i32>()`, or cached locally, e.g. `let mut rng = thread_rng();`.",N,[[],["threadrng"]]],[5,"weak_rng","","DEPRECATED: use [`SmallRng`] instead.",N,[[],["xorshiftrng"]]],[5,"random","","Generates a random value using the thread-local random number generator.",N,[[],["t"]]],[5,"sample","","DEPRECATED: use `seq::sample_iter` instead.",N,[[["r"],["i"],["usize"]],["vec"]]],[0,"distributions","","Generating random samples from probability distributions.",N,N],[3,"Alphanumeric","rand::distributions","Sample a `char`, uniformly distributed over ASCII letters and numbers: a-z, A-Z and 0-9.",N,N],[3,"Uniform","","Sample values uniformly between two bounds.",N,N],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly in the half-open interval `(0, 1]`, i.e. including 1 but not 0.",N,N],[3,"Open01","","A distribution to sample floating point numbers uniformly in the open interval `(0, 1)`, i.e. not including either endpoint.",N,N],[3,"Gamma","","The Gamma distribution `Gamma(shape, scale)` distribution.",N,N],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of freedom.",N,N],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",N,N],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of freedom.",N,N],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",N,N],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",N,N],[3,"StandardNormal","","Samples floating-point numbers according to the normal distribution `N(0, 1)` (a.k.a. a standard normal, or Gaussian). This is equivalent to `Normal::new(0.0, 1.0)` but faster.",N,N],[3,"Exp","","The exponential distribution `Exp(lambda)`.",N,N],[3,"Exp1","","Samples floating-point numbers according to the exponential distribution, with rate parameter `λ = 1`. This is equivalent to `Exp::new(1.0)` or sampling with `-rng.gen::<f64>().ln()`, but faster.",N,N],[3,"Pareto","","Samples floating-point numbers according to the Pareto distribution",N,N],[3,"Poisson","","The Poisson distribution `Poisson(lambda)`.",N,N],[3,"Binomial","","The binomial distribution `Binomial(n, p)`.",N,N],[3,"Bernoulli","","The Bernoulli distribution.",N,N],[3,"Cauchy","","The Cauchy distribution `Cauchy(median, scale)`.",N,N],[3,"DistIter","","An iterator that generates random values of `T` with distribution `D`, using `R` as the source of randomness.",N,N],[3,"Standard","","A generic random value distribution, implemented for many primitive types. Usually generates values with a numerically uniform distribution, and with a range appropriate to the type.",N,N],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",N,N],[12,"weight","","The numerical weight of this item",4,N],[12,"item","","The actual item which is being weighted",4,N],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",N,N],[0,"uniform","","A distribution uniformly sampling numbers within a given range.",N,N],[3,"Uniform","rand::distributions::uniform","Sample values uniformly between two bounds.",N,N],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer types.",N,N],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for floating-point types.",N,N],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",N,N],[8,"SampleUniform","","Helper trait for creating objects using the correct implementation of [`UniformSampler`] for the sampling type.",N,N],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",5,N],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",N,N],[16,"X","","The type sampled by this implementation.",6,N],[10,"new","","Construct self, with inclusive lower bound and exclusive upper bound `[low, high)`.",6,N],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",6,N],[10,"sample","","Sample a value.",6,N],[11,"sample_single","","Sample a single value uniformly from a range with inclusive lower bound and exclusive upper bound `[low, high)`.",6,N],[11,"clone","","",7,[[["self"]],["uniform"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new `Uniform` instance which samples uniformly from the half open range `[low, high)` (excluding `high`). Panics if `low >= high`.",7,[[["x"],["x"]],["uniform"]]],[11,"new_inclusive","","Create a new `Uniform` instance which samples uniformly from the closed range `[low, high]` (inclusive). Panics if `low > high`.",7,[[["x"],["x"]],["uniform"]]],[11,"sample","","",7,[[["self"],["r"]],["x"]]],[11,"from","","",7,[[["range"]],["uniform"]]],[11,"clone","","",8,[[["self"]],["uniformint"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"new","","",8,N],[11,"new_inclusive","","",8,N],[11,"sample","","",8,N],[11,"sample_single","","",8,N],[11,"new","","",8,N],[11,"new_inclusive","","",8,N],[11,"sample","","",8,N],[11,"sample_single","","",8,N],[11,"new","","",8,N],[11,"new_inclusive","","",8,N],[11,"sample","","",8,N],[11,"sample_single","","",8,N],[11,"new","","",8,N],[11,"new_inclusive","","",8,N],[11,"sample","","",8,N],[11,"sample_single","","",8,N],[11,"new","","",8,N],[11,"new_inclusive","","",8,N],[11,"sample","","",8,N],[11,"sample_single","","",8,N],[11,"new","","",8,N],[11,"new_inclusive","","",8,N],[11,"sample","","",8,N],[11,"sample_single","","",8,N],[11,"new","","",8,N],[11,"new_inclusive","","",8,N],[11,"sample","","",8,N],[11,"sample_single","","",8,N],[11,"new","","",8,N],[11,"new_inclusive","","",8,N],[11,"sample","","",8,N],[11,"sample_single","","",8,N],[11,"new","","",8,N],[11,"new_inclusive","","",8,N],[11,"sample","","",8,N],[11,"sample_single","","",8,N],[11,"new","","",8,N],[11,"new_inclusive","","",8,N],[11,"sample","","",8,N],[11,"sample_single","","",8,N],[11,"clone","","",9,[[["self"]],["uniformfloat"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"new","","",9,N],[11,"new_inclusive","","",9,N],[11,"sample","","",9,N],[11,"sample_single","","",9,N],[11,"new","","",9,N],[11,"new_inclusive","","",9,N],[11,"sample","","",9,N],[11,"sample_single","","",9,N],[11,"clone","","",10,[[["self"]],["uniformduration"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"new","","",10,[[["duration"],["duration"]],["uniformduration"]]],[11,"new_inclusive","","",10,[[["duration"],["duration"]],["uniformduration"]]],[11,"sample","","",10,[[["self"],["r"]],["duration"]]],[11,"clone","rand::distributions","",11,[[["self"]],["gamma"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct an object representing the `Gamma(shape, scale)` distribution.",11,[[["f64"],["f64"]],["gamma"]]],[11,"sample","","",11,[[["self"],["r"]],["f64"]]],[11,"clone","","",12,[[["self"]],["chisquared"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom `k`. Panics if `k < 0`.",12,[[["f64"]],["chisquared"]]],[11,"sample","","",12,[[["self"],["r"]],["f64"]]],[11,"clone","","",13,[[["self"]],["fisherf"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new `FisherF` distribution, with the given parameter. Panics if either `m` or `n` are not positive.",13,[[["f64"],["f64"]],["fisherf"]]],[11,"sample","","",13,[[["self"],["r"]],["f64"]]],[11,"clone","","",14,[[["self"]],["studentt"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new Student t distribution with `n` degrees of freedom. Panics if `n <= 0`.",14,[[["f64"]],["studentt"]]],[11,"sample","","",14,[[["self"],["r"]],["f64"]]],[11,"clone","","",15,[[["self"]],["standardnormal"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"sample","","",15,[[["self"],["r"]],["f64"]]],[11,"clone","","",16,[[["self"]],["normal"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct a new `Normal` distribution with the given mean and standard deviation.",16,[[["f64"],["f64"]],["normal"]]],[11,"sample","","",16,[[["self"],["r"]],["f64"]]],[11,"clone","","",17,[[["self"]],["lognormal"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct a new `LogNormal` distribution with the given mean and standard deviation.",17,[[["f64"],["f64"]],["lognormal"]]],[11,"sample","","",17,[[["self"],["r"]],["f64"]]],[11,"clone","","",18,[[["self"]],["exp1"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"sample","","",18,[[["self"],["r"]],["f64"]]],[11,"clone","","",19,[[["self"]],["exp"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct a new `Exp` with the given shape parameter `lambda`. Panics if `lambda <= 0`.",19,[[["f64"]],["exp"]]],[11,"sample","","",19,[[["self"],["r"]],["f64"]]],[11,"clone","","",20,[[["self"]],["pareto"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct a new Pareto distribution with given `scale` and `shape`.",20,[[["f64"],["f64"]],["pareto"]]],[11,"sample","","",20,[[["self"],["r"]],["f64"]]],[11,"clone","","",21,[[["self"]],["poisson"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct a new `Poisson` with the given shape parameter `lambda`. Panics if `lambda <= 0`.",21,[[["f64"]],["poisson"]]],[11,"sample","","",21,[[["self"],["r"]],["u64"]]],[11,"clone","","",22,[[["self"]],["binomial"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct a new `Binomial` with the given shape parameters `n` (number of trials) and `p` (probability of success).",22,[[["u64"],["f64"]],["binomial"]]],[11,"sample","","",22,[[["self"],["r"]],["u64"]]],[11,"clone","","",23,[[["self"]],["bernoulli"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct a new `Bernoulli` with the given probability of success `p`.",23,[[["f64"]],["bernoulli"]]],[11,"sample","","",23,[[["self"],["r"]],["bool"]]],[11,"clone","","",24,[[["self"]],["cauchy"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct a new `Cauchy` with the given shape parameters `median` the peak location and `scale` the scale factor. Panics if `scale <= 0`.",24,[[["f64"],["f64"]],["cauchy"]]],[11,"sample","","",24,[[["self"],["r"]],["f64"]]],[11,"clone","","",25,[[["self"]],["openclosed01"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"clone","","",26,[[["self"]],["open01"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"sample","","",27,[[["self"],["r"]],["f32"]]],[11,"sample","","",25,[[["self"],["r"]],["f32"]]],[11,"sample","","",26,[[["self"],["r"]],["f32"]]],[11,"sample","","",27,[[["self"],["r"]],["f64"]]],[11,"sample","","",25,[[["self"],["r"]],["f64"]]],[11,"sample","","",26,[[["self"],["r"]],["f64"]]],[11,"sample","","",27,[[["self"],["r"]],["u8"]]],[11,"sample","","",27,[[["self"],["r"]],["u16"]]],[11,"sample","","",27,[[["self"],["r"]],["u32"]]],[11,"sample","","",27,[[["self"],["r"]],["u64"]]],[11,"sample","","",27,[[["self"],["r"]],["usize"]]],[11,"sample","","",27,[[["self"],["r"]],["i8"]]],[11,"sample","","",27,[[["self"],["r"]],["i16"]]],[11,"sample","","",27,[[["self"],["r"]],["i32"]]],[11,"sample","","",27,[[["self"],["r"]],["i64"]]],[11,"sample","","",27,[[["self"],["r"]],["isize"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"sample","","",27,[[["self"],["r"]],["char"]]],[11,"sample","","",28,[[["self"],["r"]],["char"]]],[11,"sample","","",27,[[["self"],["r"]],["bool"]]],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,[[["self"],["r"]],["option"]]],[11,"sample","","",27,[[["self"],["r"]],["wrapping"]]],[0,"range","","DEPRECATED: Use `distributions::uniform` instead.",N,N],[11,"sample","","",29,[[["self"],["r"]],["t"]]],[11,"ind_sample","","",29,[[["self"],["r"]],["t"]]],[11,"sample","rand::distributions::uniform","",7,[[["self"],["r"]],["t"]]],[11,"ind_sample","","",7,[[["self"],["r"]],["t"]]],[11,"sample","rand::distributions","",19,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",19,[[["self"],["r"]],["f64"]]],[11,"sample","","",11,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",11,[[["self"],["r"]],["f64"]]],[11,"sample","","",12,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",12,[[["self"],["r"]],["f64"]]],[11,"sample","","",13,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",13,[[["self"],["r"]],["f64"]]],[11,"sample","","",14,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",14,[[["self"],["r"]],["f64"]]],[11,"sample","","",16,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",16,[[["self"],["r"]],["f64"]]],[11,"sample","","",17,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",17,[[["self"],["r"]],["f64"]]],[8,"Sample","","Types that can be used to create a random instance of `Support`.",N,N],[10,"sample","","Generate a random value of `Support`, using `rng` as the source of randomness.",30,[[["self"],["r"]],["support"]]],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",N,N],[10,"ind_sample","","Generate a random value.",31,[[["self"],["r"]],["support"]]],[8,"Distribution","","Types (distributions) that can be used to create a random instance of `T`.",N,N],[10,"sample","","Generate a random value of `T`, using `rng` as the source of randomness.",32,[[["self"],["r"]],["t"]]],[11,"sample_iter","","Create an iterator that generates random values of `T`, using `rng` as the source of randomness.",32,[[["self"],["r"]],["distiter"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"next","","",33,[[["self"]],["option"]]],[11,"size_hint","","",33,N],[11,"clone","","",27,[[["self"]],["standard"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"clone","","",4,[[["self"]],["weighted"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new `WeightedChoice`.",29,N],[11,"sample","","",29,[[["self"],["r"]],["t"]]],[0,"prelude","rand","Convenience re-export of common members",N,N],[0,"prng","","Pseudo-random number generators.",N,N],[3,"XorShiftRng","rand::prng","An Xorshift random number generator.",N,N],[0,"chacha","","The ChaCha random number generator.",N,N],[3,"ChaChaRng","rand::prng::chacha","A cryptographically secure random number generator that uses the ChaCha algorithm.",N,N],[3,"ChaChaCore","","The core of `ChaChaRng`, used with `BlockRng`.",N,N],[11,"clone","","",34,[[["self"]],["chacharng"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"next_u32","","",34,[[["self"]],["u32"]]],[11,"next_u64","","",34,[[["self"]],["u64"]]],[11,"fill_bytes","","",34,N],[11,"try_fill_bytes","","",34,N],[11,"from_seed","","",34,N],[11,"from_rng","","",34,[[["r"]],["result",["error"]]]],[11,"new_unseeded","","Create an ChaCha random number generator using the default fixed key of 8 zero words.",34,[[],["chacharng"]]],[11,"set_stream","","Set the stream number.",34,[[["self"],["u64"]]]],[11,"clone","","",35,[[["self"]],["chachacore"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"generate","","",35,N],[11,"from_seed","","",35,N],[11,"from","","",34,[[["chachacore"]],["self"]]],[0,"hc128","rand::prng","The HC-128 random number generator.",N,N],[3,"Hc128Rng","rand::prng::hc128","A cryptographically secure random number generator that uses the HC-128 algorithm.",N,N],[3,"Hc128Core","","The core of `Hc128Rng`, used with `BlockRng`.",N,N],[11,"clone","","",36,[[["self"]],["hc128rng"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"next_u32","","",36,[[["self"]],["u32"]]],[11,"next_u64","","",36,[[["self"]],["u64"]]],[11,"fill_bytes","","",36,N],[11,"try_fill_bytes","","",36,N],[11,"from_seed","","",36,N],[11,"from_rng","","",36,[[["r"]],["result",["error"]]]],[11,"clone","","",37,[[["self"]],["hc128core"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"generate","","",37,N],[11,"from_seed","","Create an HC-128 random number generator with a seed. The seed has to be 256 bits in length, matching the 128 bit `key` followed by 128 bit `iv` when HC-128 where to be used as a stream cipher.",37,N],[0,"isaac","rand::prng","The ISAAC random number generator.",N,N],[3,"IsaacRng","rand::prng::isaac","A random number generator that uses the ISAAC algorithm.",N,N],[3,"IsaacCore","","The core of `IsaacRng`, used with `BlockRng`.",N,N],[11,"clone","","",38,[[["self"]],["isaacrng"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"next_u32","","",38,[[["self"]],["u32"]]],[11,"next_u64","","",38,[[["self"]],["u64"]]],[11,"fill_bytes","","",38,N],[11,"try_fill_bytes","","",38,N],[11,"from_seed","","",38,N],[11,"from_rng","","",38,[[["s"]],["result",["error"]]]],[11,"new_unseeded","","Create an ISAAC random number generator using the default fixed seed.",38,[[],["self"]]],[11,"new_from_u64","","Create an ISAAC random number generator using an `u64` as seed. If `seed == 0` this will produce the same stream of random numbers as the reference implementation when used unseeded.",38,[[["u64"]],["self"]]],[11,"clone","","",39,[[["self"]],["isaaccore"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"generate","","Refills the output buffer, `results`. See also the pseudocode desciption of the algorithm in the [`IsaacRng`] documentation.",39,[[["self"],["isaacarray"]]]],[11,"from_seed","","",39,N],[11,"from_rng","","",39,[[["r"]],["result",["error"]]]],[0,"isaac64","rand::prng","The ISAAC-64 random number generator.",N,N],[3,"Isaac64Rng","rand::prng::isaac64","A random number generator that uses ISAAC-64, the 64-bit variant of the ISAAC algorithm.",N,N],[3,"Isaac64Core","","The core of `Isaac64Rng`, used with `BlockRng`.",N,N],[11,"clone","","",40,[[["self"]],["isaac64rng"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"next_u32","","",40,[[["self"]],["u32"]]],[11,"next_u64","","",40,[[["self"]],["u64"]]],[11,"fill_bytes","","",40,N],[11,"try_fill_bytes","","",40,N],[11,"from_seed","","",40,N],[11,"from_rng","","",40,[[["s"]],["result",["error"]]]],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the default fixed seed.",40,[[],["self"]]],[11,"new_from_u64","","Create an ISAAC-64 random number generator using an `u64` as seed. If `seed == 0` this will produce the same stream of random numbers as the reference implementation when used unseeded.",40,[[["u64"]],["self"]]],[11,"clone","","",41,[[["self"]],["isaac64core"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"generate","","Refills the output buffer, `results`. See also the pseudocode desciption of the algorithm in the [`Isaac64Rng`] documentation.",41,[[["self"],["isaacarray"]]]],[11,"new_from_u64","","Create an ISAAC-64 random number generator using an `u64` as seed. If `seed == 0` this will produce the same stream of random numbers as the reference implementation when used unseeded.",41,[[["u64"]],["self"]]],[11,"from_seed","","",41,N],[11,"from_rng","","",41,[[["r"]],["result",["error"]]]],[11,"clone","rand::prng","",42,[[["self"]],["xorshiftrng"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",42,[[],["xorshiftrng"]]],[11,"next_u32","","",42,[[["self"]],["u32"]]],[11,"next_u64","","",42,[[["self"]],["u64"]]],[11,"fill_bytes","","",42,N],[11,"try_fill_bytes","","",42,N],[11,"from_seed","","",42,N],[11,"from_rng","","",42,[[["r"]],["result",["error"]]]],[0,"rngs","rand","Random number generators and adapters for common usage:",N,N],[3,"JitterRng","rand::rngs","A true random number generator based on jitter in the CPU execution time, and jitter in memory access time.",N,N],[3,"EntropyRng","","An interface returning random data from external source(s), provided specifically for securely seeding algorithmic generators (PRNGs).",N,N],[3,"SmallRng","","An RNG recommended when small state, cheap initialization and good performance are required. The PRNG algorithm in `SmallRng` is chosen to be efficient on the current platform, without consideration for cryptography or security. The size of its state is much smaller than for [`StdRng`].",N,N],[3,"StdRng","","The standard RNG. The PRNG algorithm in `StdRng` is chosen to be efficient on the current platform, to be statistically strong and unpredictable (meaning a cryptographically secure PRNG).",N,N],[3,"ThreadRng","","The type returned by [`thread_rng`], essentially just a reference to the PRNG in thread-local memory.",N,N],[3,"OsRng","","A random number generator that retrieves randomness straight from the operating system.",N,N],[4,"TimerError","","An error that can occur when [`JitterRng::test_timer`] fails.",N,N],[13,"NoTimer","","No timer available.",43,N],[13,"CoarseTimer","","Timer too coarse to use as an entropy source.",43,N],[13,"NotMonotonic","","Timer is not monotonically increasing.",43,N],[13,"TinyVariantions","","Variations of deltas of time too small.",43,N],[13,"TooManyStuck","","Too many stuck results (indicating no added entropy).",43,N],[0,"adapter","","Wrappers / adapters forming RNGs",N,N],[3,"ReadRng","rand::rngs::adapter","An RNG that reads random bytes straight from any type supporting `std::io::Read`, for example files.",N,N],[3,"ReseedingRng","","A wrapper around any PRNG which reseeds the underlying PRNG after it has generated a certain number of random bytes.",N,N],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new `ReadRng` from a `Read`.",44,[[["r"]],["readrng"]]],[11,"next_u32","","",44,[[["self"]],["u32"]]],[11,"next_u64","","",44,[[["self"]],["u64"]]],[11,"fill_bytes","","",44,N],[11,"try_fill_bytes","","",44,N],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new `ReseedingRng` with the given parameters.",45,[[["r"],["u64"],["rsdr"]],["self"]]],[11,"reseed","","Reseed the internal PRNG.",45,[[["self"]],["result",["error"]]]],[11,"next_u32","","",45,[[["self"]],["u32"]]],[11,"next_u64","","",45,[[["self"]],["u64"]]],[11,"fill_bytes","","",45,N],[11,"try_fill_bytes","","",45,N],[11,"clone","","",45,[[["self"]],["reseedingrng"]]],[11,"fmt","rand::rngs","",46,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new `EntropyRng`.",46,[[],["self"]]],[11,"default","","",46,[[],["self"]]],[11,"next_u32","","",46,[[["self"]],["u32"]]],[11,"next_u64","","",46,[[["self"]],["u64"]]],[11,"fill_bytes","","",46,N],[11,"try_fill_bytes","","",46,N],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"clone","","",47,[[["self"]],["jitterrng"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"clone","","",43,[[["self"]],["timererror"]]],[11,"eq","","",43,[[["self"],["timererror"]],["bool"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"description","","",43,[[["self"]],["str"]]],[11,"from","rand","",3,[[["timererror"]],["error"]]],[11,"new","rand::rngs","Create a new `JitterRng`. Makes use of `std::time` for a timer, or a platform-specific function with higher accuracy if necessary and available.",47,[[],["result",["jitterrng","timererror"]]]],[11,"new_with_timer","","Create a new `JitterRng`. A custom timer can be supplied, making it possible to use `JitterRng` in `no_std` environments.",47,N],[11,"set_rounds","","Configures how many rounds are used to generate each 64-bit value. This must be greater than zero, and has a big impact on performance and output quality.",47,[[["self"],["u8"]]]],[11,"test_timer","","Basic quality tests on the timer, by measuring CPU timing jitter a few hundred times.",47,[[["self"]],["result",["u8","timererror"]]]],[11,"timer_stats","","Statistical test: return the timer delta of one normal run of the `JitterRng` entropy collector.",47,[[["self"],["bool"]],["i64"]]],[11,"next_u32","","",47,[[["self"]],["u32"]]],[11,"next_u64","","",47,[[["self"]],["u64"]]],[11,"fill_bytes","","",47,N],[11,"try_fill_bytes","","",47,N],[0,"mock","","Mock random number generator",N,N],[3,"StepRng","rand::rngs::mock","A simple implementation of `RngCore` for testing purposes.",N,N],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"clone","","",48,[[["self"]],["steprng"]]],[11,"new","","Create a `StepRng`, yielding an arithmetic sequence starting with `initial` and incremented by `increment` each time.",48,[[["u64"],["u64"]],["self"]]],[11,"next_u32","","",48,[[["self"]],["u32"]]],[11,"next_u64","","",48,[[["self"]],["u64"]]],[11,"fill_bytes","","",48,N],[11,"try_fill_bytes","","",48,N],[11,"clone","rand::rngs","",49,[[["self"]],["smallrng"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"next_u32","","",49,[[["self"]],["u32"]]],[11,"next_u64","","",49,[[["self"]],["u64"]]],[11,"fill_bytes","","",49,N],[11,"try_fill_bytes","","",49,N],[11,"from_seed","","",49,N],[11,"from_rng","","",49,[[["r"]],["result",["error"]]]],[11,"clone","","",50,[[["self"]],["stdrng"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"next_u32","","",50,[[["self"]],["u32"]]],[11,"next_u64","","",50,[[["self"]],["u64"]]],[11,"fill_bytes","","",50,N],[11,"try_fill_bytes","","",50,N],[11,"from_seed","","",50,N],[11,"from_rng","","",50,[[["r"]],["result",["error"]]]],[11,"clone","","",51,[[["self"]],["threadrng"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"next_u32","","",51,[[["self"]],["u32"]]],[11,"next_u64","","",51,[[["self"]],["u64"]]],[11,"fill_bytes","","",51,N],[11,"try_fill_bytes","","",51,N],[11,"clone","","",52,[[["self"]],["osrng"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new `OsRng`.",52,[[],["result",["osrng","error"]]]],[11,"next_u32","","",52,[[["self"]],["u32"]]],[11,"next_u64","","",52,[[["self"]],["u64"]]],[11,"fill_bytes","","",52,N],[11,"try_fill_bytes","","",52,N],[0,"seq","rand","Functions for randomly accessing and sampling sequences.",N,N],[5,"sample_iter","rand::seq","Randomly sample `amount` elements from a finite iterator.",N,[[["r"],["i"],["usize"]],["result",["vec","vec"]]]],[5,"sample_slice","","Randomly sample exactly `amount` values from `slice`.",N,N],[5,"sample_slice_ref","","Randomly sample exactly `amount` references from `slice`.",N,N],[5,"sample_indices","","Randomly sample exactly `amount` indices from `0..length`.",N,[[["r"],["usize"],["usize"]],["vec",["usize"]]]],[8,"Rand","rand","A type that can be randomly generated using an [`Rng`].",N,N],[10,"rand","","Generates a random instance of this type using the specified source of randomness.",53,[[["r"]],["self"]]],[8,"Rng","","An automatically-implemented extension trait on [`RngCore`] providing high-level generic methods for sampling values and other convenience methods.",N,N],[11,"gen","","Return a random value supporting the [`Standard`] distribution.",54,[[["self"]],["t"]]],[11,"gen_range","","Generate a random value in the range [`low`, `high`), i.e. inclusive of `low` and exclusive of `high`.",54,[[["self"],["t"],["t"]],["t"]]],[11,"sample","","Sample a new value, using the given distribution.",54,[[["self"],["d"]],["t"]]],[11,"sample_iter","","Create an iterator that generates values using the given distribution.",54,[[["self"],["d"]],["distiter"]]],[11,"fill","","Fill `dest` entirely with random bytes (uniform value distribution), where `dest` is any type supporting [`AsByteSliceMut`], namely slices and arrays over primitive integer types (`i8`, `i16`, `u32`, etc.).",54,[[["self"],["t"]]]],[11,"try_fill","","Fill `dest` entirely with random bytes (uniform value distribution), where `dest` is any type supporting [`AsByteSliceMut`], namely slices and arrays over primitive integer types (`i8`, `i16`, `u32`, etc.).",54,[[["self"],["t"]],["result",["error"]]]],[11,"gen_bool","","Return a bool with a probability `p` of being true.",54,[[["self"],["f64"]],["bool"]]],[11,"choose","","Return a random element from `values`.",54,N],[11,"choose_mut","","Return a mutable pointer to a random element from `values`.",54,N],[11,"shuffle","","Shuffle a mutable slice in place.",54,N],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly generated items.",54,[[["self"]],["generator"]]],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",54,[[["self"],["u32"]],["bool"]]],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",54,[[["self"]],["asciigenerator"]]],[8,"AsByteSliceMut","","Trait for casting types to byte slices",N,N],[10,"as_byte_slice_mut","","Return a mutable reference to self as a byte slice",55,N],[10,"to_le","","Call `to_le` on each element (i.e. byte-swap on Big Endian platforms).",55,[[["self"]]]],[8,"FromEntropy","","A convenience extension to [`SeedableRng`] allowing construction from fresh entropy. This trait is automatically implemented for any PRNG implementing [`SeedableRng`] and is not intended to be implemented by users.",N,N],[10,"from_entropy","","Creates a new instance, automatically seeded with fresh entropy.",56,[[],["self"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"next","","",57,[[["self"]],["option"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"next","","",58,[[["self"]],["option",["char"]]]],[11,"clone","","",2,[[["self"]],["errorkind"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"cause","","",3,[[["self"]],["option",["error"]]]],[11,"read","","",0,N],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",2,[[["self"],["errorkind"]],["bool"]]],[11,"should_retry","","True if this kind of error may resolve itself on retry.",2,[[["self"]],["bool"]]],[11,"should_wait","","True if we should retry but wait before retrying",2,[[["self"]],["bool"]]],[11,"description","","A description of this error kind",2,[[["self"]],["str"]]],[11,"new","","Create a new instance, with specified kind and a message.",3,[[["errorkind"],["str"]],["error"]]],[11,"with_cause","","Create a new instance, with specified kind, message, and a chained cause.",3,[[["errorkind"],["str"],["e"]],["error"]]],[11,"take_cause","","Take the cause, if any. This allows the embedded cause to be extracted. This uses `Option::take`, leaving `self` with no cause.",3,[[["self"]],["option",["box"]]]]],"paths":[[8,"RngCore"],[8,"SeedableRng"],[4,"ErrorKind"],[3,"Error"],[3,"Weighted"],[8,"SampleUniform"],[8,"UniformSampler"],[3,"Uniform"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[3,"Pareto"],[3,"Poisson"],[3,"Binomial"],[3,"Bernoulli"],[3,"Cauchy"],[3,"OpenClosed01"],[3,"Open01"],[3,"Standard"],[3,"Alphanumeric"],[3,"WeightedChoice"],[8,"Sample"],[8,"IndependentSample"],[8,"Distribution"],[3,"DistIter"],[3,"ChaChaRng"],[3,"ChaChaCore"],[3,"Hc128Rng"],[3,"Hc128Core"],[3,"IsaacRng"],[3,"IsaacCore"],[3,"Isaac64Rng"],[3,"Isaac64Core"],[3,"XorShiftRng"],[4,"TimerError"],[3,"ReadRng"],[3,"ReseedingRng"],[3,"EntropyRng"],[3,"JitterRng"],[3,"StepRng"],[3,"SmallRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"OsRng"],[8,"Rand"],[8,"Rng"],[8,"AsByteSliceMut"],[8,"FromEntropy"],[3,"Generator"],[3,"AsciiGenerator"]]};
searchIndex["rand_core"]={"doc":"Random number generation traits","items":[[3,"Error","rand_core","Error type of random number generators",N,N],[12,"kind","","The error kind",0,N],[12,"msg","","The error message",0,N],[4,"ErrorKind","","Error kind which can be matched over.",N,N],[13,"Unavailable","","Feature is not available; not recoverable.",1,N],[13,"Unexpected","","General failure; there may be a chance of recovery on retry.",1,N],[13,"Transient","","A transient failure which likely can be resolved or worked around.",1,N],[13,"NotReady","","Not ready yet: recommended to try again a little later.",1,N],[11,"eq","","",1,[[["self"],["errorkind"]],["bool"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",1,[[["self"]],["errorkind"]]],[11,"should_retry","","True if this kind of error may resolve itself on retry.",1,[[["self"]],["bool"]]],[11,"should_wait","","True if we should retry but wait before retrying",1,[[["self"]],["bool"]]],[11,"description","","A description of this error kind",1,[[["self"]],["str"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new instance, with specified kind and a message.",0,[[["errorkind"],["str"]],["self"]]],[11,"with_cause","","Create a new instance, with specified kind, message, and a chained cause.",0,[[["errorkind"],["str"],["e"]],["self"]]],[11,"take_cause","","Take the cause, if any. This allows the embedded cause to be extracted. This uses `Option::take`, leaving `self` with no cause.",0,[[["self"]],["option",["box"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],["option",["stderror"]]]],[0,"block","","The `BlockRngCore` trait and implementation helpers",N,N],[3,"BlockRng","rand_core::block","A wrapper type implementing [`RngCore`] for some type implementing [`BlockRngCore`] with `u32` array buffer; i.e. this can be used to implement a full RNG from just a `generate` function.",N,N],[12,"core","","The core part of the RNG, implementing the `generate` function.",2,N],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type implementing [`BlockRngCore`] with `u64` array buffer; i.e. this can be used to implement a full RNG from just a `generate` function.",N,N],[12,"core","","The core part of the RNG, implementing the `generate` function.",3,N],[8,"BlockRngCore","","A trait for RNGs which do not generate random numbers individually, but in blocks (typically `[u32; N]`). This technique is commonly used by cryptographic RNGs to improve performance.",N,N],[16,"Item","","Results element type, e.g. `u32`.",4,N],[16,"Results","","Results type. This is the 'block' an RNG implementing `BlockRngCore` generates, which will usually be an array like `[u32; 16]`.",4,N],[10,"generate","","Generate a new block of results.",4,N],[11,"clone","","",2,[[["self"]],["blockrng"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing `BlockRngCore`. Results will be generated on first use.",2,[[["r"]],["blockrng"]]],[11,"index","","Get the index into the result buffer.",2,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a new set of results to be generated on next use.",2,[[["self"]]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the index to the given value.",2,[[["self"],["usize"]]]],[11,"next_u32","","",2,[[["self"]],["u32"]]],[11,"next_u64","","",2,[[["self"]],["u64"]]],[11,"fill_bytes","","",2,N],[11,"try_fill_bytes","","",2,N],[11,"from_seed","","",2,N],[11,"from_rng","","",2,[[["s"]],["result",["error"]]]],[11,"clone","","",3,[[["self"]],["blockrng64"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing `BlockRngCore`. Results will be generated on first use.",3,[[["r"]],["blockrng64"]]],[11,"index","","Get the index into the result buffer.",3,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a new set of results to be generated on next use.",3,[[["self"]]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the index to the given value.",3,[[["self"],["usize"]]]],[11,"next_u32","","",3,[[["self"]],["u32"]]],[11,"next_u64","","",3,[[["self"]],["u64"]]],[11,"fill_bytes","","",3,N],[11,"try_fill_bytes","","",3,N],[11,"from_seed","","",3,N],[11,"from_rng","","",3,[[["s"]],["result",["error"]]]],[0,"impls","rand_core","Helper functions for implementing `RngCore` functions.",N,N],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",N,[[["r"]],["u64"]]],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`, little-endian order.",N,N],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output buffer of a block based RNG.",N,N],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output buffer of a block based RNG.",N,N],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",N,[[["r"]],["u32"]]],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",N,[[["r"]],["u64"]]],[0,"le","rand_core","Little-Endian utilities",N,N],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`. Borrowed from the `byteorder` crate.",N,N],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`. Borrowed from the `byteorder` crate.",N,N],[8,"RngCore","rand_core","The core of a random number generator.",N,N],[10,"next_u32","","Return the next random `u32`.",5,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",5,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",5,N],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",5,N],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or [`BlockRngCore`] implementation is supposed to be cryptographically secure.",N,N],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",N,N],[16,"Seed","","Seed type, which is restricted to types mutably-dereferencable as `u8` arrays (we recommend `[u8; N]` for some `N`).",6,N],[10,"from_seed","","Create a new PRNG using the given seed.",6,N],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",6,[[["r"]],["result",["error"]]]],[11,"read","","",5,N]],"paths":[[3,"Error"],[4,"ErrorKind"],[3,"BlockRng"],[3,"BlockRng64"],[8,"BlockRngCore"],[8,"RngCore"],[8,"SeedableRng"]]};
searchIndex["regex"]={"doc":"This crate provides a library for parsing, compiling, and executing regular expressions. Its syntax is similar to Perl-style regular expressions, but lacks a few features like look around and backreferences. In exchange, all searches execute in linear time with respect to the size of the regular expression and search text.","items":[[3,"RegexBuilder","regex","A configurable builder for a regular expression.",N,N],[3,"RegexSetBuilder","","A configurable builder for a set of regular expressions.",N,N],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions in a single scan.",N,N],[3,"SetMatches","","A set of matches returned by a regex set.",N,N],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",N,N],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex set.",N,N],[3,"Regex","","A compiled regular expression for matching Unicode strings.",N,N],[3,"Match","","Match represents a single match of a regex in a haystack.",N,N],[3,"Captures","","Captures represents a group of captured strings for a single match.",N,N],[3,"CaptureNames","","An iterator over the names of all possible captures.",N,N],[3,"Matches","","An iterator over all non-overlapping matches for a particular string.",N,N],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups matching a particular regular expression.",N,N],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order in which they appear in the regex.",N,N],[3,"ReplacerRef","","By-reference adaptor for a `Replacer`",N,N],[3,"NoExpand","","`NoExpand` indicates literal string replacement.",N,N],[12,"0","","",0,N],[3,"Split","","Yields all substrings delimited by a regular expression match.",N,N],[3,"SplitN","","Yields at most `N` substrings delimited by a regular expression match.",N,N],[4,"Error","","An error that occurred during parsing or compiling a regular expression.",N,N],[13,"Syntax","","A syntax error.",1,N],[13,"CompiledTooBig","","The compiled program exceeded the set size limit. The argument is the size limit imposed.",1,N],[5,"escape","","Escapes all regular expression meta characters in `text`.",N,[[["str"]],["string"]]],[0,"bytes","","Match regular expressions on arbitrary bytes.",N,N],[3,"RegexBuilder","regex::bytes","A configurable builder for a regular expression.",N,N],[3,"RegexSetBuilder","","A configurable builder for a set of regular expressions.",N,N],[3,"Match","","Match represents a single match of a regex in a haystack.",N,N],[3,"Regex","","A compiled regular expression for matching arbitrary bytes.",N,N],[3,"Matches","","An iterator over all non-overlapping matches for a particular string.",N,N],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups matching a particular regular expression.",N,N],[3,"Split","","Yields all substrings delimited by a regular expression match.",N,N],[3,"SplitN","","Yields at most `N` substrings delimited by a regular expression match.",N,N],[3,"CaptureNames","","An iterator over the names of all possible captures.",N,N],[3,"Captures","","Captures represents a group of captured byte strings for a single match.",N,N],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order in which they appear in the regex.",N,N],[3,"ReplacerRef","","By-reference adaptor for a `Replacer`",N,N],[3,"NoExpand","","`NoExpand` indicates literal byte string replacement.",N,N],[12,"0","","",2,N],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions in a single scan.",N,N],[3,"SetMatches","","A set of matches returned by a regex set.",N,N],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",N,N],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex set.",N,N],[8,"Replacer","","Replacer describes types that can be used to replace matches in a byte string.",N,N],[10,"replace_append","","Appends text to `dst` to replace the current match.",3,[[["self"],["captures"],["vec"]]]],[11,"no_expansion","","Return a fixed unchanging replacement byte string.",3,[[["self"]],["option",["cow"]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",3,[[["self"]],["replacerref"]]],[11,"clone","regex","",1,[[["self"]],["error"]]],[11,"eq","","",1,[[["self"],["error"]],["bool"]]],[11,"ne","","",1,[[["self"],["error"]],["bool"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"cause","","",1,[[["self"]],["option",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"from","","",1,[[["error"]],["error"]]],[11,"new","regex::bytes","Create a new regular expression builder with the given pattern.",4,[[["str"]],["regexbuilder"]]],[11,"build","","Consume the builder and compile the regular expression.",4,[[["self"]],["result",["regex","error"]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in `.` matches anything when `s` is set and matches anything except for new line when it is not set (the default).",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular expression.",4,[[["self"],["usize"]],["regexbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",4,[[["self"],["usize"]],["regexbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",4,[[["self"],["u32"]],["regexbuilder"]]],[11,"new","regex","Create a new regular expression builder with the given pattern.",5,[[["str"]],["regexbuilder"]]],[11,"build","","Consume the builder and compile the regular expression.",5,[[["self"]],["result",["regex","error"]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in `.` matches anything when `s` is set and matches anything except for new line when it is not set (the default).",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular expression.",5,[[["self"],["usize"]],["regexbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",5,[[["self"],["usize"]],["regexbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",5,[[["self"],["u32"]],["regexbuilder"]]],[11,"new","regex::bytes","Create a new regular expression builder with the given pattern.",6,[[["i"]],["regexsetbuilder"]]],[11,"build","","Consume the builder and compile the regular expressions into a set.",6,[[["self"]],["result",["regexset","error"]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in `.` matches anything when `s` is set and matches anything except for new line when it is not set (the default).",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular expression.",6,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",6,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",6,[[["self"],["u32"]],["regexsetbuilder"]]],[11,"new","regex","Create a new regular expression builder with the given pattern.",7,[[["i"]],["regexsetbuilder"]]],[11,"build","","Consume the builder and compile the regular expressions into a set.",7,[[["self"]],["result",["regexset","error"]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in `.` matches anything when `s` is set and matches anything except for new line when it is not set (the default).",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular expression.",7,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",7,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",7,[[["self"],["u32"]],["regexsetbuilder"]]],[11,"no_expansion","regex::bytes","Return a fixed unchanging replacement byte string.",3,[[["self"]],["option",["cow"]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",3,[[["self"]],["replacerref"]]],[11,"clone","","",8,[[["self"]],["match"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"eq","","",8,[[["self"],["match"]],["bool"]]],[11,"ne","","",8,[[["self"],["match"]],["bool"]]],[11,"start","","Returns the starting byte offset of the match in the haystack.",8,[[["self"]],["usize"]]],[11,"end","","Returns the ending byte offset of the match in the haystack.",8,[[["self"]],["usize"]]],[11,"as_bytes","","Returns the matched text.",8,N],[11,"clone","","",9,[[["self"]],["regex"]]],[11,"fmt","","Shows the original regular expression.",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","Shows the original regular expression.",9,[[["self"],["formatter"]],["result"]]],[11,"from_str","","Attempts to parse a string into a regular expression",9,[[["str"]],["result",["regex","error"]]]],[11,"new","","Compiles a regular expression. Once compiled, it can be used repeatedly to search, split or replace text in a string.",9,[[["str"]],["result",["regex","error"]]]],[11,"is_match","","Returns true if and only if the regex matches the string given.",9,N],[11,"find","","Returns the start and end byte range of the leftmost-first match in `text`. If no match exists, then `None` is returned.",9,N],[11,"find_iter","","Returns an iterator for each successive non-overlapping match in `text`, returning the start and end byte indices with respect to `text`.",9,N],[11,"captures","","Returns the capture groups corresponding to the leftmost-first match in `text`. Capture group `0` always corresponds to the entire match. If no match is found, then `None` is returned.",9,N],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture groups matched in `text`. This is operationally the same as `find_iter`, except it yields information about capturing group matches.",9,N],[11,"split","","Returns an iterator of substrings of `text` delimited by a match of the regular expression. Namely, each element of the iterator corresponds to text that isn't matched by the regular expression.",9,N],[11,"splitn","","Returns an iterator of at most `limit` substrings of `text` delimited by a match of the regular expression. (A `limit` of `0` will return no substrings.) Namely, each element of the iterator corresponds to text that isn't matched by the regular expression. The remainder of the string that is not split will be the last element in the iterator.",9,N],[11,"replace","","Replaces the leftmost-first match with the replacement provided. The replacement can be a regular byte string (where `$N` and `$name` are expanded to match capture groups) or a function that takes the matches' `Captures` and returns the replaced byte string.",9,N],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the replacement provided. This is the same as calling `replacen` with `limit` set to `0`.",9,N],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text` with the replacement provided. If `limit` is 0, then all non-overlapping matches are replaced.",9,N],[11,"shortest_match","","Returns the end location of a match in the text given.",9,N],[11,"as_str","","Returns the original string of this regex.",9,[[["self"]],["str"]]],[11,"capture_names","","Returns an iterator over the capture names.",9,[[["self"]],["capturenames"]]],[11,"captures_len","","Returns the number of captures.",9,[[["self"]],["usize"]]],[11,"next","","",10,[[["self"]],["option",["match"]]]],[11,"next","","",11,[[["self"]],["option",["captures"]]]],[11,"next","","",12,[[["self"]],["option"]]],[11,"next","","",13,[[["self"]],["option"]]],[11,"next","","",14,[[["self"]],["option",["option"]]]],[11,"size_hint","","",14,N],[11,"get","","Returns the match associated with the capture group at index `i`. If `i` does not correspond to a capture group, or if the capture group did not participate in the match, then `None` is returned.",15,[[["self"],["usize"]],["option",["match"]]]],[11,"name","","Returns the match for the capture group named `name`. If `name` isn't a valid capture group or didn't match anything, then `None` is returned.",15,[[["self"],["str"]],["option",["match"]]]],[11,"iter","","An iterator that yields all capturing matches in the order in which they appear in the regex. If a particular capture group didn't participate in the match, then `None` is yielded for that capture.",15,[[["self"]],["subcapturematches"]]],[11,"expand","","Expands all instances of `$name` in `replacement` to the corresponding capture group `name`, and writes them to the `dst` buffer given.",15,N],[11,"len","","Returns the number of captured groups.",15,[[["self"]],["usize"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"index","","",15,N],[11,"index","","",15,N],[11,"next","","",16,[[["self"]],["option",["option"]]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"replace_append","","",17,[[["self"],["captures"],["vec"]]]],[11,"no_expansion","","",17,[[["self"]],["option",["cow"]]]],[11,"replace_append","","",2,[[["self"],["captures"],["vec"]]]],[11,"no_expansion","","",2,[[["self"]],["option",["cow"]]]],[11,"clone","regex","",18,[[["self"]],["regexset"]]],[11,"new","","Create a new regex set with the given regular expressions.",18,[[["i"]],["result",["regexset","error"]]]],[11,"is_match","","Returns true if and only if one of the regexes in this set matches the text given.",18,[[["self"],["str"]],["bool"]]],[11,"matches","","Returns the set of regular expressions that match in the given text.",18,[[["self"],["str"]],["setmatches"]]],[11,"len","","Returns the total number of regular expressions in this set.",18,[[["self"]],["usize"]]],[11,"clone","","",19,[[["self"]],["setmatches"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"matched_any","","Whether this set contains any matches.",19,[[["self"]],["bool"]]],[11,"matched","","Whether the regex at the given index matched.",19,[[["self"],["usize"]],["bool"]]],[11,"len","","The total number of regexes in the set that created these matches.",19,[[["self"]],["usize"]]],[11,"iter","","Returns an iterator over indexes in the regex that matched.",19,[[["self"]],["setmatchesiter"]]],[11,"into_iter","","",19,N],[11,"next","","",20,[[["self"]],["option",["usize"]]]],[11,"next_back","","",20,[[["self"]],["option",["usize"]]]],[11,"clone","","",21,[[["self"]],["setmatchesiter"]]],[11,"next","","",21,[[["self"]],["option",["usize"]]]],[11,"next_back","","",21,[[["self"]],["option",["usize"]]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"clone","regex::bytes","",22,[[["self"]],["regexset"]]],[11,"new","","Create a new regex set with the given regular expressions.",22,[[["i"]],["result",["regexset","error"]]]],[11,"is_match","","Returns true if and only if one of the regexes in this set matches the text given.",22,N],[11,"matches","","Returns the set of regular expressions that match in the given text.",22,N],[11,"len","","Returns the total number of regular expressions in this set.",22,[[["self"]],["usize"]]],[11,"clone","","",23,[[["self"]],["setmatches"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"matched_any","","Whether this set contains any matches.",23,[[["self"]],["bool"]]],[11,"matched","","Whether the regex at the given index matched.",23,[[["self"],["usize"]],["bool"]]],[11,"len","","The total number of regexes in the set that created these matches.",23,[[["self"]],["usize"]]],[11,"iter","","Returns an iterator over indexes in the regex that matched.",23,[[["self"]],["setmatchesiter"]]],[11,"into_iter","","",23,N],[11,"next","","",24,[[["self"]],["option",["usize"]]]],[11,"next_back","","",24,[[["self"]],["option",["usize"]]]],[11,"clone","","",25,[[["self"]],["setmatchesiter"]]],[11,"next","","",25,[[["self"]],["option",["usize"]]]],[11,"next_back","","",25,[[["self"]],["option",["usize"]]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"clone","regex","",26,[[["self"]],["match"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"eq","","",26,[[["self"],["match"]],["bool"]]],[11,"ne","","",26,[[["self"],["match"]],["bool"]]],[11,"start","","Returns the starting byte offset of the match in the haystack.",26,[[["self"]],["usize"]]],[11,"end","","Returns the ending byte offset of the match in the haystack.",26,[[["self"]],["usize"]]],[11,"as_str","","Returns the matched text.",26,[[["self"]],["str"]]],[11,"clone","","",27,[[["self"]],["regex"]]],[11,"fmt","","Shows the original regular expression.",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","Shows the original regular expression.",27,[[["self"],["formatter"]],["result"]]],[11,"from_str","","Attempts to parse a string into a regular expression",27,[[["str"]],["result",["regex","error"]]]],[11,"new","","Compiles a regular expression. Once compiled, it can be used repeatedly to search, split or replace text in a string.",27,[[["str"]],["result",["regex","error"]]]],[11,"is_match","","Returns true if and only if the regex matches the string given.",27,[[["self"],["str"]],["bool"]]],[11,"find","","Returns the start and end byte range of the leftmost-first match in `text`. If no match exists, then `None` is returned.",27,[[["self"],["str"]],["option",["match"]]]],[11,"find_iter","","Returns an iterator for each successive non-overlapping match in `text`, returning the start and end byte indices with respect to `text`.",27,[[["self"],["str"]],["matches"]]],[11,"captures","","Returns the capture groups corresponding to the leftmost-first match in `text`. Capture group `0` always corresponds to the entire match. If no match is found, then `None` is returned.",27,[[["self"],["str"]],["option",["captures"]]]],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture groups matched in `text`. This is operationally the same as `find_iter`, except it yields information about capturing group matches.",27,[[["self"],["str"]],["capturematches"]]],[11,"split","","Returns an iterator of substrings of `text` delimited by a match of the regular expression. Namely, each element of the iterator corresponds to text that isn't matched by the regular expression.",27,[[["self"],["str"]],["split"]]],[11,"splitn","","Returns an iterator of at most `limit` substrings of `text` delimited by a match of the regular expression. (A `limit` of `0` will return no substrings.) Namely, each element of the iterator corresponds to text that isn't matched by the regular expression. The remainder of the string that is not split will be the last element in the iterator.",27,[[["self"],["str"],["usize"]],["splitn"]]],[11,"replace","","Replaces the leftmost-first match with the replacement provided. The replacement can be a regular string (where `$N` and `$name` are expanded to match capture groups) or a function that takes the matches' `Captures` and returns the replaced string.",27,[[["self"],["str"],["r"]],["cow",["str"]]]],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the replacement provided. This is the same as calling `replacen` with `limit` set to `0`.",27,[[["self"],["str"],["r"]],["cow",["str"]]]],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text` with the replacement provided. If `limit` is 0, then all non-overlapping matches are replaced.",27,[[["self"],["str"],["usize"],["r"]],["cow",["str"]]]],[11,"shortest_match","","Returns the end location of a match in the text given.",27,[[["self"],["str"]],["option",["usize"]]]],[11,"as_str","","Returns the original string of this regex.",27,[[["self"]],["str"]]],[11,"capture_names","","Returns an iterator over the capture names.",27,[[["self"]],["capturenames"]]],[11,"captures_len","","Returns the number of captures.",27,[[["self"]],["usize"]]],[11,"next","","",28,[[["self"]],["option",["option"]]]],[11,"size_hint","","",28,N],[11,"next","","",29,[[["self"]],["option",["str"]]]],[11,"next","","",30,[[["self"]],["option",["str"]]]],[11,"get","","Returns the match associated with the capture group at index `i`. If `i` does not correspond to a capture group, or if the capture group did not participate in the match, then `None` is returned.",31,[[["self"],["usize"]],["option",["match"]]]],[11,"name","","Returns the match for the capture group named `name`. If `name` isn't a valid capture group or didn't match anything, then `None` is returned.",31,[[["self"],["str"]],["option",["match"]]]],[11,"iter","","An iterator that yields all capturing matches in the order in which they appear in the regex. If a particular capture group didn't participate in the match, then `None` is yielded for that capture.",31,[[["self"]],["subcapturematches"]]],[11,"expand","","Expands all instances of `$name` in `replacement` to the corresponding capture group `name`, and writes them to the `dst` buffer given.",31,[[["self"],["str"],["string"]]]],[11,"len","","Returns the number of captured groups.",31,[[["self"]],["usize"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"index","","",31,[[["self"],["usize"]],["str"]]],[11,"index","","",31,[[["self"],["str"]],["str"]]],[11,"next","","",32,[[["self"]],["option",["option"]]]],[11,"next","","",33,[[["self"]],["option",["captures"]]]],[11,"next","","",34,[[["self"]],["option",["match"]]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"replace_append","","",35,[[["self"],["captures"],["string"]]]],[11,"no_expansion","","",35,[[["self"]],["option",["cow"]]]],[11,"replace_append","","",0,[[["self"],["captures"],["string"]]]],[11,"no_expansion","","",0,[[["self"]],["option",["cow"]]]],[8,"Replacer","","Replacer describes types that can be used to replace matches in a string.",N,N],[10,"replace_append","","Appends text to `dst` to replace the current match.",36,[[["self"],["captures"],["string"]]]],[11,"no_expansion","","Return a fixed unchanging replacement string.",36,[[["self"]],["option",["cow"]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",36,[[["self"]],["replacerref"]]],[11,"no_expansion","","Return a fixed unchanging replacement string.",36,[[["self"]],["option",["cow"]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",36,[[["self"]],["replacerref"]]]],"paths":[[3,"NoExpand"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,"RegexBuilder"],[3,"RegexBuilder"],[3,"RegexSetBuilder"],[3,"RegexSetBuilder"],[3,"Match"],[3,"Regex"],[3,"Matches"],[3,"CaptureMatches"],[3,"Split"],[3,"SplitN"],[3,"CaptureNames"],[3,"Captures"],[3,"SubCaptureMatches"],[3,"ReplacerRef"],[3,"RegexSet"],[3,"SetMatches"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"RegexSet"],[3,"SetMatches"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"Match"],[3,"Regex"],[3,"CaptureNames"],[3,"Split"],[3,"SplitN"],[3,"Captures"],[3,"SubCaptureMatches"],[3,"CaptureMatches"],[3,"Matches"],[3,"ReplacerRef"],[8,"Replacer"]]};
searchIndex["regex_syntax"]={"doc":"This crate provides a robust regular expression parser.","items":[[3,"Parser","regex_syntax","A convenience parser for regular expressions.",N,N],[3,"ParserBuilder","","A builder for a regular expression parser.",N,N],[4,"Error","","This error type encompasses any error that can be returned by this crate.",N,N],[13,"Parse","","An error that occurred while translating concrete syntax into abstract syntax (AST).",0,N],[13,"Translate","","An error that occurred while translating abstract syntax into a high level intermediate representation (HIR).",0,N],[5,"escape","","Escapes all regular expression meta characters in `text`.",N,[[["str"]],["string"]]],[5,"escape_into","","Escapes all meta characters in `text` and writes the result into `buf`.",N,[[["str"],["string"]]]],[5,"is_meta_character","","Returns true if the give character has significance in a regex.",N,[[["char"]],["bool"]]],[5,"is_word_character","","Returns true if and only if the given character is a Unicode word character.",N,[[["char"]],["bool"]]],[5,"is_word_byte","","Returns true if and only if the given character is an ASCII word character.",N,[[["u8"]],["bool"]]],[0,"ast","","Defines an abstract syntax for regular expressions.",N,N],[3,"Error","regex_syntax::ast","An error that occurred while parsing a regular expression into an abstract syntax tree.",N,N],[3,"Span","","Span represents the position information of a single AST item.",N,N],[12,"start","","The start byte offset.",1,N],[12,"end","","The end byte offset.",1,N],[3,"Position","","A single position in a regular expression.",N,N],[12,"offset","","The absolute offset of this position, starting at `0` from the beginning of the regular expression pattern string.",2,N],[12,"line","","The line number, starting at `1`.",2,N],[12,"column","","The approximate column number, starting at `1`.",2,N],[3,"WithComments","","An abstract syntax tree for a singular expression along with comments found.",N,N],[12,"ast","","The actual ast.",3,N],[12,"comments","","All comments found in the original regular expression.",3,N],[3,"Comment","","A comment from a regular expression with an associated span.",N,N],[12,"span","","The span of this comment, including the beginning `#` and ending `\\n`.",4,N],[12,"comment","","The comment text, starting with the first character following the `#` and ending with the last character preceding the `\\n`.",4,N],[3,"Alternation","","An alternation of regular expressions.",N,N],[12,"span","","The span of this alternation.",5,N],[12,"asts","","The alternate regular expressions.",5,N],[3,"Concat","","A concatenation of regular expressions.",N,N],[12,"span","","The span of this concatenation.",6,N],[12,"asts","","The concatenation regular expressions.",6,N],[3,"Literal","","A single literal expression.",N,N],[12,"span","","The span of this literal.",7,N],[12,"kind","","The kind of this literal.",7,N],[12,"c","","The Unicode scalar value corresponding to this literal.",7,N],[3,"ClassPerl","","A Perl character class.",N,N],[12,"span","","The span of this class.",8,N],[12,"kind","","The kind of Perl class.",8,N],[12,"negated","","Whether the class is negated or not. e.g., `\\d` is not negated but `\\D` is.",8,N],[3,"ClassAscii","","An ASCII character class.",N,N],[12,"span","","The span of this class.",9,N],[12,"kind","","The kind of ASCII class.",9,N],[12,"negated","","Whether the class is negated or not. e.g., `[[:alpha:]]` is not negated but `[[:^alpha:]]` is.",9,N],[3,"ClassUnicode","","A Unicode character class.",N,N],[12,"span","","The span of this class.",10,N],[12,"negated","","Whether this class is negated or not.",10,N],[12,"kind","","The kind of Unicode class.",10,N],[3,"ClassBracketed","","A bracketed character class, e.g., `[a-z0-9]`.",N,N],[12,"span","","The span of this class.",11,N],[12,"negated","","Whether this class is negated or not. e.g., `[a]` is not negated but `[^a]` is.",11,N],[12,"kind","","The type of this set. A set is either a normal union of things, e.g., `[abc]` or a result of applying set operations, e.g., `[\\pL--c]`.",11,N],[3,"ClassSetRange","","A single character class range in a set.",N,N],[12,"span","","The span of this range.",12,N],[12,"start","","The start of this range.",12,N],[12,"end","","The end of this range.",12,N],[3,"ClassSetUnion","","A union of items inside a character class set.",N,N],[12,"span","","The span of the items in this operation. e.g., the `a-z0-9` in `[^a-z0-9]`",13,N],[12,"items","","The sequence of items that make up this union.",13,N],[3,"ClassSetBinaryOp","","A Unicode character class set operation.",N,N],[12,"span","","The span of this operation. e.g., the `a-z--[h-p]` in `[a-z--h-p]`.",14,N],[12,"kind","","The type of this set operation.",14,N],[12,"lhs","","The left hand side of the operation.",14,N],[12,"rhs","","The right hand side of the operation.",14,N],[3,"Assertion","","A single zero-width assertion.",N,N],[12,"span","","The span of this assertion.",15,N],[12,"kind","","The assertion kind, e.g., `\\b` or `^`.",15,N],[3,"Repetition","","A repetition operation applied to a regular expression.",N,N],[12,"span","","The span of this operation.",16,N],[12,"op","","The actual operation.",16,N],[12,"greedy","","Whether this operation was applied greedily or not.",16,N],[12,"ast","","The regular expression under repetition.",16,N],[3,"RepetitionOp","","The repetition operator itself.",N,N],[12,"span","","The span of this operator. This includes things like `+`, `*?` and `{m,n}`.",17,N],[12,"kind","","The type of operation.",17,N],[3,"Group","","A grouped regular expression.",N,N],[12,"span","","The span of this group.",18,N],[12,"kind","","The kind of this group.",18,N],[12,"ast","","The regular expression in this group.",18,N],[3,"CaptureName","","A capture name.",N,N],[12,"span","","The span of this capture name.",19,N],[12,"name","","The capture name.",19,N],[12,"index","","The capture index.",19,N],[3,"SetFlags","","A group of flags that is not applied to a particular regular expression.",N,N],[12,"span","","The span of these flags, including the grouping parentheses.",20,N],[12,"flags","","The actual sequence of flags.",20,N],[3,"Flags","","A group of flags.",N,N],[12,"span","","The span of this group of flags.",21,N],[12,"items","","A sequence of flag items. Each item is either a flag or a negation operator.",21,N],[3,"FlagsItem","","A single item in a group of flags.",N,N],[12,"span","","The span of this item.",22,N],[12,"kind","","The kind of this item.",22,N],[4,"ErrorKind","","The type of an error that occurred while building an AST.",N,N],[13,"CaptureLimitExceeded","","The capturing group limit was exceeded.",23,N],[13,"ClassEscapeInvalid","","An invalid escape sequence was found in a character class set.",23,N],[13,"ClassRangeInvalid","","An invalid character class range was found. An invalid range is any range where the start is greater than the end.",23,N],[13,"ClassRangeLiteral","","An invalid range boundary was found in a character class. Range boundaries must be a single literal codepoint, but this error indicates that something else was found, such as a nested class.",23,N],[13,"ClassUnclosed","","An opening `[` was found with no corresponding closing `]`.",23,N],[13,"DecimalEmpty","","An empty decimal number was given where one was expected.",23,N],[13,"DecimalInvalid","","An invalid decimal number was given where one was expected.",23,N],[13,"EscapeHexEmpty","","A bracketed hex literal was empty.",23,N],[13,"EscapeHexInvalid","","A bracketed hex literal did not correspond to a Unicode scalar value.",23,N],[13,"EscapeHexInvalidDigit","","An invalid hexadecimal digit was found.",23,N],[13,"EscapeUnexpectedEof","","EOF was found before an escape sequence was completed.",23,N],[13,"EscapeUnrecognized","","An unrecognized escape sequence.",23,N],[13,"FlagDanglingNegation","","A dangling negation was used when setting flags, e.g., `i-`.",23,N],[13,"FlagDuplicate","","A flag was used twice, e.g., `i-i`.",23,N],[12,"original","regex_syntax::ast::ErrorKind","The position of the original flag. The error position points to the duplicate flag.",23,N],[13,"FlagRepeatedNegation","regex_syntax::ast","The negation operator was used twice, e.g., `-i-s`.",23,N],[12,"original","regex_syntax::ast::ErrorKind","The position of the original negation operator. The error position points to the duplicate negation operator.",23,N],[13,"FlagUnexpectedEof","regex_syntax::ast","Expected a flag but got EOF, e.g., `(?`.",23,N],[13,"FlagUnrecognized","","Unrecognized flag, e.g., `a`.",23,N],[13,"GroupNameDuplicate","","A duplicate capture name was found.",23,N],[12,"original","regex_syntax::ast::ErrorKind","The position of the initial occurrence of the capture name. The error position itself points to the duplicate occurrence.",23,N],[13,"GroupNameEmpty","regex_syntax::ast","A capture group name is empty, e.g., `(?P<>abc)`.",23,N],[13,"GroupNameInvalid","","An invalid character was seen for a capture group name. This includes errors where the first character is a digit (even though subsequent characters are allowed to be digits).",23,N],[13,"GroupNameUnexpectedEof","","A closing `>` could not be found for a capture group name.",23,N],[13,"GroupUnclosed","","An unclosed group, e.g., `(ab`.",23,N],[13,"GroupUnopened","","An unopened group, e.g., `ab)`.",23,N],[13,"NestLimitExceeded","","The nest limit was exceeded. The limit stored here is the limit configured in the parser.",23,N],[13,"RepetitionCountInvalid","","The range provided in a counted repetition operator is invalid. The range is invalid if the start is greater than the end.",23,N],[13,"RepetitionCountUnclosed","","An opening `{` was found with no corresponding closing `}`.",23,N],[13,"RepetitionMissing","","A repetition operator was applied to a missing sub-expression. This occurs, for example, in the regex consisting of just a `*` or even `(?i)*`. It is, however, possible to create a repetition operating on an empty sub-expression. For example, `()*` is still considered valid.",23,N],[13,"UnsupportedBackreference","","When octal support is disabled, this error is produced when an octal escape is used. The octal escape is assumed to be an invocation of a backreference, which is the common case.",23,N],[13,"UnsupportedLookAround","","When syntax similar to PCRE's look-around is used, this error is returned. Some example syntaxes that are rejected include, but are not necessarily limited to, `(?=re)`, `(?!re)`, `(?<=re)` and `(?<!re)`. Note that all of these syntaxes are otherwise invalid; this error is used to improve the user experience.",23,N],[4,"Ast","","An abstract syntax tree for a single regular expression.",N,N],[13,"Empty","","An empty regex that matches everything.",24,N],[13,"Flags","","A set of flags, e.g., `(?is)`.",24,N],[13,"Literal","","A single character literal, which includes escape sequences.",24,N],[13,"Dot","","The \"any character\" class.",24,N],[13,"Assertion","","A single zero-width assertion.",24,N],[13,"Class","","A single character class. This includes all forms of character classes except for `.`. e.g., `\\d`, `\\pN`, `[a-z]` and `[[:alpha:]]`.",24,N],[13,"Repetition","","A repetition operator applied to an arbitrary regular expression.",24,N],[13,"Group","","A grouped regular expression.",24,N],[13,"Alternation","","An alternation of regular expressions.",24,N],[13,"Concat","","A concatenation of regular expressions.",24,N],[4,"LiteralKind","","The kind of a single literal expression.",N,N],[13,"Verbatim","","The literal is written verbatim, e.g., `a` or `☃`.",25,N],[13,"Punctuation","","The literal is written as an escape because it is punctuation, e.g., `\\*` or `\\[`.",25,N],[13,"Octal","","The literal is written as an octal escape, e.g., `\\141`.",25,N],[13,"HexFixed","","The literal is written as a hex code with a fixed number of digits depending on the type of the escape, e.g., `\\x61` or or `\\u0061` or `\\U00000061`.",25,N],[13,"HexBrace","","The literal is written as a hex code with a bracketed number of digits. The only restriction is that the bracketed hex code must refer to a valid Unicode scalar value.",25,N],[13,"Special","","The literal is written as a specially recognized escape, e.g., `\\f` or `\\n`.",25,N],[4,"SpecialLiteralKind","","The type of a special literal.",N,N],[13,"Bell","","Bell, spelled `\\a` (`\\x07`).",26,N],[13,"FormFeed","","Form feed, spelled `\\f` (`\\x0C`).",26,N],[13,"Tab","","Tab, spelled `\\t` (`\\x09`).",26,N],[13,"LineFeed","","Line feed, spelled `\\n` (`\\x0A`).",26,N],[13,"CarriageReturn","","Carriage return, spelled `\\r` (`\\x0D`).",26,N],[13,"VerticalTab","","Vertical tab, spelled `\\v` (`\\x0B`).",26,N],[13,"Space","","Space, spelled `\\` (`\\x20`). Note that this can only appear when parsing in verbose mode.",26,N],[4,"HexLiteralKind","","The type of a Unicode hex literal.",N,N],[13,"X","","A `\\x` prefix. When used without brackets, this form is limited to two digits.",27,N],[13,"UnicodeShort","","A `\\u` prefix. When used without brackets, this form is limited to four digits.",27,N],[13,"UnicodeLong","","A `\\U` prefix. When used without brackets, this form is limited to eight digits.",27,N],[4,"Class","","A single character class expression.",N,N],[13,"Unicode","","A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.",28,N],[13,"Perl","","A perl character class, e.g., `\\d` or `\\W`.",28,N],[13,"Bracketed","","A bracketed character class set, which may contain zero or more character ranges and/or zero or more nested classes. e.g., `[a-zA-Z\\pL]`.",28,N],[4,"ClassPerlKind","","The available Perl character classes.",N,N],[13,"Digit","","Decimal numbers.",29,N],[13,"Space","","Whitespace.",29,N],[13,"Word","","Word characters.",29,N],[4,"ClassAsciiKind","","The available ASCII character classes.",N,N],[13,"Alnum","","`[0-9A-Za-z]`",30,N],[13,"Alpha","","`[A-Za-z]`",30,N],[13,"Ascii","","`[\\x00-\\x7F]`",30,N],[13,"Blank","","`[ \\t]`",30,N],[13,"Cntrl","","`[\\x00-\\x1F\\x7F]`",30,N],[13,"Digit","","`[0-9]`",30,N],[13,"Graph","","`[!-~]`",30,N],[13,"Lower","","`[a-z]`",30,N],[13,"Print","","`[ -~]`",30,N],[13,"Punct","","`[!-/:-@\\[-`{-~]`",30,N],[13,"Space","","`[\\t\\n\\v\\f\\r ]`",30,N],[13,"Upper","","`[A-Z]`",30,N],[13,"Word","","`[0-9A-Za-z_]`",30,N],[13,"Xdigit","","`[0-9A-Fa-f]`",30,N],[4,"ClassUnicodeKind","","The available forms of Unicode character classes.",N,N],[13,"OneLetter","","A one letter abbreviated class, e.g., `\\pN`.",31,N],[13,"Named","","A binary property, general category or script. The string may be empty.",31,N],[13,"NamedValue","","A property name and an associated value.",31,N],[12,"op","regex_syntax::ast::ClassUnicodeKind","The type of Unicode op used to associate `name` with `value`.",31,N],[12,"name","","The property name (which may be empty).",31,N],[12,"value","","The property value (which may be empty).",31,N],[4,"ClassUnicodeOpKind","regex_syntax::ast","The type of op used in a Unicode character class.",N,N],[13,"Equal","","A property set to a specific value, e.g., `\\p{scx=Katakana}`.",32,N],[13,"Colon","","A property set to a specific value using a colon, e.g., `\\p{scx:Katakana}`.",32,N],[13,"NotEqual","","A property that isn't a particular value, e.g., `\\p{scx!=Katakana}`.",32,N],[4,"ClassSet","","A character class set.",N,N],[13,"Item","","An item, which can be a single literal, range, nested character class or a union of items.",33,N],[13,"BinaryOp","","A single binary operation (i.e., &&, -- or ~~).",33,N],[4,"ClassSetItem","","A single component of a character class set.",N,N],[13,"Empty","","An empty item.",34,N],[13,"Literal","","A single literal.",34,N],[13,"Range","","A range between two literals.",34,N],[13,"Ascii","","An ASCII character class, e.g., `[:alnum:]` or `[:punct:]`.",34,N],[13,"Unicode","","A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.",34,N],[13,"Perl","","A perl character class, e.g., `\\d` or `\\W`.",34,N],[13,"Bracketed","","A bracketed character class set, which may contain zero or more character ranges and/or zero or more nested classes. e.g., `[a-zA-Z\\pL]`.",34,N],[13,"Union","","A union of items.",34,N],[4,"ClassSetBinaryOpKind","","The type of a Unicode character class set operation.",N,N],[13,"Intersection","","The intersection of two sets, e.g., `\\pN&&[a-z]`.",35,N],[13,"Difference","","The difference of two sets, e.g., `\\pN--[0-9]`.",35,N],[13,"SymmetricDifference","","The symmetric difference of two sets. The symmetric difference is the set of elements belonging to one but not both sets. e.g., `[\\pL~~[:ascii:]]`.",35,N],[4,"AssertionKind","","An assertion kind.",N,N],[13,"StartLine","","`^`",36,N],[13,"EndLine","","`$`",36,N],[13,"StartText","","`\\A`",36,N],[13,"EndText","","`\\z`",36,N],[13,"WordBoundary","","`\\b`",36,N],[13,"NotWordBoundary","","`\\B`",36,N],[4,"RepetitionKind","","The kind of a repetition operator.",N,N],[13,"ZeroOrOne","","`?`",37,N],[13,"ZeroOrMore","","`*`",37,N],[13,"OneOrMore","","`+`",37,N],[13,"Range","","`{m,n}`",37,N],[4,"RepetitionRange","","A range repetition operator.",N,N],[13,"Exactly","","`{m}`",38,N],[13,"AtLeast","","`{m,}`",38,N],[13,"Bounded","","`{m,n}`",38,N],[4,"GroupKind","","The kind of a group.",N,N],[13,"CaptureIndex","","`(a)`",39,N],[13,"CaptureName","","`(?P<name>a)`",39,N],[13,"NonCapturing","","`(?:a)` and `(?i:a)`",39,N],[4,"FlagsItemKind","","The kind of an item in a group of flags.",N,N],[13,"Negation","","A negation operator applied to all subsequent flags in the enclosing group.",40,N],[13,"Flag","","A single flag in a group.",40,N],[4,"Flag","","A single flag.",N,N],[13,"CaseInsensitive","","`i`",41,N],[13,"MultiLine","","`m`",41,N],[13,"DotMatchesNewLine","","`s`",41,N],[13,"SwapGreed","","`U`",41,N],[13,"Unicode","","`u`",41,N],[13,"IgnoreWhitespace","","`x`",41,N],[5,"visit","","Executes an implementation of `Visitor` in constant stack space.",N,[[["ast"],["v"]],["result"]]],[0,"parse","","This module provides a regular expression parser.",N,N],[3,"ParserBuilder","regex_syntax::ast::parse","A builder for a regular expression parser.",N,N],[3,"Parser","","A regular expression parser.",N,N],[11,"clone","","",42,[[["self"]],["parserbuilder"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"default","","",42,[[],["parserbuilder"]]],[11,"new","","Create a new parser builder with a default configuration.",42,[[],["parserbuilder"]]],[11,"build","","Build a parser from this configuration with the given pattern.",42,[[["self"]],["parser"]]],[11,"nest_limit","","Set the nesting limit for this parser.",42,[[["self"],["u32"]],["parserbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",42,[[["self"],["bool"]],["parserbuilder"]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",42,[[["self"],["bool"]],["parserbuilder"]]],[11,"clone","","",43,[[["self"]],["parser"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new parser with a default configuration.",43,[[],["parser"]]],[11,"parse","","Parse the regular expression into an abstract syntax tree.",43,[[["self"],["str"]],["result",["ast","error"]]]],[11,"parse_with_comments","","Parse the regular expression and return an abstract syntax tree with all of the comments found in the pattern.",43,[[["self"],["str"]],["result",["withcomments","error"]]]],[0,"print","regex_syntax::ast","This module provides a regular expression printer for `Ast`.",N,N],[3,"Printer","regex_syntax::ast::print","A printer for a regular expression abstract syntax tree.",N,N],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new printer.",44,[[],["printer"]]],[11,"print","","Print the given `Ast` to the given writer. The writer must implement `fmt::Write`. Typical implementations of `fmt::Write` that can be used here are a `fmt::Formatter` (which is available in `fmt::Display` implementations) or a `&mut String`.",44,[[["self"],["ast"],["w"]],["result"]]],[8,"Visitor","regex_syntax::ast","A trait for visiting an abstract syntax tree (AST) in depth first order.",N,N],[16,"Output","","The result of visiting an AST.",45,N],[16,"Err","","An error that visiting an AST might return.",45,N],[10,"finish","","All implementors of `Visitor` must provide a `finish` method, which yields the result of visiting the AST or an error.",45,[[["self"]],["result"]]],[11,"start","","This method is called before beginning traversal of the AST.",45,[[["self"]]]],[11,"visit_pre","","This method is called on an `Ast` before descending into child `Ast` nodes.",45,[[["self"],["ast"]],["result"]]],[11,"visit_post","","This method is called on an `Ast` after descending all of its child `Ast` nodes.",45,[[["self"],["ast"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an `Alternation`.",45,[[["self"]],["result"]]],[11,"visit_class_set_item_pre","","This method is called on every `ClassSetItem` before descending into child nodes.",45,[[["self"],["classsetitem"]],["result"]]],[11,"visit_class_set_item_post","","This method is called on every `ClassSetItem` after descending into child nodes.",45,[[["self"],["classsetitem"]],["result"]]],[11,"visit_class_set_binary_op_pre","","This method is called on every `ClassSetBinaryOp` before descending into child nodes.",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_post","","This method is called on every `ClassSetBinaryOp` after descending into child nodes.",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right hand child nodes of a `ClassSetBinaryOp`.",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"clone","","",46,[[["self"]],["error"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"eq","","",46,[[["self"],["error"]],["bool"]]],[11,"ne","","",46,[[["self"],["error"]],["bool"]]],[11,"kind","","Return the type of this error.",46,[[["self"]],["errorkind"]]],[11,"pattern","","The original pattern string in which this error occurred.",46,[[["self"]],["str"]]],[11,"span","","Return the span at which this error occurred.",46,[[["self"]],["span"]]],[11,"auxiliary_span","","Return an auxiliary span. This span exists only for some errors that benefit from being able to point to two locations in the original regular expression. For example, \"duplicate\" errors will have the main error position set to the duplicate occurrence while its auxiliary span will be set to the initial occurrence.",46,[[["self"]],["option",["span"]]]],[11,"clone","","",23,[[["self"]],["errorkind"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"eq","","",23,[[["self"],["errorkind"]],["bool"]]],[11,"ne","","",23,[[["self"],["errorkind"]],["bool"]]],[11,"description","","",46,[[["self"]],["str"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"clone","","",1,[[["self"]],["span"]]],[11,"eq","","",1,[[["self"],["span"]],["bool"]]],[11,"ne","","",1,[[["self"],["span"]],["bool"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"cmp","","",1,[[["self"],["span"]],["ordering"]]],[11,"partial_cmp","","",1,[[["self"],["span"]],["option",["ordering"]]]],[11,"clone","","",2,[[["self"]],["position"]]],[11,"eq","","",2,[[["self"],["position"]],["bool"]]],[11,"ne","","",2,[[["self"],["position"]],["bool"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"cmp","","",2,[[["self"],["position"]],["ordering"]]],[11,"partial_cmp","","",2,[[["self"],["position"]],["option",["ordering"]]]],[11,"new","","Create a new span with the given positions.",1,[[["position"],["position"]],["span"]]],[11,"splat","","Create a new span using the given position as the start and end.",1,[[["position"]],["span"]]],[11,"with_start","","Create a new span by replacing the starting the position with the one given.",1,[[["self"],["position"]],["span"]]],[11,"with_end","","Create a new span by replacing the ending the position with the one given.",1,[[["self"],["position"]],["span"]]],[11,"is_one_line","","Returns true if and only if this span occurs on a single line.",1,[[["self"]],["bool"]]],[11,"is_empty","","Returns true if and only if this span is empty. That is, it points to a single position in the concrete syntax of a regular expression.",1,[[["self"]],["bool"]]],[11,"new","","Create a new position with the given information.",2,[[["usize"],["usize"],["usize"]],["position"]]],[11,"clone","","",3,[[["self"]],["withcomments"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"eq","","",3,[[["self"],["withcomments"]],["bool"]]],[11,"ne","","",3,[[["self"],["withcomments"]],["bool"]]],[11,"clone","","",4,[[["self"]],["comment"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"eq","","",4,[[["self"],["comment"]],["bool"]]],[11,"ne","","",4,[[["self"],["comment"]],["bool"]]],[11,"clone","","",24,[[["self"]],["ast"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"eq","","",24,[[["self"],["ast"]],["bool"]]],[11,"ne","","",24,[[["self"],["ast"]],["bool"]]],[11,"span","","Return the span of this abstract syntax tree.",24,[[["self"]],["span"]]],[11,"is_empty","","Return true if and only if this Ast is empty.",24,[[["self"]],["bool"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"clone","","",5,[[["self"]],["alternation"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"eq","","",5,[[["self"],["alternation"]],["bool"]]],[11,"ne","","",5,[[["self"],["alternation"]],["bool"]]],[11,"into_ast","","Return this alternation as an AST.",5,[[["self"]],["ast"]]],[11,"clone","","",6,[[["self"]],["concat"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"eq","","",6,[[["self"],["concat"]],["bool"]]],[11,"ne","","",6,[[["self"],["concat"]],["bool"]]],[11,"into_ast","","Return this concatenation as an AST.",6,[[["self"]],["ast"]]],[11,"clone","","",7,[[["self"]],["literal"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"eq","","",7,[[["self"],["literal"]],["bool"]]],[11,"ne","","",7,[[["self"],["literal"]],["bool"]]],[11,"byte","","If this literal was written as a `\\x` hex escape, then this returns the corresponding byte value. Otherwise, this returns `None`.",7,[[["self"]],["option",["u8"]]]],[11,"clone","","",25,[[["self"]],["literalkind"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"eq","","",25,[[["self"],["literalkind"]],["bool"]]],[11,"ne","","",25,[[["self"],["literalkind"]],["bool"]]],[11,"clone","","",26,[[["self"]],["specialliteralkind"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"eq","","",26,[[["self"],["specialliteralkind"]],["bool"]]],[11,"clone","","",27,[[["self"]],["hexliteralkind"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"eq","","",27,[[["self"],["hexliteralkind"]],["bool"]]],[11,"digits","","The number of digits that must be used with this literal form when used without brackets. When used with brackets, there is no restriction on the number of digits.",27,[[["self"]],["u32"]]],[11,"clone","","",28,[[["self"]],["class"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"eq","","",28,[[["self"],["class"]],["bool"]]],[11,"ne","","",28,[[["self"],["class"]],["bool"]]],[11,"span","","Return the span of this character class.",28,[[["self"]],["span"]]],[11,"clone","","",8,[[["self"]],["classperl"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"eq","","",8,[[["self"],["classperl"]],["bool"]]],[11,"ne","","",8,[[["self"],["classperl"]],["bool"]]],[11,"clone","","",29,[[["self"]],["classperlkind"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"eq","","",29,[[["self"],["classperlkind"]],["bool"]]],[11,"clone","","",9,[[["self"]],["classascii"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"eq","","",9,[[["self"],["classascii"]],["bool"]]],[11,"ne","","",9,[[["self"],["classascii"]],["bool"]]],[11,"clone","","",30,[[["self"]],["classasciikind"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"eq","","",30,[[["self"],["classasciikind"]],["bool"]]],[11,"from_name","","Return the corresponding ClassAsciiKind variant for the given name.",30,[[["str"]],["option",["classasciikind"]]]],[11,"clone","","",10,[[["self"]],["classunicode"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"eq","","",10,[[["self"],["classunicode"]],["bool"]]],[11,"ne","","",10,[[["self"],["classunicode"]],["bool"]]],[11,"is_negated","","Returns true if this class has been negated.",10,[[["self"]],["bool"]]],[11,"clone","","",31,[[["self"]],["classunicodekind"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"eq","","",31,[[["self"],["classunicodekind"]],["bool"]]],[11,"ne","","",31,[[["self"],["classunicodekind"]],["bool"]]],[11,"clone","","",32,[[["self"]],["classunicodeopkind"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"eq","","",32,[[["self"],["classunicodeopkind"]],["bool"]]],[11,"is_equal","","Whether the op is an equality op or not.",32,[[["self"]],["bool"]]],[11,"clone","","",11,[[["self"]],["classbracketed"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"eq","","",11,[[["self"],["classbracketed"]],["bool"]]],[11,"ne","","",11,[[["self"],["classbracketed"]],["bool"]]],[11,"clone","","",33,[[["self"]],["classset"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"eq","","",33,[[["self"],["classset"]],["bool"]]],[11,"ne","","",33,[[["self"],["classset"]],["bool"]]],[11,"union","","Build a set from a union.",33,[[["classsetunion"]],["classset"]]],[11,"span","","Return the span of this character class set.",33,[[["self"]],["span"]]],[11,"clone","","",34,[[["self"]],["classsetitem"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"eq","","",34,[[["self"],["classsetitem"]],["bool"]]],[11,"ne","","",34,[[["self"],["classsetitem"]],["bool"]]],[11,"span","","Return the span of this character class set item.",34,[[["self"]],["span"]]],[11,"clone","","",12,[[["self"]],["classsetrange"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"eq","","",12,[[["self"],["classsetrange"]],["bool"]]],[11,"ne","","",12,[[["self"],["classsetrange"]],["bool"]]],[11,"is_valid","","Returns true if and only if this character class range is valid.",12,[[["self"]],["bool"]]],[11,"clone","","",13,[[["self"]],["classsetunion"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"eq","","",13,[[["self"],["classsetunion"]],["bool"]]],[11,"ne","","",13,[[["self"],["classsetunion"]],["bool"]]],[11,"push","","Push a new item in this union.",13,[[["self"],["classsetitem"]]]],[11,"into_item","","Return this union as a character class set item.",13,[[["self"]],["classsetitem"]]],[11,"clone","","",14,[[["self"]],["classsetbinaryop"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"eq","","",14,[[["self"],["classsetbinaryop"]],["bool"]]],[11,"ne","","",14,[[["self"],["classsetbinaryop"]],["bool"]]],[11,"clone","","",35,[[["self"]],["classsetbinaryopkind"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"eq","","",35,[[["self"],["classsetbinaryopkind"]],["bool"]]],[11,"clone","","",15,[[["self"]],["assertion"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"eq","","",15,[[["self"],["assertion"]],["bool"]]],[11,"ne","","",15,[[["self"],["assertion"]],["bool"]]],[11,"clone","","",36,[[["self"]],["assertionkind"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"eq","","",36,[[["self"],["assertionkind"]],["bool"]]],[11,"clone","","",16,[[["self"]],["repetition"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"eq","","",16,[[["self"],["repetition"]],["bool"]]],[11,"ne","","",16,[[["self"],["repetition"]],["bool"]]],[11,"clone","","",17,[[["self"]],["repetitionop"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"eq","","",17,[[["self"],["repetitionop"]],["bool"]]],[11,"ne","","",17,[[["self"],["repetitionop"]],["bool"]]],[11,"clone","","",37,[[["self"]],["repetitionkind"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"eq","","",37,[[["self"],["repetitionkind"]],["bool"]]],[11,"ne","","",37,[[["self"],["repetitionkind"]],["bool"]]],[11,"clone","","",38,[[["self"]],["repetitionrange"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"eq","","",38,[[["self"],["repetitionrange"]],["bool"]]],[11,"ne","","",38,[[["self"],["repetitionrange"]],["bool"]]],[11,"is_valid","","Returns true if and only if this repetition range is valid.",38,[[["self"]],["bool"]]],[11,"clone","","",18,[[["self"]],["group"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"eq","","",18,[[["self"],["group"]],["bool"]]],[11,"ne","","",18,[[["self"],["group"]],["bool"]]],[11,"flags","","If this group is non-capturing, then this returns the (possibly empty) set of flags. Otherwise, `None` is returned.",18,[[["self"]],["option",["flags"]]]],[11,"is_capturing","","Returns true if and only if this group is capturing.",18,[[["self"]],["bool"]]],[11,"capture_index","","Returns the capture index of this group, if this is a capturing group.",18,[[["self"]],["option",["u32"]]]],[11,"clone","","",39,[[["self"]],["groupkind"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"eq","","",39,[[["self"],["groupkind"]],["bool"]]],[11,"ne","","",39,[[["self"],["groupkind"]],["bool"]]],[11,"clone","","",19,[[["self"]],["capturename"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"eq","","",19,[[["self"],["capturename"]],["bool"]]],[11,"ne","","",19,[[["self"],["capturename"]],["bool"]]],[11,"clone","","",20,[[["self"]],["setflags"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"eq","","",20,[[["self"],["setflags"]],["bool"]]],[11,"ne","","",20,[[["self"],["setflags"]],["bool"]]],[11,"clone","","",21,[[["self"]],["flags"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"eq","","",21,[[["self"],["flags"]],["bool"]]],[11,"ne","","",21,[[["self"],["flags"]],["bool"]]],[11,"add_item","","Add the given item to this sequence of flags.",21,[[["self"],["flagsitem"]],["option",["usize"]]]],[11,"flag_state","","Returns the state of the given flag in this set.",21,[[["self"],["flag"]],["option",["bool"]]]],[11,"clone","","",22,[[["self"]],["flagsitem"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"eq","","",22,[[["self"],["flagsitem"]],["bool"]]],[11,"ne","","",22,[[["self"],["flagsitem"]],["bool"]]],[11,"clone","","",40,[[["self"]],["flagsitemkind"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"eq","","",40,[[["self"],["flagsitemkind"]],["bool"]]],[11,"ne","","",40,[[["self"],["flagsitemkind"]],["bool"]]],[11,"is_negation","","Returns true if and only if this item is a negation operator.",40,[[["self"]],["bool"]]],[11,"clone","","",41,[[["self"]],["flag"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"eq","","",41,[[["self"],["flag"]],["bool"]]],[11,"drop","","",24,[[["self"]]]],[11,"drop","","",33,[[["self"]]]],[11,"clone","regex_syntax","",0,[[["self"]],["error"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["error"]],["bool"]]],[11,"ne","","",0,[[["self"],["error"]],["bool"]]],[11,"from","","",0,[[["error"]],["error"]]],[11,"from","","",0,[[["error"]],["error"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[0,"hir","","Defines a high-level intermediate representation for regular expressions.",N,N],[3,"Error","regex_syntax::hir","An error that can occur while translating an `Ast` to a `Hir`.",N,N],[3,"Hir","","A high-level intermediate representation (HIR) for a regular expression.",N,N],[3,"ClassUnicode","","A set of characters represented by Unicode scalar values.",N,N],[3,"ClassUnicodeIter","","An iterator over all ranges in a Unicode character class.",N,N],[3,"ClassUnicodeRange","","A single range of characters represented by Unicode scalar values.",N,N],[3,"ClassBytes","","A set of characters represented by arbitrary bytes (where one byte corresponds to one character).",N,N],[3,"ClassBytesIter","","An iterator over all ranges in a byte character class.",N,N],[3,"ClassBytesRange","","A single range of characters represented by arbitrary bytes.",N,N],[3,"Group","","The high-level intermediate representation for a group.",N,N],[12,"kind","","The kind of this group. If it is a capturing group, then the kind contains the capture group index (and the name, if it is a named group).",47,N],[12,"hir","","The expression inside the capturing group, which may be empty.",47,N],[3,"Repetition","","The high-level intermediate representation of a repetition operator.",N,N],[12,"kind","","The kind of this repetition operator.",48,N],[12,"greedy","","Whether this repetition operator is greedy or not. A greedy operator will match as much as it can. A non-greedy operator will match as little as it can.",48,N],[12,"hir","","The expression being repeated.",48,N],[4,"ErrorKind","","The type of an error that occurred while building an `Hir`.",N,N],[13,"UnicodeNotAllowed","","This error occurs when a Unicode feature is used when Unicode support is disabled. For example `(?-u:\\pL)` would trigger this error.",49,N],[13,"InvalidUtf8","","This error occurs when translating a pattern that could match a byte sequence that isn't UTF-8 and `allow_invalid_utf8` was disabled.",49,N],[13,"UnicodePropertyNotFound","","This occurs when an unrecognized Unicode property name could not be found.",49,N],[13,"UnicodePropertyValueNotFound","","This occurs when an unrecognized Unicode property value could not be found.",49,N],[13,"EmptyClassNotAllowed","","This occurs when the translator attempts to construct a character class that is empty.",49,N],[4,"HirKind","","The kind of an arbitrary `Hir` expression.",N,N],[13,"Empty","","The empty regular expression, which matches everything, including the empty string.",50,N],[13,"Literal","","A single literal character that matches exactly this character.",50,N],[13,"Class","","A single character class that matches any of the characters in the class. A class can either consist of Unicode scalar values as characters, or it can use bytes.",50,N],[13,"Anchor","","An anchor assertion. An anchor assertion match always has zero length.",50,N],[13,"WordBoundary","","A word boundary assertion, which may or may not be Unicode aware. A word boundary assertion match always has zero length.",50,N],[13,"Repetition","","A repetition operation applied to a child expression.",50,N],[13,"Group","","A possibly capturing group, which contains a child expression.",50,N],[13,"Concat","","A concatenation of expressions. A concatenation always has at least two child expressions.",50,N],[13,"Alternation","","An alternation of expressions. An alternation always has at least two child expressions.",50,N],[4,"Literal","","The high-level intermediate representation of a literal.",N,N],[13,"Unicode","","A single character represented by a Unicode scalar value.",51,N],[13,"Byte","","A single character represented by an arbitrary byte.",51,N],[4,"Class","","The high-level intermediate representation of a character class.",N,N],[13,"Unicode","","A set of characters represented by Unicode scalar values.",52,N],[13,"Bytes","","A set of characters represented by arbitrary bytes (one byte per character).",52,N],[4,"Anchor","","The high-level intermediate representation for an anchor assertion.",N,N],[13,"StartLine","","Match the beginning of a line or the beginning of text. Specifically, this matches at the starting position of the input, or at the position immediately following a `\\n` character.",53,N],[13,"EndLine","","Match the end of a line or the end of text. Specifically, this matches at the end position of the input, or at the position immediately preceding a `\\n` character.",53,N],[13,"StartText","","Match the beginning of text. Specifically, this matches at the starting position of the input.",53,N],[13,"EndText","","Match the end of text. Specifically, this matches at the ending position of the input.",53,N],[4,"WordBoundary","","The high-level intermediate representation for a word-boundary assertion.",N,N],[13,"Unicode","","Match a Unicode-aware word boundary. That is, this matches a position where the left adjacent character and right adjacent character correspond to a word and non-word or a non-word and word character.",54,N],[13,"UnicodeNegate","","Match a Unicode-aware negation of a word boundary.",54,N],[13,"Ascii","","Match an ASCII-only word boundary. That is, this matches a position where the left adjacent character and right adjacent character correspond to a word and non-word or a non-word and word character.",54,N],[13,"AsciiNegate","","Match an ASCII-only negation of a word boundary.",54,N],[4,"GroupKind","","The kind of group.",N,N],[13,"CaptureIndex","","A normal unnamed capturing group.",55,N],[13,"CaptureName","","A named capturing group.",55,N],[12,"name","regex_syntax::hir::GroupKind","The name of the group.",55,N],[12,"index","","The capture index of the group.",55,N],[13,"NonCapturing","regex_syntax::hir","A non-capturing group.",55,N],[4,"RepetitionKind","","The kind of a repetition operator.",N,N],[13,"ZeroOrOne","","Matches a sub-expression zero or one times.",56,N],[13,"ZeroOrMore","","Matches a sub-expression zero or more times.",56,N],[13,"OneOrMore","","Matches a sub-expression one or more times.",56,N],[13,"Range","","Matches a sub-expression within a bounded range of times.",56,N],[4,"RepetitionRange","","The kind of a counted repetition operator.",N,N],[13,"Exactly","","Matches a sub-expression exactly this many times.",57,N],[13,"AtLeast","","Matches a sub-expression at least this many times.",57,N],[13,"Bounded","","Matches a sub-expression at least `m` times and at most `n` times.",57,N],[5,"visit","","Executes an implementation of `Visitor` in constant stack space.",N,[[["hir"],["v"]],["result"]]],[0,"literal","","Provides routines for extracting literal prefixes and suffixes from an `Hir`.",N,N],[3,"Literals","regex_syntax::hir::literal","A set of literal byte strings extracted from a regular expression.",N,N],[3,"Literal","","A single member of a set of literals extracted from a regular expression.",N,N],[11,"clone","","",58,[[["self"]],["literals"]]],[11,"eq","","",58,[[["self"],["literals"]],["bool"]]],[11,"ne","","",58,[[["self"],["literals"]],["bool"]]],[11,"clone","","",59,[[["self"]],["literal"]]],[11,"cmp","","",59,[[["self"],["literal"]],["ordering"]]],[11,"empty","","Returns a new empty set of literals using default limits.",58,[[],["literals"]]],[11,"prefixes","","Returns a set of literal prefixes extracted from the given `Hir`.",58,[[["hir"]],["literals"]]],[11,"suffixes","","Returns a set of literal suffixes extracted from the given `Hir`.",58,[[["hir"]],["literals"]]],[11,"limit_size","","Get the approximate size limit (in bytes) of this set.",58,[[["self"]],["usize"]]],[11,"set_limit_size","","Set the approximate size limit (in bytes) of this set.",58,[[["self"],["usize"]],["literals"]]],[11,"limit_class","","Get the character class size limit for this set.",58,[[["self"]],["usize"]]],[11,"set_limit_class","","Limits the size of character(or byte) classes considered.",58,[[["self"],["usize"]],["literals"]]],[11,"literals","","Returns the set of literals as a slice. Its order is unspecified.",58,N],[11,"min_len","","Returns the length of the smallest literal.",58,[[["self"]],["option",["usize"]]]],[11,"all_complete","","Returns true if all members in this set are complete.",58,[[["self"]],["bool"]]],[11,"any_complete","","Returns true if any member in this set is complete.",58,[[["self"]],["bool"]]],[11,"contains_empty","","Returns true if this set contains an empty literal.",58,[[["self"]],["bool"]]],[11,"is_empty","","Returns true if this set is empty or if all of its members is empty.",58,[[["self"]],["bool"]]],[11,"to_empty","","Returns a new empty set of literals using this set's limits.",58,[[["self"]],["literals"]]],[11,"longest_common_prefix","","Returns the longest common prefix of all members in this set.",58,N],[11,"longest_common_suffix","","Returns the longest common suffix of all members in this set.",58,N],[11,"trim_suffix","","Returns a new set of literals with the given number of bytes trimmed from the suffix of each literal.",58,[[["self"],["usize"]],["option",["literals"]]]],[11,"unambiguous_prefixes","","Returns a new set of prefixes of this set of literals that are guaranteed to be unambiguous.",58,[[["self"]],["literals"]]],[11,"unambiguous_suffixes","","Returns a new set of suffixes of this set of literals that are guaranteed to be unambiguous.",58,[[["self"]],["literals"]]],[11,"union_prefixes","","Unions the prefixes from the given expression to this set.",58,[[["self"],["hir"]],["bool"]]],[11,"union_suffixes","","Unions the suffixes from the given expression to this set.",58,[[["self"],["hir"]],["bool"]]],[11,"union","","Unions this set with another set.",58,[[["self"],["literals"]],["bool"]]],[11,"cross_product","","Extends this set with another set.",58,[[["self"],["literals"]],["bool"]]],[11,"cross_add","","Extends each literal in this set with the bytes given.",58,N],[11,"add","","Adds the given literal to this set.",58,[[["self"],["literal"]],["bool"]]],[11,"add_char_class","","Extends each literal in this set with the character class given.",58,[[["self"],["classunicode"]],["bool"]]],[11,"add_byte_class","","Extends each literal in this set with the byte class given.",58,[[["self"],["classbytes"]],["bool"]]],[11,"cut","","Cuts every member of this set. When a member is cut, it can never be extended.",58,[[["self"]]]],[11,"reverse","","Reverses all members in place.",58,[[["self"]]]],[11,"clear","","Clears this set of all members.",58,[[["self"]]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"new","","Returns a new complete literal with the bytes given.",59,[[["vec",["u8"]]],["literal"]]],[11,"empty","","Returns a new complete empty literal.",59,[[],["literal"]]],[11,"is_cut","","Returns true if this literal was \"cut.\"",59,[[["self"]],["bool"]]],[11,"cut","","Cuts this literal.",59,[[["self"]]]],[11,"eq","","",59,[[["self"],["literal"]],["bool"]]],[11,"partial_cmp","","",59,[[["self"],["literal"]],["option",["ordering"]]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",59,N],[11,"deref","","",59,[[["self"]],["vec"]]],[11,"deref_mut","","",59,[[["self"]],["vec"]]],[0,"print","regex_syntax::hir","This module provides a regular expression printer for `Hir`.",N,N],[3,"Printer","regex_syntax::hir::print","A printer for a regular expression's high-level intermediate representation.",N,N],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new printer.",60,[[],["printer"]]],[11,"print","","Print the given `Ast` to the given writer. The writer must implement `fmt::Write`. Typical implementations of `fmt::Write` that can be used here are a `fmt::Formatter` (which is available in `fmt::Display` implementations) or a `&mut String`.",60,[[["self"],["hir"],["w"]],["result"]]],[0,"translate","regex_syntax::hir","Defines a translator that converts an `Ast` to an `Hir`.",N,N],[3,"TranslatorBuilder","regex_syntax::hir::translate","A builder for constructing an AST->HIR translator.",N,N],[3,"Translator","","A translator maps abstract syntax to a high level intermediate representation.",N,N],[11,"clone","","",61,[[["self"]],["translatorbuilder"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"default","","",61,[[],["translatorbuilder"]]],[11,"new","","Create a new translator builder with a default c onfiguration.",61,[[],["translatorbuilder"]]],[11,"build","","Build a translator using the current configuration.",61,[[["self"]],["translator"]]],[11,"allow_invalid_utf8","","When enabled, translation will permit the construction of a regular expression that may match invalid UTF-8.",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"case_insensitive","","Enable or disable the case insensitive flag (`i`) by default.",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"multi_line","","Enable or disable the multi-line matching flag (`m`) by default.",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"dot_matches_new_line","","Enable or disable the \"dot matches any character\" flag (`s`) by default.",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"swap_greed","","Enable or disable the \"swap greed\" flag (`U`) by default.",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"unicode","","Enable or disable the Unicode flag (`u`) by default.",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"clone","","",62,[[["self"]],["translator"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new translator using the default configuration.",62,[[],["translator"]]],[11,"translate","","Translate the given abstract syntax tree (AST) into a high level intermediate representation (HIR).",62,[[["self"],["str"],["ast"]],["result",["hir","error"]]]],[8,"Visitor","regex_syntax::hir","A trait for visiting the high-level IR (HIR) in depth first order.",N,N],[16,"Output","","The result of visiting an HIR.",63,N],[16,"Err","","An error that visiting an HIR might return.",63,N],[10,"finish","","All implementors of `Visitor` must provide a `finish` method, which yields the result of visiting the HIR or an error.",63,[[["self"]],["result"]]],[11,"start","","This method is called before beginning traversal of the HIR.",63,[[["self"]]]],[11,"visit_pre","","This method is called on an `Hir` before descending into child `Hir` nodes.",63,[[["self"],["hir"]],["result"]]],[11,"visit_post","","This method is called on an `Hir` after descending all of its child `Hir` nodes.",63,[[["self"],["hir"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an alternation.",63,[[["self"]],["result"]]],[11,"clone","","",64,[[["self"]],["error"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"eq","","",64,[[["self"],["error"]],["bool"]]],[11,"ne","","",64,[[["self"],["error"]],["bool"]]],[11,"kind","","Return the type of this error.",64,[[["self"]],["errorkind"]]],[11,"pattern","","The original pattern string in which this error occurred.",64,[[["self"]],["str"]]],[11,"span","","Return the span at which this error occurred.",64,[[["self"]],["span"]]],[11,"clone","","",49,[[["self"]],["errorkind"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"eq","","",49,[[["self"],["errorkind"]],["bool"]]],[11,"description","","",64,[[["self"]],["str"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"clone","","",65,[[["self"]],["hir"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"eq","","",65,[[["self"],["hir"]],["bool"]]],[11,"ne","","",65,[[["self"],["hir"]],["bool"]]],[11,"clone","","",50,[[["self"]],["hirkind"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"eq","","",50,[[["self"],["hirkind"]],["bool"]]],[11,"ne","","",50,[[["self"],["hirkind"]],["bool"]]],[11,"kind","","Returns a reference to the underlying HIR kind.",65,[[["self"]],["hirkind"]]],[11,"into_kind","","Consumes ownership of this HIR expression and returns its underlying `HirKind`.",65,[[["self"]],["hirkind"]]],[11,"empty","","Returns an empty HIR expression.",65,[[],["hir"]]],[11,"literal","","Creates a literal HIR expression.",65,[[["literal"]],["hir"]]],[11,"class","","Creates a class HIR expression.",65,[[["class"]],["hir"]]],[11,"anchor","","Creates an anchor assertion HIR expression.",65,[[["anchor"]],["hir"]]],[11,"word_boundary","","Creates a word boundary assertion HIR expression.",65,[[["wordboundary"]],["hir"]]],[11,"repetition","","Creates a repetition HIR expression.",65,[[["repetition"]],["hir"]]],[11,"group","","Creates a group HIR expression.",65,[[["group"]],["hir"]]],[11,"concat","","Returns the concatenation of the given expressions.",65,[[["vec",["hir"]]],["hir"]]],[11,"alternation","","Returns the alternation of the given expressions.",65,[[["vec",["hir"]]],["hir"]]],[11,"dot","","Build an HIR expression for `.`.",65,[[["bool"]],["hir"]]],[11,"any","","Build an HIR expression for `(?s).`.",65,[[["bool"]],["hir"]]],[11,"is_always_utf8","","Return true if and only if this HIR will always match valid UTF-8.",65,[[["self"]],["bool"]]],[11,"is_all_assertions","","Returns true if and only if this entire HIR expression is made up of zero-width assertions.",65,[[["self"]],["bool"]]],[11,"is_anchored_start","","Return true if and only if this HIR is required to match from the beginning of text. This includes expressions like `^foo`, `^(foo|bar)`, `^foo|^bar` but not `^foo|bar`.",65,[[["self"]],["bool"]]],[11,"is_anchored_end","","Return true if and only if this HIR is required to match at the end of text. This includes expressions like `foo$`, `(foo|bar)$`, `foo$|bar$` but not `foo$|bar`.",65,[[["self"]],["bool"]]],[11,"is_any_anchored_start","","Return true if and only if this HIR contains any sub-expression that is required to match at the beginning of text. Specifically, this returns true if the `^` symbol (when multiline mode is disabled) or the `\\A` escape appear anywhere in the regex.",65,[[["self"]],["bool"]]],[11,"is_any_anchored_end","","Return true if and only if this HIR contains any sub-expression that is required to match at the end of text. Specifically, this returns true if the `$` symbol (when multiline mode is disabled) or the `\\z` escape appear anywhere in the regex.",65,[[["self"]],["bool"]]],[11,"is_match_empty","","Return true if and only if the empty string is part of the language matched by this regular expression.",65,[[["self"]],["bool"]]],[11,"is_empty","","Return true if and only if this HIR is the empty regular expression.",50,[[["self"]],["bool"]]],[11,"has_subexprs","","Returns true if and only if this kind has any (including possibly empty) subexpressions.",50,[[["self"]],["bool"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"clone","","",51,[[["self"]],["literal"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"eq","","",51,[[["self"],["literal"]],["bool"]]],[11,"ne","","",51,[[["self"],["literal"]],["bool"]]],[11,"is_unicode","","Returns true if and only if this literal corresponds to a Unicode scalar value.",51,[[["self"]],["bool"]]],[11,"clone","","",52,[[["self"]],["class"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"eq","","",52,[[["self"],["class"]],["bool"]]],[11,"ne","","",52,[[["self"],["class"]],["bool"]]],[11,"case_fold_simple","","Apply Unicode simple case folding to this character class, in place. The character class will be expanded to include all simple case folded character variants.",52,[[["self"]]]],[11,"negate","","Negate this character class in place.",52,[[["self"]]]],[11,"is_always_utf8","","Returns true if and only if this character class will only ever match valid UTF-8.",52,[[["self"]],["bool"]]],[11,"clone","","",66,[[["self"]],["classunicode"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"eq","","",66,[[["self"],["classunicode"]],["bool"]]],[11,"ne","","",66,[[["self"],["classunicode"]],["bool"]]],[11,"new","","Create a new class from a sequence of ranges.",66,[[["i"]],["classunicode"]]],[11,"empty","","Create a new class with no ranges.",66,[[],["classunicode"]]],[11,"push","","Add a new range to this set.",66,[[["self"],["classunicoderange"]]]],[11,"iter","","Return an iterator over all ranges in this class.",66,[[["self"]],["classunicodeiter"]]],[11,"ranges","","Return the underlying ranges as a slice.",66,N],[11,"case_fold_simple","","Expand this character class such that it contains all case folded characters, according to Unicode's \"simple\" mapping. For example, if this class consists of the range `a-z`, then applying case folding will result in the class containing both the ranges `a-z` and `A-Z`.",66,[[["self"]]]],[11,"negate","","Negate this character class.",66,[[["self"]]]],[11,"union","","Union this character class with the given character class, in place.",66,[[["self"],["classunicode"]]]],[11,"intersect","","Intersect this character class with the given character class, in place.",66,[[["self"],["classunicode"]]]],[11,"difference","","Subtract the given character class from this character class, in place.",66,[[["self"],["classunicode"]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given character classes, in place.",66,[[["self"],["classunicode"]]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"next","","",67,[[["self"]],["option",["classunicoderange"]]]],[11,"clone","","",68,[[["self"]],["classunicoderange"]]],[11,"default","","",68,[[],["classunicoderange"]]],[11,"eq","","",68,[[["self"],["classunicoderange"]],["bool"]]],[11,"ne","","",68,[[["self"],["classunicoderange"]],["bool"]]],[11,"partial_cmp","","",68,[[["self"],["classunicoderange"]],["option",["ordering"]]]],[11,"lt","","",68,[[["self"],["classunicoderange"]],["bool"]]],[11,"le","","",68,[[["self"],["classunicoderange"]],["bool"]]],[11,"gt","","",68,[[["self"],["classunicoderange"]],["bool"]]],[11,"ge","","",68,[[["self"],["classunicoderange"]],["bool"]]],[11,"cmp","","",68,[[["self"],["classunicoderange"]],["ordering"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new Unicode scalar value range for a character class.",68,[[["char"],["char"]],["classunicoderange"]]],[11,"start","","Return the start of this range.",68,[[["self"]],["char"]]],[11,"end","","Return the end of this range.",68,[[["self"]],["char"]]],[11,"clone","","",69,[[["self"]],["classbytes"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"eq","","",69,[[["self"],["classbytes"]],["bool"]]],[11,"ne","","",69,[[["self"],["classbytes"]],["bool"]]],[11,"new","","Create a new class from a sequence of ranges.",69,[[["i"]],["classbytes"]]],[11,"empty","","Create a new class with no ranges.",69,[[],["classbytes"]]],[11,"push","","Add a new range to this set.",69,[[["self"],["classbytesrange"]]]],[11,"iter","","Return an iterator over all ranges in this class.",69,[[["self"]],["classbytesiter"]]],[11,"ranges","","Return the underlying ranges as a slice.",69,N],[11,"case_fold_simple","","Expand this character class such that it contains all case folded characters. For example, if this class consists of the range `a-z`, then applying case folding will result in the class containing both the ranges `a-z` and `A-Z`.",69,[[["self"]]]],[11,"negate","","Negate this byte class.",69,[[["self"]]]],[11,"union","","Union this byte class with the given byte class, in place.",69,[[["self"],["classbytes"]]]],[11,"intersect","","Intersect this byte class with the given byte class, in place.",69,[[["self"],["classbytes"]]]],[11,"difference","","Subtract the given byte class from this byte class, in place.",69,[[["self"],["classbytes"]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given byte classes, in place.",69,[[["self"],["classbytes"]]]],[11,"is_all_ascii","","Returns true if and only if this character class will either match nothing or only ASCII bytes. Stated differently, this returns false if and only if this class contains a non-ASCII byte.",69,[[["self"]],["bool"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"next","","",70,[[["self"]],["option",["classbytesrange"]]]],[11,"clone","","",71,[[["self"]],["classbytesrange"]]],[11,"default","","",71,[[],["classbytesrange"]]],[11,"eq","","",71,[[["self"],["classbytesrange"]],["bool"]]],[11,"ne","","",71,[[["self"],["classbytesrange"]],["bool"]]],[11,"partial_cmp","","",71,[[["self"],["classbytesrange"]],["option",["ordering"]]]],[11,"lt","","",71,[[["self"],["classbytesrange"]],["bool"]]],[11,"le","","",71,[[["self"],["classbytesrange"]],["bool"]]],[11,"gt","","",71,[[["self"],["classbytesrange"]],["bool"]]],[11,"ge","","",71,[[["self"],["classbytesrange"]],["bool"]]],[11,"cmp","","",71,[[["self"],["classbytesrange"]],["ordering"]]],[11,"new","","Create a new byte range for a character class.",71,[[["u8"],["u8"]],["classbytesrange"]]],[11,"start","","Return the start of this range.",71,[[["self"]],["u8"]]],[11,"end","","Return the end of this range.",71,[[["self"]],["u8"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"clone","","",53,[[["self"]],["anchor"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"eq","","",53,[[["self"],["anchor"]],["bool"]]],[11,"clone","","",54,[[["self"]],["wordboundary"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"eq","","",54,[[["self"],["wordboundary"]],["bool"]]],[11,"is_negated","","Returns true if and only if this word boundary assertion is negated.",54,[[["self"]],["bool"]]],[11,"clone","","",47,[[["self"]],["group"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"eq","","",47,[[["self"],["group"]],["bool"]]],[11,"ne","","",47,[[["self"],["group"]],["bool"]]],[11,"clone","","",55,[[["self"]],["groupkind"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"eq","","",55,[[["self"],["groupkind"]],["bool"]]],[11,"ne","","",55,[[["self"],["groupkind"]],["bool"]]],[11,"clone","","",48,[[["self"]],["repetition"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"eq","","",48,[[["self"],["repetition"]],["bool"]]],[11,"ne","","",48,[[["self"],["repetition"]],["bool"]]],[11,"is_match_empty","","Returns true if and only if this repetition operator makes it possible to match the empty string.",48,[[["self"]],["bool"]]],[11,"clone","","",56,[[["self"]],["repetitionkind"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"eq","","",56,[[["self"],["repetitionkind"]],["bool"]]],[11,"ne","","",56,[[["self"],["repetitionkind"]],["bool"]]],[11,"clone","","",57,[[["self"]],["repetitionrange"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"eq","","",57,[[["self"],["repetitionrange"]],["bool"]]],[11,"ne","","",57,[[["self"],["repetitionrange"]],["bool"]]],[11,"drop","","",65,[[["self"]]]],[11,"clone","regex_syntax","",72,[[["self"]],["parserbuilder"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"default","","",72,[[],["parserbuilder"]]],[11,"new","","Create a new parser builder with a default configuration.",72,[[],["parserbuilder"]]],[11,"build","","Build a parser from this configuration with the given pattern.",72,[[["self"]],["parser"]]],[11,"nest_limit","","Set the nesting limit for this parser.",72,[[["self"],["u32"]],["parserbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",72,[[["self"],["bool"]],["parserbuilder"]]],[11,"allow_invalid_utf8","","When enabled, the parser will permit the construction of a regular expression that may match invalid UTF-8.",72,[[["self"],["bool"]],["parserbuilder"]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",72,[[["self"],["bool"]],["parserbuilder"]]],[11,"case_insensitive","","Enable or disable the case insensitive flag by default.",72,[[["self"],["bool"]],["parserbuilder"]]],[11,"multi_line","","Enable or disable the multi-line matching flag by default.",72,[[["self"],["bool"]],["parserbuilder"]]],[11,"dot_matches_new_line","","Enable or disable the \"dot matches any character\" flag by default.",72,[[["self"],["bool"]],["parserbuilder"]]],[11,"swap_greed","","Enable or disable the \"swap greed\" flag by default.",72,[[["self"],["bool"]],["parserbuilder"]]],[11,"unicode","","Enable or disable the Unicode flag (`u`) by default.",72,[[["self"],["bool"]],["parserbuilder"]]],[11,"clone","","",73,[[["self"]],["parser"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new parser with a default configuration.",73,[[],["parser"]]],[11,"parse","","Parse the regular expression into a high level intermediate representation.",73,[[["self"],["str"]],["result",["hir"]]]],[6,"Result","","A type alias for dealing with errors returned by this crate.",N,N],[11,"start","regex_syntax::ast","This method is called before beginning traversal of the AST.",45,[[["self"]]]],[11,"visit_pre","","This method is called on an `Ast` before descending into child `Ast` nodes.",45,[[["self"],["ast"]],["result"]]],[11,"visit_post","","This method is called on an `Ast` after descending all of its child `Ast` nodes.",45,[[["self"],["ast"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an `Alternation`.",45,[[["self"]],["result"]]],[11,"visit_class_set_item_pre","","This method is called on every `ClassSetItem` before descending into child nodes.",45,[[["self"],["classsetitem"]],["result"]]],[11,"visit_class_set_item_post","","This method is called on every `ClassSetItem` after descending into child nodes.",45,[[["self"],["classsetitem"]],["result"]]],[11,"visit_class_set_binary_op_pre","","This method is called on every `ClassSetBinaryOp` before descending into child nodes.",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_post","","This method is called on every `ClassSetBinaryOp` after descending into child nodes.",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right hand child nodes of a `ClassSetBinaryOp`.",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"start","regex_syntax::hir","This method is called before beginning traversal of the HIR.",63,[[["self"]]]],[11,"visit_pre","","This method is called on an `Hir` before descending into child `Hir` nodes.",63,[[["self"],["hir"]],["result"]]],[11,"visit_post","","This method is called on an `Hir` after descending all of its child `Hir` nodes.",63,[[["self"],["hir"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an alternation.",63,[[["self"]],["result"]]]],"paths":[[4,"Error"],[3,"Span"],[3,"Position"],[3,"WithComments"],[3,"Comment"],[3,"Alternation"],[3,"Concat"],[3,"Literal"],[3,"ClassPerl"],[3,"ClassAscii"],[3,"ClassUnicode"],[3,"ClassBracketed"],[3,"ClassSetRange"],[3,"ClassSetUnion"],[3,"ClassSetBinaryOp"],[3,"Assertion"],[3,"Repetition"],[3,"RepetitionOp"],[3,"Group"],[3,"CaptureName"],[3,"SetFlags"],[3,"Flags"],[3,"FlagsItem"],[4,"ErrorKind"],[4,"Ast"],[4,"LiteralKind"],[4,"SpecialLiteralKind"],[4,"HexLiteralKind"],[4,"Class"],[4,"ClassPerlKind"],[4,"ClassAsciiKind"],[4,"ClassUnicodeKind"],[4,"ClassUnicodeOpKind"],[4,"ClassSet"],[4,"ClassSetItem"],[4,"ClassSetBinaryOpKind"],[4,"AssertionKind"],[4,"RepetitionKind"],[4,"RepetitionRange"],[4,"GroupKind"],[4,"FlagsItemKind"],[4,"Flag"],[3,"ParserBuilder"],[3,"Parser"],[3,"Printer"],[8,"Visitor"],[3,"Error"],[3,"Group"],[3,"Repetition"],[4,"ErrorKind"],[4,"HirKind"],[4,"Literal"],[4,"Class"],[4,"Anchor"],[4,"WordBoundary"],[4,"GroupKind"],[4,"RepetitionKind"],[4,"RepetitionRange"],[3,"Literals"],[3,"Literal"],[3,"Printer"],[3,"TranslatorBuilder"],[3,"Translator"],[8,"Visitor"],[3,"Error"],[3,"Hir"],[3,"ClassUnicode"],[3,"ClassUnicodeIter"],[3,"ClassUnicodeRange"],[3,"ClassBytes"],[3,"ClassBytesIter"],[3,"ClassBytesRange"],[3,"ParserBuilder"],[3,"Parser"]]};
searchIndex["rustc_serialize"]={"doc":"Support code for encoding and decoding types.","items":[[0,"base64","rustc_serialize","Base64 binary-to-text encoding",N,N],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",N,N],[12,"char_set","","Character set to use",0,N],[12,"newline","","Newline to use",0,N],[12,"pad","","True to pad output with `=` characters",0,N],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",0,N],[4,"CharacterSet","","Available encoding character sets",N,N],[13,"Standard","","The standard character set (uses `+` and `/`)",1,N],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",1,N],[4,"Newline","","Available newline types",N,N],[13,"LF","","A linefeed (i.e. Unix-style newline)",2,N],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",2,N],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",N,N],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",3,N],[13,"InvalidBase64Length","","The input had an invalid length",3,N],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",N,N],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",N,N],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",N,N],[8,"ToBase64","","A trait for converting a value to base64 encoding.",N,N],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified format configuration, returning the owned string.",4,[[["self"],["config"]],["string"]]],[8,"FromBase64","","A trait for converting from base64 encoded values.",N,N],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into an owned vector of bytes, returning the vector.",5,[[["self"]],["result",["vec","frombase64error"]]]],[11,"clone","","",1,[[["self"]],["characterset"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",2,[[["self"]],["newline"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["config"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",3,[[["self"]],["frombase64error"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[0,"hex","rustc_serialize","Hex binary-to-text encoding",N,N],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",N,N],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",6,N],[13,"InvalidHexLength","","The input had an invalid length",6,N],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",N,N],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned string.",7,[[["self"]],["string"]]],[8,"FromHex","","A trait for converting hexadecimal encoded values",N,N],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data, into an owned vector of bytes, returning the vector.",8,[[["self"]],["result",["vec","fromhexerror"]]]],[11,"clone","","",6,[[["self"]],["fromhexerror"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"description","","",6,[[["self"]],["str"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[0,"json","rustc_serialize","JSON parsing and serialization",N,N],[3,"PrettyJson","rustc_serialize::json","",N,N],[3,"AsJson","","",N,N],[3,"AsPrettyJson","","",N,N],[3,"Encoder","","A structure for implementing serialization to JSON.",N,N],[3,"Stack","","A Stack represents the current position of the parser in the logical structure of the JSON stream. For example foo.bar[3].x",N,N],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming an iterator of char.",N,N],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",N,N],[3,"Decoder","","A structure to decode JSON to values in rust.",N,N],[4,"Json","","Represents a json value",N,N],[13,"I64","","",9,N],[13,"U64","","",9,N],[13,"F64","","",9,N],[13,"String","","",9,N],[13,"Boolean","","",9,N],[13,"Array","","",9,N],[13,"Object","","",9,N],[13,"Null","","",9,N],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",N,N],[13,"InvalidSyntax","","",10,N],[13,"InvalidNumber","","",10,N],[13,"EOFWhileParsingObject","","",10,N],[13,"EOFWhileParsingArray","","",10,N],[13,"EOFWhileParsingValue","","",10,N],[13,"EOFWhileParsingString","","",10,N],[13,"KeyMustBeAString","","",10,N],[13,"ExpectedColon","","",10,N],[13,"TrailingCharacters","","",10,N],[13,"TrailingComma","","",10,N],[13,"InvalidEscape","","",10,N],[13,"InvalidUnicodeCodePoint","","",10,N],[13,"LoneLeadingSurrogateInHexEscape","","",10,N],[13,"UnexpectedEndOfHexEscape","","",10,N],[13,"UnrecognizedHex","","",10,N],[13,"NotFourDigit","","",10,N],[13,"ControlCharacterInString","","",10,N],[13,"NotUtf8","","",10,N],[4,"ParserError","","",N,N],[13,"SyntaxError","","msg, line, col",11,N],[13,"IoError","","",11,N],[4,"DecoderError","","",N,N],[13,"ParseError","","",12,N],[13,"ExpectedError","","",12,N],[13,"MissingFieldError","","",12,N],[13,"UnknownVariantError","","",12,N],[13,"ApplicationError","","",12,N],[13,"EOF","","",12,N],[4,"EncoderError","","",N,N],[13,"FmtError","","",13,N],[13,"BadHashmapKey","","",13,N],[4,"JsonEvent","","The output of the streaming parser.",N,N],[13,"ObjectStart","","",14,N],[13,"ObjectEnd","","",14,N],[13,"ArrayStart","","",14,N],[13,"ArrayEnd","","",14,N],[13,"BooleanValue","","",14,N],[13,"I64Value","","",14,N],[13,"U64Value","","",14,N],[13,"F64Value","","",14,N],[13,"StringValue","","",14,N],[13,"NullValue","","",14,N],[13,"Error","","",14,N],[4,"StackElement","","StackElements compose a Stack. For example, Key(\"foo\"), Key(\"bar\"), Index(3) and Key(\"x\") are the StackElements compositing the stack that represents foo.bar[3].x",N,N],[13,"Index","","",15,N],[13,"Key","","",15,N],[5,"error_str","","Returns a readable error string for a given error code.",N,[[["errorcode"]],["str"]]],[5,"decode","","Shortcut function to decode a JSON `&str` into an object",N,[[["str"]],["decoderesult"]]],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",N,[[["t"]],["encoderesult",["string"]]]],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON on-the-fly via `write!`",N,[[["t"]],["asjson"]]],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON on-the-fly via `write!`",N,[[["t"]],["asprettyjson"]]],[6,"Array","","",N,N],[6,"Object","","",N,N],[6,"BuilderError","","",N,N],[6,"EncodeResult","","",N,N],[6,"DecodeResult","","",N,N],[8,"ToJson","","A trait for converting values to JSON",N,N],[10,"to_json","","Converts the value of `self` to an instance of JSON",16,[[["self"]],["json"]]],[11,"clone","","",9,[[["self"]],["json"]]],[11,"eq","","",9,[[["self"],["json"]],["bool"]]],[11,"ne","","",9,[[["self"],["json"]],["bool"]]],[11,"partial_cmp","","",9,[[["self"],["json"]],["option",["ordering"]]]],[11,"lt","","",9,[[["self"],["json"]],["bool"]]],[11,"le","","",9,[[["self"],["json"]],["bool"]]],[11,"gt","","",9,[[["self"],["json"]],["bool"]]],[11,"ge","","",9,[[["self"],["json"]],["bool"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"clone","","",10,[[["self"]],["errorcode"]]],[11,"eq","","",10,[[["self"],["errorcode"]],["bool"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"eq","","",11,[[["self"],["parsererror"]],["bool"]]],[11,"eq","","",12,[[["self"],["decodererror"]],["bool"]]],[11,"ne","","",12,[[["self"],["decodererror"]],["bool"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"eq","","",13,[[["self"],["encodererror"]],["bool"]]],[11,"clone","","",13,[[["self"]],["self"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"description","","",12,[[["self"]],["str"]]],[11,"cause","","",12,[[["self"]],["option",["stderror"]]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"from","","",12,[[["parsererror"]],["decodererror"]]],[11,"description","","",11,[[["self"]],["str"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"from","","",11,[[["error"]],["parsererror"]]],[11,"description","","",13,[[["self"]],["str"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"from","","",13,[[["error"]],["encodererror"]]],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable JSON to the specified writer",17,[[["write"]],["encoder"]]],[11,"new","","Creates a new encoder whose output will be written in compact JSON to the specified writer",17,[[["write"]],["encoder"]]],[11,"set_indent","","Set the number of spaces to indent for each level. This is safe to set during encoding.",17,[[["self"],["u32"]],["result"]]],[11,"emit_nil","","",17,[[["self"]],["encoderesult"]]],[11,"emit_usize","","",17,[[["self"],["usize"]],["encoderesult"]]],[11,"emit_u64","","",17,[[["self"],["u64"]],["encoderesult"]]],[11,"emit_u32","","",17,[[["self"],["u32"]],["encoderesult"]]],[11,"emit_u16","","",17,[[["self"],["u16"]],["encoderesult"]]],[11,"emit_u8","","",17,[[["self"],["u8"]],["encoderesult"]]],[11,"emit_isize","","",17,[[["self"],["isize"]],["encoderesult"]]],[11,"emit_i64","","",17,[[["self"],["i64"]],["encoderesult"]]],[11,"emit_i32","","",17,[[["self"],["i32"]],["encoderesult"]]],[11,"emit_i16","","",17,[[["self"],["i16"]],["encoderesult"]]],[11,"emit_i8","","",17,[[["self"],["i8"]],["encoderesult"]]],[11,"emit_bool","","",17,[[["self"],["bool"]],["encoderesult"]]],[11,"emit_f64","","",17,[[["self"],["f64"]],["encoderesult"]]],[11,"emit_f32","","",17,[[["self"],["f32"]],["encoderesult"]]],[11,"emit_char","","",17,[[["self"],["char"]],["encoderesult"]]],[11,"emit_str","","",17,[[["self"],["str"]],["encoderesult"]]],[11,"emit_enum","","",17,[[["self"],["str"],["f"]],["encoderesult"]]],[11,"emit_enum_variant","","",17,[[["self"],["str"],["usize"],["usize"],["f"]],["encoderesult"]]],[11,"emit_enum_variant_arg","","",17,[[["self"],["usize"],["f"]],["encoderesult"]]],[11,"emit_enum_struct_variant","","",17,[[["self"],["str"],["usize"],["usize"],["f"]],["encoderesult"]]],[11,"emit_enum_struct_variant_field","","",17,[[["self"],["str"],["usize"],["f"]],["encoderesult"]]],[11,"emit_struct","","",17,[[["self"],["str"],["usize"],["f"]],["encoderesult"]]],[11,"emit_struct_field","","",17,[[["self"],["str"],["usize"],["f"]],["encoderesult"]]],[11,"emit_tuple","","",17,[[["self"],["usize"],["f"]],["encoderesult"]]],[11,"emit_tuple_arg","","",17,[[["self"],["usize"],["f"]],["encoderesult"]]],[11,"emit_tuple_struct","","",17,[[["self"],["str"],["usize"],["f"]],["encoderesult"]]],[11,"emit_tuple_struct_arg","","",17,[[["self"],["usize"],["f"]],["encoderesult"]]],[11,"emit_option","","",17,[[["self"],["f"]],["encoderesult"]]],[11,"emit_option_none","","",17,[[["self"]],["encoderesult"]]],[11,"emit_option_some","","",17,[[["self"],["f"]],["encoderesult"]]],[11,"emit_seq","","",17,[[["self"],["usize"],["f"]],["encoderesult"]]],[11,"emit_seq_elt","","",17,[[["self"],["usize"],["f"]],["encoderesult"]]],[11,"emit_map","","",17,[[["self"],["usize"],["f"]],["encoderesult"]]],[11,"emit_map_elt_key","","",17,[[["self"],["usize"],["f"]],["encoderesult"]]],[11,"emit_map_elt_val","","",17,[[["self"],["usize"],["f"]],["encoderesult"]]],[11,"encode","","",9,[[["self"],["s"]],["result"]]],[11,"from_reader","","Decodes a json value from an `&mut io::Read`",9,[[["read"]],["result",["buildererror"]]]],[11,"from_str","","Decodes a json value from a string",9,[[["str"]],["result",["buildererror"]]]],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty representation for it via `Display`.",9,[[["self"]],["prettyjson"]]],[11,"find","","If the Json value is an Object, returns the value associated with the provided key. Otherwise, returns None.",9,[[["self"],["str"]],["option",["json"]]]],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`. If any key is found not to exist, find_path will return None. Otherwise, it will return the Json value associated with the final key.",9,N],[11,"search","","If the Json value is an Object, performs a depth-first search until a value associated with the provided key is found. If no value is found or the Json value is not an Object, returns None.",9,[[["self"],["str"]],["option",["json"]]]],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",9,[[["self"]],["bool"]]],[11,"as_object","","If the Json value is an Object, returns a reference to the associated BTreeMap. Returns None otherwise.",9,[[["self"]],["option",["object"]]]],[11,"as_object_mut","","If the Json value is an Object, returns a mutable reference to the associated BTreeMap. Returns None otherwise.",9,[[["self"]],["option",["object"]]]],[11,"into_object","","If the Json value is an Object, returns the associated BTreeMap. Returns None otherwise.",9,[[["self"]],["option",["object"]]]],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",9,[[["self"]],["bool"]]],[11,"as_array","","If the Json value is an Array, returns a reference to the associated vector. Returns None otherwise.",9,[[["self"]],["option",["array"]]]],[11,"as_array_mut","","If the Json value is an Array, returns a mutable reference to the associated vector. Returns None otherwise.",9,[[["self"]],["option",["array"]]]],[11,"into_array","","If the Json value is an Array, returns the associated vector. Returns None otherwise.",9,[[["self"]],["option",["array"]]]],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",9,[[["self"]],["bool"]]],[11,"as_string","","If the Json value is a String, returns the associated str. Returns None otherwise.",9,[[["self"]],["option",["str"]]]],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",9,[[["self"]],["bool"]]],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",9,[[["self"]],["bool"]]],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",9,[[["self"]],["bool"]]],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",9,[[["self"]],["bool"]]],[11,"as_i64","","If the Json value is a number, return or cast it to a i64. Returns None otherwise.",9,[[["self"]],["option",["i64"]]]],[11,"as_u64","","If the Json value is a number, return or cast it to a u64. Returns None otherwise.",9,[[["self"]],["option",["u64"]]]],[11,"as_f64","","If the Json value is a number, return or cast it to a f64. Returns None otherwise.",9,[[["self"]],["option",["f64"]]]],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",9,[[["self"]],["bool"]]],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool. Returns None otherwise.",9,[[["self"]],["option",["bool"]]]],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",9,[[["self"]],["bool"]]],[11,"as_null","","If the Json value is a Null, returns (). Returns None otherwise.",9,[[["self"]],["option"]]],[11,"index","","",9,[[["self"],["str"]],["json"]]],[11,"index","","",9,[[["self"],["usize"]],["json"]]],[11,"eq","","",14,[[["self"],["jsonevent"]],["bool"]]],[11,"ne","","",14,[[["self"],["jsonevent"]],["bool"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"eq","","",15,[[["self"],["stackelement"]],["bool"]]],[11,"ne","","",15,[[["self"],["stackelement"]],["bool"]]],[11,"clone","","",15,[[["self"]],["stackelement"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"new","","",18,[[],["stack"]]],[11,"len","","Returns The number of elements in the Stack.",18,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the stack is empty.",18,[[["self"]],["bool"]]],[11,"get","","Provides access to the StackElement at a given index. lower indices are at the bottom of the stack while higher indices are at the top.",18,[[["self"],["usize"]],["stackelement"]]],[11,"is_equal_to","","Compares this stack with an array of StackElements.",18,N],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as the ones passed as parameter.",18,N],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as the ones passed as parameter.",18,N],[11,"top","","Returns the top-most element (if any).",18,[[["self"]],["option",["stackelement"]]]],[11,"next","","",19,[[["self"]],["option",["jsonevent"]]]],[11,"new","","Creates the JSON parser.",19,[[["t"]],["parser"]]],[11,"stack","","Provides access to the current position in the logical structure of the JSON stream.",19,[[["self"]],["stack"]]],[11,"new","","Create a JSON Builder.",20,[[["t"]],["builder"]]],[11,"build","","",20,[[["self"]],["result",["json","buildererror"]]]],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",21,[[["json"]],["decoder"]]],[11,"read_nil","","",21,[[["self"]],["decoderesult"]]],[11,"read_usize","","",21,[[["self"]],["decoderesult",["usize"]]]],[11,"read_u8","","",21,[[["self"]],["decoderesult",["u8"]]]],[11,"read_u16","","",21,[[["self"]],["decoderesult",["u16"]]]],[11,"read_u32","","",21,[[["self"]],["decoderesult",["u32"]]]],[11,"read_u64","","",21,[[["self"]],["decoderesult",["u64"]]]],[11,"read_isize","","",21,[[["self"]],["decoderesult",["isize"]]]],[11,"read_i8","","",21,[[["self"]],["decoderesult",["i8"]]]],[11,"read_i16","","",21,[[["self"]],["decoderesult",["i16"]]]],[11,"read_i32","","",21,[[["self"]],["decoderesult",["i32"]]]],[11,"read_i64","","",21,[[["self"]],["decoderesult",["i64"]]]],[11,"read_f32","","",21,[[["self"]],["decoderesult",["f32"]]]],[11,"read_f64","","",21,[[["self"]],["decoderesult",["f64"]]]],[11,"read_bool","","",21,[[["self"]],["decoderesult",["bool"]]]],[11,"read_char","","",21,[[["self"]],["decoderesult",["char"]]]],[11,"read_str","","",21,[[["self"]],["decoderesult",["string"]]]],[11,"read_enum","","",21,[[["self"],["str"],["f"]],["decoderesult"]]],[11,"read_enum_variant","","",21,N],[11,"read_enum_variant_arg","","",21,[[["self"],["usize"],["f"]],["decoderesult"]]],[11,"read_enum_struct_variant","","",21,N],[11,"read_enum_struct_variant_field","","",21,[[["self"],["str"],["usize"],["f"]],["decoderesult"]]],[11,"read_struct","","",21,[[["self"],["str"],["usize"],["f"]],["decoderesult"]]],[11,"read_struct_field","","",21,[[["self"],["str"],["usize"],["f"]],["decoderesult"]]],[11,"read_tuple","","",21,[[["self"],["usize"],["f"]],["decoderesult"]]],[11,"read_tuple_arg","","",21,[[["self"],["usize"],["f"]],["decoderesult"]]],[11,"read_tuple_struct","","",21,[[["self"],["str"],["usize"],["f"]],["decoderesult"]]],[11,"read_tuple_struct_arg","","",21,[[["self"],["usize"],["f"]],["decoderesult"]]],[11,"read_option","","",21,[[["self"],["f"]],["decoderesult"]]],[11,"read_seq","","",21,[[["self"],["f"]],["decoderesult"]]],[11,"read_seq_elt","","",21,[[["self"],["usize"],["f"]],["decoderesult"]]],[11,"read_map","","",21,[[["self"],["f"]],["decoderesult"]]],[11,"read_map_elt_key","","",21,[[["self"],["usize"],["f"]],["decoderesult"]]],[11,"read_map_elt_val","","",21,[[["self"],["usize"],["f"]],["decoderesult"]]],[11,"error","","",21,[[["self"],["str"]],["decodererror"]]],[11,"to_json","","",9,[[["self"]],["json"]]],[11,"fmt","","Encodes a json value into a string",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","Encodes a json value into a string",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","Encodes a json value into a string",23,[[["self"],["formatter"]],["result"]]],[11,"indent","","Set the indentation level for the emitted JSON",24,[[["self"],["u32"]],["asprettyjson"]]],[11,"fmt","","Encodes a json value into a string",24,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",9,[[["str"]],["result",["json","parsererror"]]]],[8,"Decoder","rustc_serialize","Trait for reading in an encoding for deserialization.",N,N],[16,"Error","","The error type for method results.",25,N],[10,"read_nil","","Read a nil value.",25,[[["self"]],["result"]]],[10,"read_usize","","Read a usize value.",25,[[["self"]],["result",["usize"]]]],[10,"read_u64","","Read a u64 value.",25,[[["self"]],["result",["u64"]]]],[10,"read_u32","","Read a u32 value.",25,[[["self"]],["result",["u32"]]]],[10,"read_u16","","Read a u16 value.",25,[[["self"]],["result",["u16"]]]],[10,"read_u8","","Read a u8 value.",25,[[["self"]],["result",["u8"]]]],[10,"read_isize","","Read a isize value.",25,[[["self"]],["result",["isize"]]]],[10,"read_i64","","Read a i64 value.",25,[[["self"]],["result",["i64"]]]],[10,"read_i32","","Read a i32 value.",25,[[["self"]],["result",["i32"]]]],[10,"read_i16","","Read a i16 value.",25,[[["self"]],["result",["i16"]]]],[10,"read_i8","","Read a i8 value.",25,[[["self"]],["result",["i8"]]]],[10,"read_bool","","Read a bool value.",25,[[["self"]],["result",["bool"]]]],[10,"read_f64","","Read a f64 value.",25,[[["self"]],["result",["f64"]]]],[10,"read_f32","","Read a f32 value.",25,[[["self"]],["result",["f32"]]]],[10,"read_char","","Read a char value.",25,[[["self"]],["result",["char"]]]],[10,"read_str","","Read a string value.",25,[[["self"]],["result",["string"]]]],[10,"read_enum","","Read an enumeration value.",25,[[["self"],["str"],["f"]],["result"]]],[10,"read_enum_variant","","Read an enumeration value.",25,N],[10,"read_enum_variant_arg","","Read an unnamed data item for an enumeration variant.",25,[[["self"],["usize"],["f"]],["result"]]],[10,"read_enum_struct_variant","","Read an enumeration value.",25,N],[10,"read_enum_struct_variant_field","","Read a named data item for an enumeration variant.",25,[[["self"],["str"],["usize"],["f"]],["result"]]],[10,"read_struct","","Read an struct value.",25,[[["self"],["str"],["usize"],["f"]],["result"]]],[10,"read_struct_field","","Read a field for a struct value.",25,[[["self"],["str"],["usize"],["f"]],["result"]]],[10,"read_tuple","","Read a tuple value.",25,[[["self"],["usize"],["f"]],["result"]]],[10,"read_tuple_arg","","Read a data item for a tuple.",25,[[["self"],["usize"],["f"]],["result"]]],[10,"read_tuple_struct","","Read a tuple struct value.",25,[[["self"],["str"],["usize"],["f"]],["result"]]],[10,"read_tuple_struct_arg","","Read a data item for a tuple struct.",25,[[["self"],["usize"],["f"]],["result"]]],[10,"read_option","","Read an optional value.",25,[[["self"],["f"]],["result"]]],[10,"read_seq","","Read a sequence of values.",25,[[["self"],["f"]],["result"]]],[10,"read_seq_elt","","Read an element in the sequence.",25,[[["self"],["usize"],["f"]],["result"]]],[10,"read_map","","Read an associative container (map).",25,[[["self"],["f"]],["result"]]],[10,"read_map_elt_key","","Read the key for an entry in a map.",25,[[["self"],["usize"],["f"]],["result"]]],[10,"read_map_elt_val","","Read the value for an entry in a map.",25,[[["self"],["usize"],["f"]],["result"]]],[10,"error","","Record a decoding error.",25,N],[8,"Encoder","","Trait for writing out an encoding when serializing.",N,N],[16,"Error","","The error type for method results.",26,N],[10,"emit_nil","","Emit a nil value.",26,[[["self"]],["result"]]],[10,"emit_usize","","Emit a usize value.",26,[[["self"],["usize"]],["result"]]],[10,"emit_u64","","Emit a u64 value.",26,[[["self"],["u64"]],["result"]]],[10,"emit_u32","","Emit a u32 value.",26,[[["self"],["u32"]],["result"]]],[10,"emit_u16","","Emit a u16 value.",26,[[["self"],["u16"]],["result"]]],[10,"emit_u8","","Emit a u8 value.",26,[[["self"],["u8"]],["result"]]],[10,"emit_isize","","Emit a isize value.",26,[[["self"],["isize"]],["result"]]],[10,"emit_i64","","Emit a i64 value.",26,[[["self"],["i64"]],["result"]]],[10,"emit_i32","","Emit a i32 value.",26,[[["self"],["i32"]],["result"]]],[10,"emit_i16","","Emit a i16 value.",26,[[["self"],["i16"]],["result"]]],[10,"emit_i8","","Emit a i8 value.",26,[[["self"],["i8"]],["result"]]],[10,"emit_bool","","Emit a bool value.",26,[[["self"],["bool"]],["result"]]],[10,"emit_f64","","Emit a f64 value.",26,[[["self"],["f64"]],["result"]]],[10,"emit_f32","","Emit a f32 value.",26,[[["self"],["f32"]],["result"]]],[10,"emit_char","","Emit a char value.",26,[[["self"],["char"]],["result"]]],[10,"emit_str","","Emit a string value.",26,[[["self"],["str"]],["result"]]],[10,"emit_enum","","Emit an enumeration value.",26,[[["self"],["str"],["f"]],["result"]]],[10,"emit_enum_variant","","Emit a enumeration variant value with no or unnamed data.",26,[[["self"],["str"],["usize"],["usize"],["f"]],["result"]]],[10,"emit_enum_variant_arg","","Emit an unnamed data item for an enumeration variant.",26,[[["self"],["usize"],["f"]],["result"]]],[10,"emit_enum_struct_variant","","Emit a enumeration variant value with no or named data.",26,[[["self"],["str"],["usize"],["usize"],["f"]],["result"]]],[10,"emit_enum_struct_variant_field","","Emit a named data item for an enumeration variant.",26,[[["self"],["str"],["usize"],["f"]],["result"]]],[10,"emit_struct","","Emit a struct value.",26,[[["self"],["str"],["usize"],["f"]],["result"]]],[10,"emit_struct_field","","Emit a field item for a struct.",26,[[["self"],["str"],["usize"],["f"]],["result"]]],[10,"emit_tuple","","Emit a tuple value.",26,[[["self"],["usize"],["f"]],["result"]]],[10,"emit_tuple_arg","","Emit a data item for a tuple.",26,[[["self"],["usize"],["f"]],["result"]]],[10,"emit_tuple_struct","","Emit a tuple struct value.",26,[[["self"],["str"],["usize"],["f"]],["result"]]],[10,"emit_tuple_struct_arg","","Emit a data item for a tuple struct.",26,[[["self"],["usize"],["f"]],["result"]]],[10,"emit_option","","Emit an optional value.",26,[[["self"],["f"]],["result"]]],[10,"emit_option_none","","Emit the `None` optional value.",26,[[["self"]],["result"]]],[10,"emit_option_some","","Emit the `Some(x)` optional value.",26,[[["self"],["f"]],["result"]]],[10,"emit_seq","","Emit a sequence of values.",26,[[["self"],["usize"],["f"]],["result"]]],[10,"emit_seq_elt","","Emit an element in a sequence.",26,[[["self"],["usize"],["f"]],["result"]]],[10,"emit_map","","Emit an associative container (map).",26,[[["self"],["usize"],["f"]],["result"]]],[10,"emit_map_elt_key","","Emit the key for an entry in a map.",26,[[["self"],["usize"],["f"]],["result"]]],[10,"emit_map_elt_val","","Emit the value for an entry in a map.",26,[[["self"],["usize"],["f"]],["result"]]],[8,"Decodable","","Trait for deserializing a type.",N,N],[10,"decode","","Deserialize a value using a `Decoder`.",27,[[["d"]],["result"]]],[8,"Encodable","","Trait for serializing a type.",N,N],[10,"encode","","Serialize a value using an `Encoder`.",28,[[["self"],["s"]],["result"]]],[8,"DecoderHelpers","","Trait with helper functions for implementing `Decodable`.",N,N],[10,"read_to_vec","","Read a sequence into a vector.",29,[[["self"],["f"]],["result",["vec"]]]],[8,"EncoderHelpers","","Trait with helper functions for implementing `Encodable`.",N,N],[10,"emit_from_vec","","Emit a vector as a sequence.",30,N]],"paths":[[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
searchIndex["same_file"]={"doc":"This crate provides a safe and simple cross platform way to determine whether two file paths refer to the same file or directory.","items":[[3,"Handle","same_file","A handle to a file that can be tested for equality with other handles.",N,N],[5,"is_same_file","","Returns true if the two file paths may correspond to the same file.",N,[[["p"],["q"]],["result",["bool"]]]],[11,"as_raw_fd","","",0,[[["self"]],["rawfd"]]],[11,"into_raw_fd","","",0,[[["self"]],["rawfd"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["handle"]],["bool"]]],[11,"ne","","",0,[[["self"],["handle"]],["bool"]]],[11,"from_path","","Construct a handle from a path.",0,[[["p"]],["result",["handle"]]]],[11,"from_file","","Construct a handle from a file.",0,[[["file"]],["result",["handle"]]]],[11,"stdin","","Construct a handle from stdin.",0,[[],["result",["handle"]]]],[11,"stdout","","Construct a handle from stdout.",0,[[],["result",["handle"]]]],[11,"stderr","","Construct a handle from stderr.",0,[[],["result",["handle"]]]],[11,"as_file","","Return a reference to the underlying file.",0,[[["self"]],["file"]]],[11,"as_file_mut","","Return a mutable reference to the underlying file.",0,[[["self"]],["file"]]],[11,"dev","","Return the underlying device number of this handle.",0,[[["self"]],["u64"]]],[11,"ino","","Return the underlying inode number of this handle.",0,[[["self"]],["u64"]]]],"paths":[[3,"Handle"]]};
searchIndex["shaman"]={"doc":"","items":[[0,"buffer","shaman","",N,N],[3,"RefReadBuffer","shaman::buffer","",N,N],[3,"OwnedReadBuffer","","",N,N],[3,"RefWriteBuffer","","",N,N],[3,"BorrowedWriteBuffer","","",N,N],[3,"OwnedWriteBuffer","","",N,N],[4,"BufferResult","","",N,N],[13,"BufferUnderflow","","",0,N],[13,"BufferOverflow","","",0,N],[8,"ReadBuffer","","",N,N],[10,"is_empty","","",1,[[["self"]],["bool"]]],[10,"is_full","","",1,[[["self"]],["bool"]]],[10,"remaining","","",1,[[["self"]],["usize"]]],[10,"capacity","","",1,[[["self"]],["usize"]]],[11,"position","","",1,[[["self"]],["usize"]]],[10,"rewind","","",1,[[["self"],["usize"]]]],[10,"truncate","","",1,[[["self"],["usize"]]]],[10,"reset","","",1,[[["self"]]]],[10,"peek_next","","",1,N],[11,"peek_remaining","","",1,N],[10,"take_next","","",1,N],[11,"take_remaining","","",1,N],[11,"push_to","","",1,[[["self"],["w"]]]],[8,"WriteBuffer","","",N,N],[10,"is_empty","","",2,[[["self"]],["bool"]]],[10,"is_full","","",2,[[["self"]],["bool"]]],[10,"remaining","","",2,[[["self"]],["usize"]]],[10,"capacity","","",2,[[["self"]],["usize"]]],[11,"position","","",2,[[["self"]],["usize"]]],[10,"rewind","","",2,[[["self"],["usize"]]]],[10,"reset","","",2,[[["self"]]]],[10,"peek_read_buffer","","",2,[[["self"]],["refreadbuffer"]]],[10,"take_next","","",2,N],[11,"take_remaining","","",2,N],[10,"take_read_buffer","","",2,[[["self"]],["refreadbuffer"]]],[11,"clone","","",0,[[["self"]],["bufferresult"]]],[11,"new","","",3,N],[11,"is_empty","","",3,[[["self"]],["bool"]]],[11,"is_full","","",3,[[["self"]],["bool"]]],[11,"remaining","","",3,[[["self"]],["usize"]]],[11,"capacity","","",3,[[["self"]],["usize"]]],[11,"rewind","","",3,[[["self"],["usize"]]]],[11,"truncate","","",3,[[["self"],["usize"]]]],[11,"reset","","",3,[[["self"]]]],[11,"peek_next","","",3,N],[11,"take_next","","",3,N],[11,"new","","",4,[[["vec",["u8"]]],["ownedreadbuffer"]]],[11,"new_with_len","","",4,[[["vec",["u8"]],["usize"]],["ownedreadbuffer"]]],[11,"into_write_buffer","","",4,[[["self"]],["ownedwritebuffer"]]],[11,"borrow_write_buffer","","",4,[[["self"]],["borrowedwritebuffer"]]],[11,"is_empty","","",4,[[["self"]],["bool"]]],[11,"is_full","","",4,[[["self"]],["bool"]]],[11,"remaining","","",4,[[["self"]],["usize"]]],[11,"capacity","","",4,[[["self"]],["usize"]]],[11,"rewind","","",4,[[["self"],["usize"]]]],[11,"truncate","","",4,[[["self"],["usize"]]]],[11,"reset","","",4,[[["self"]]]],[11,"peek_next","","",4,N],[11,"take_next","","",4,N],[11,"new","","",5,N],[11,"is_empty","","",5,[[["self"]],["bool"]]],[11,"is_full","","",5,[[["self"]],["bool"]]],[11,"remaining","","",5,[[["self"]],["usize"]]],[11,"capacity","","",5,[[["self"]],["usize"]]],[11,"rewind","","",5,[[["self"],["usize"]]]],[11,"reset","","",5,[[["self"]]]],[11,"peek_read_buffer","","",5,[[["self"]],["refreadbuffer"]]],[11,"take_next","","",5,N],[11,"take_read_buffer","","",5,[[["self"]],["refreadbuffer"]]],[11,"is_empty","","",6,[[["self"]],["bool"]]],[11,"is_full","","",6,[[["self"]],["bool"]]],[11,"remaining","","",6,[[["self"]],["usize"]]],[11,"capacity","","",6,[[["self"]],["usize"]]],[11,"rewind","","",6,[[["self"],["usize"]]]],[11,"reset","","",6,[[["self"]]]],[11,"peek_read_buffer","","",6,[[["self"]],["refreadbuffer"]]],[11,"take_next","","",6,N],[11,"take_read_buffer","","",6,[[["self"]],["refreadbuffer"]]],[11,"new","","",7,[[["vec",["u8"]]],["ownedwritebuffer"]]],[11,"into_read_buffer","","",7,[[["self"]],["ownedreadbuffer"]]],[11,"is_empty","","",7,[[["self"]],["bool"]]],[11,"is_full","","",7,[[["self"]],["bool"]]],[11,"remaining","","",7,[[["self"]],["usize"]]],[11,"capacity","","",7,[[["self"]],["usize"]]],[11,"rewind","","",7,[[["self"],["usize"]]]],[11,"reset","","",7,[[["self"]]]],[11,"peek_read_buffer","","",7,[[["self"]],["refreadbuffer"]]],[11,"take_next","","",7,N],[11,"take_read_buffer","","",7,[[["self"]],["refreadbuffer"]]],[0,"cryptoutil","shaman","",N,N],[3,"FixedBuffer64","shaman::cryptoutil","A fixed size buffer of 64 bytes useful for cryptographic operations.",N,N],[3,"FixedBuffer128","","A fixed size buffer of 128 bytes useful for cryptographic operations.",N,N],[5,"write_u64_be","","Write a u64 into a vector, which must be 8 bytes long. The value is written in big-endian format.",N,N],[5,"write_u64_le","","Write a u64 into a vector, which must be 8 bytes long. The value is written in little-endian format.",N,N],[5,"write_u64v_le","","Write a vector of u64s into a vector of bytes. The values are written in little-endian format.",N,N],[5,"write_u32_be","","Write a u32 into a vector, which must be 4 bytes long. The value is written in big-endian format.",N,N],[5,"write_u32_le","","Write a u32 into a vector, which must be 4 bytes long. The value is written in little-endian format.",N,N],[5,"write_u32v_le","","Write a vector of u32s into a vector of bytes. The values are written in little-endian format.",N,N],[5,"read_u64v_be","","Read a vector of bytes into a vector of u64s. The values are read in big-endian format.",N,N],[5,"read_u64v_le","","Read a vector of bytes into a vector of u64s. The values are read in little-endian format.",N,N],[5,"read_u32v_be","","Read a vector of bytes into a vector of u32s. The values are read in big-endian format.",N,N],[5,"read_u32v_le","","Read a vector of bytes into a vector of u32s. The values are read in little-endian format.",N,N],[5,"read_u32_le","","Read the value of a vector of bytes as a u32 value in little-endian format.",N,N],[5,"read_u32_be","","Read the value of a vector of bytes as a u32 value in big-endian format.",N,N],[5,"xor_keystream","","XOR plaintext and keystream, storing the result in dst.",N,N],[5,"copy_memory","","Copy bytes from src to dest",N,N],[5,"zero","","Zero all bytes in dst",N,N],[5,"symm_enc_or_dec","","symm_enc_or_dec() implements the necessary functionality to turn a SynchronousStreamCipher into an Encryptor or Decryptor",N,[[["s"],["r"],["w"]],["result",["bufferresult","symmetricciphererror"]]]],[5,"add_bytes_to_bits","","Adds the specified number of bytes to the bit count. panic!() if this would cause numeric overflow.",N,[[["u64"],["u64"]],["u64"]]],[5,"add_bytes_to_bits_tuple","","Adds the specified number of bytes to the bit count, which is a tuple where the first element is the high order value. panic!() if this would cause numeric overflow.",N,N],[8,"WriteExt","","An extension trait to implement a few useful serialization methods on types that implement Write",N,N],[10,"write_u8","","",8,[[["self"],["u8"]],["result"]]],[10,"write_u32_le","","",8,[[["self"],["u32"]],["result"]]],[10,"write_u32_be","","",8,[[["self"],["u32"]],["result"]]],[10,"write_u64_le","","",8,[[["self"],["u64"]],["result"]]],[10,"write_u64_be","","",8,[[["self"],["u64"]],["result"]]],[8,"FixedBuffer","","A FixedBuffer, likes its name implies, is a fixed size buffer. When the buffer becomes full, it must be processed. The input() method takes care of processing and then clearing the buffer automatically. However, other methods do not and require the caller to process the buffer. Any method that modifies the buffer directory or provides the caller with bytes that can be modifies results in those bytes being marked as used by the buffer.",N,N],[10,"input","","Input a vector of bytes. If the buffer becomes full, process it with the provided function and then clear the buffer.",9,N],[10,"reset","","Reset the buffer.",9,[[["self"]]]],[10,"zero_until","","Zero the buffer up until the specified index. The buffer position currently must not be greater than that index.",9,[[["self"],["usize"]]]],[10,"next","","Get a slice of the buffer of the specified size. There must be at least that many bytes remaining in the buffer.",9,N],[10,"full_buffer","","Get the current buffer. The buffer must already be full. This clears the buffer as well.",9,N],[10,"current_buffer","","Get the current buffer.",9,N],[10,"position","","Get the current position of the buffer.",9,[[["self"]],["usize"]]],[10,"remaining","","Get the number of bytes remaining in the buffer until it is full.",9,[[["self"]],["usize"]]],[10,"size","","Get the size of the buffer",9,[[["self"]],["usize"]]],[8,"StandardPadding","","The StandardPadding trait adds a method useful for various hash algorithms to a FixedBuffer struct.",N,N],[10,"standard_padding","","Add standard padding to the buffer. The buffer must not be full when this method is called and is guaranteed to have exactly rem remaining bytes when it returns. If there are not at least rem bytes available, the buffer will be zero padded, processed, cleared, and then filled with zeros again until only rem bytes are remaining.",10,[[["self"],["usize"],["f"]]]],[11,"clone","","",11,[[["self"]],["fixedbuffer64"]]],[11,"new","","Create a new buffer",11,[[],["fixedbuffer64"]]],[11,"input","","",11,N],[11,"reset","","",11,[[["self"]]]],[11,"zero_until","","",11,[[["self"],["usize"]]]],[11,"next","","",11,N],[11,"full_buffer","","",11,N],[11,"current_buffer","","",11,N],[11,"position","","",11,[[["self"]],["usize"]]],[11,"remaining","","",11,[[["self"]],["usize"]]],[11,"size","","",11,[[["self"]],["usize"]]],[11,"new","","Create a new buffer",12,[[],["fixedbuffer128"]]],[11,"input","","",12,N],[11,"reset","","",12,[[["self"]]]],[11,"zero_until","","",12,[[["self"],["usize"]]]],[11,"next","","",12,N],[11,"full_buffer","","",12,N],[11,"current_buffer","","",12,N],[11,"position","","",12,[[["self"]],["usize"]]],[11,"remaining","","",12,[[["self"]],["usize"]]],[11,"size","","",12,[[["self"]],["usize"]]],[0,"digest","shaman","",N,N],[8,"Digest","shaman::digest","The Digest trait specifies an interface common to digest functions, such as SHA-1 and the SHA-2 family of digest functions.",N,N],[10,"input","","Provide message data.",13,N],[10,"result","","Retrieve the digest result. This method may be called multiple times.",13,N],[10,"reset","","Reset the digest. This method must be called after result() and before supplying more data.",13,[[["self"]]]],[10,"output_bits","","Get the output size in bits.",13,[[["self"]],["usize"]]],[11,"output_bytes","","Get the output size in bytes.",13,[[["self"]],["usize"]]],[10,"block_size","","Get the block size in bytes.",13,[[["self"]],["usize"]]],[11,"input_str","","Convenience function that feeds a string into a digest.",13,[[["self"],["str"]]]],[11,"result_str","","Convenience function that retrieves the result of a digest as a String in hexadecimal format.",13,[[["self"]],["string"]]],[0,"sha1","shaman","An implementation of the SHA-1 cryptographic hash algorithm.",N,N],[3,"Sha1","shaman::sha1","Structure representing the state of a Sha1 computation",N,N],[5,"sha1_first","","Not an intrinsic, but gets the first element of a vector.",N,[[["u32x4"]],["u32"]]],[5,"sha1_first_add","","Not an intrinsic, but adds a word to the first element of a vector.",N,[[["u32"],["u32x4"]],["u32x4"]]],[5,"sha1_schedule_x4","","Performs 4 rounds of the message schedule update.",N,[[["u32x4"],["u32x4"],["u32x4"],["u32x4"]],["u32x4"]]],[5,"sha1_first_half","","Emulates `llvm.x86.sha1nexte` intrinsic.",N,[[["u32x4"],["u32x4"]],["u32x4"]]],[5,"sha1_digest_round_x4","","Emulates `llvm.x86.sha1rnds4` intrinsic. Performs 4 rounds of the message block digest.",N,[[["u32x4"],["u32x4"],["i8"]],["u32x4"]]],[5,"sha1_digest_block_u32","","Process a block with the SHA-1 algorithm.",N,N],[5,"sha1_digest_block","","Process a block with the SHA-1 algorithm. (See more...)",N,N],[11,"clone","","",14,[[["self"]],["sha1"]]],[11,"new","","Construct a `sha` object",14,[[],["sha1"]]],[11,"reset","","",14,[[["self"]]]],[11,"input","","",14,N],[11,"result","","",14,N],[11,"output_bits","","",14,[[["self"]],["usize"]]],[11,"block_size","","",14,[[["self"]],["usize"]]],[0,"sha2","shaman","An implementation of the SHA-2 cryptographic hash algorithms.",N,N],[3,"Sha512","shaman::sha2","The SHA-512 hash algorithm with the SHA-512 initial hash value.",N,N],[3,"Sha384","","The SHA-512 hash algorithm with the SHA-384 initial hash value. The result is truncated to 384 bits.",N,N],[3,"Sha512Trunc256","","The SHA-512 hash algorithm with the SHA-512/256 initial hash value. The result is truncated to 256 bits.",N,N],[3,"Sha512Trunc224","","The SHA-512 hash algorithm with the SHA-512/224 initial hash value. The result is truncated to 224 bits.",N,N],[3,"Sha256","","The SHA-256 hash algorithm with the SHA-256 initial hash value.",N,N],[3,"Sha224","","The SHA-256 hash algorithm with the SHA-224 initial hash value. The result is truncated to 224 bits.",N,N],[5,"sha256_schedule_x4","","Performs 4 rounds of the SHA-256 message schedule update.",N,[[["u32x4"],["u32x4"],["u32x4"],["u32x4"]],["u32x4"]]],[5,"sha256_digest_round_x2","","Emulates `llvm.x86.sha256rnds2` intrinsic.",N,[[["u32x4"],["u32x4"],["u32x4"]],["u32x4"]]],[5,"sha256_digest_block_u32","","Process a block with the SHA-256 algorithm.",N,N],[5,"sha256_digest_block","","Process a block with the SHA-256 algorithm. (See more...)",N,N],[5,"sha512_schedule_x2","","Performs 2 rounds of the SHA-512 message schedule update.",N,[[["u64x2"],["u64x2"],["u64x2"],["u64x2"]],["u64x2"]]],[5,"sha512_digest_round","","Performs one round of the SHA-512 message block digest.",N,[[["u64x2"],["u64x2"],["u64x2"],["u64x2"],["u64"]],["u64x2"]]],[5,"sha512_digest_block_u64","","Process a block with the SHA-512 algorithm.",N,N],[5,"sha512_digest_block","","Process a block with the SHA-512 algorithm. (See more...)",N,N],[17,"K64","","Constants necessary for SHA-512 family of digests.",N,N],[17,"K64X2","","Constants necessary for SHA-512 family of digests.",N,N],[17,"K32","","Constants necessary for SHA-256 family of digests.",N,N],[17,"K32X4","","Constants necessary for SHA-256 family of digests.",N,N],[11,"new","","Construct an new instance of a SHA-512 digest.",15,[[],["sha512"]]],[11,"input","","",15,N],[11,"result","","",15,N],[11,"reset","","",15,[[["self"]]]],[11,"output_bits","","",15,[[["self"]],["usize"]]],[11,"block_size","","",15,[[["self"]],["usize"]]],[11,"new","","Construct an new instance of a SHA-384 digest.",16,[[],["sha384"]]],[11,"input","","",16,N],[11,"result","","",16,N],[11,"reset","","",16,[[["self"]]]],[11,"output_bits","","",16,[[["self"]],["usize"]]],[11,"block_size","","",16,[[["self"]],["usize"]]],[11,"new","","Construct an new instance of a SHA-512/256 digest.",17,[[],["sha512trunc256"]]],[11,"input","","",17,N],[11,"result","","",17,N],[11,"reset","","",17,[[["self"]]]],[11,"output_bits","","",17,[[["self"]],["usize"]]],[11,"block_size","","",17,[[["self"]],["usize"]]],[11,"new","","Construct an new instance of a SHA-512/224 digest.",18,[[],["sha512trunc224"]]],[11,"input","","",18,N],[11,"result","","",18,N],[11,"reset","","",18,[[["self"]]]],[11,"output_bits","","",18,[[["self"]],["usize"]]],[11,"block_size","","",18,[[["self"]],["usize"]]],[11,"clone","","",19,[[["self"]],["sha256"]]],[11,"new","","Construct an new instance of a SHA-256 digest.",19,[[],["sha256"]]],[11,"input","","",19,N],[11,"result","","",19,N],[11,"reset","","",19,[[["self"]]]],[11,"output_bits","","",19,[[["self"]],["usize"]]],[11,"block_size","","",19,[[["self"]],["usize"]]],[11,"clone","","",20,[[["self"]],["sha224"]]],[11,"new","","Construct an new instance of a SHA-224 digest.",20,[[],["sha224"]]],[11,"input","","",20,N],[11,"result","","",20,N],[11,"reset","","",20,[[["self"]]]],[11,"output_bits","","",20,[[["self"]],["usize"]]],[11,"block_size","","",20,[[["self"]],["usize"]]]],"paths":[[4,"BufferResult"],[8,"ReadBuffer"],[8,"WriteBuffer"],[3,"RefReadBuffer"],[3,"OwnedReadBuffer"],[3,"RefWriteBuffer"],[3,"BorrowedWriteBuffer"],[3,"OwnedWriteBuffer"],[8,"WriteExt"],[8,"FixedBuffer"],[8,"StandardPadding"],[3,"FixedBuffer64"],[3,"FixedBuffer128"],[8,"Digest"],[3,"Sha1"],[3,"Sha512"],[3,"Sha384"],[3,"Sha512Trunc256"],[3,"Sha512Trunc224"],[3,"Sha256"],[3,"Sha224"]]};
searchIndex["strsim"]={"doc":"This library implements string similarity metrics.","items":[[4,"StrSimError","strsim","",N,N],[13,"DifferentLengthArgs","","",0,N],[5,"hamming","","Calculates the number of positions in the two strings where the characters differ. Returns an error if the strings have different lengths.",N,[[["str"],["str"]],["hammingresult"]]],[5,"jaro","","Calculates the Jaro similarity between two strings. The returned value is between 0.0 and 1.0 (higher value means more similar).",N,[[["str"],["str"]],["f64"]]],[5,"jaro_winkler","","Like Jaro but gives a boost to strings that have a common prefix.",N,[[["str"],["str"]],["f64"]]],[5,"levenshtein","","Calculates the minimum number of insertions, deletions, and substitutions required to change one string into the other.",N,[[["str"],["str"]],["usize"]]],[5,"osa_distance","","Like Levenshtein but allows for adjacent transpositions. Each substring can only be edited once.",N,[[["str"],["str"]],["usize"]]],[5,"damerau_levenshtein","","Like optimal string alignment, but substrings can be edited an unlimited number of times, and the triangle inequality holds.",N,[[["str"],["str"]],["usize"]]],[6,"HammingResult","","",N,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["strsimerror"]],["bool"]]]],"paths":[[4,"StrSimError"]]};
searchIndex["tabwriter"]={"doc":"This crate provides an implementation of  elastic tabstops.  It is a minimal port of Go's  tabwriter package.  Namely, its main mode of operation is to wrap a `Writer` and implement  elastic tabstops for the text written to the wrapped `Writer`.","items":[[3,"TabWriter","tabwriter","TabWriter wraps an arbitrary writer and aligns tabbed output.",N,N],[3,"IntoInnerError","","An error returned by `into_inner`.",N,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new `TabWriter` from an existing `Writer`.",0,[[["w"]],["tabwriter"]]],[11,"minwidth","","Set the minimum width of each column. That is, all columns will have at least the size given here. If a column is smaller than `minwidth`, then it is passed with spaces.",0,[[["self"],["usize"]],["tabwriter"]]],[11,"padding","","Set the padding between columns. All columns will be separated by at least the number of spaces indicated by `padding`. If `padding` is zero, then columns may run up against each other without any separation.",0,[[["self"],["usize"]],["tabwriter"]]],[11,"into_inner","","Unwraps this `TabWriter`, returning the underlying writer.",0,[[["self"]],["result",["intoinnererror"]]]],[11,"write","","",0,N],[11,"flush","","",0,[[["self"]],["result"]]],[11,"error","","Returns the error which caused the `into_error()` call to fail.",1,[[["self"]],["error"]]],[11,"into_inner","","Returns the `TabWriter` instance which generated the error.",1,[[["self"]],["w"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"cause","","",1,[[["self"]],["option",["error"]]]]],"paths":[[3,"TabWriter"],[3,"IntoInnerError"]]};
searchIndex["textwrap"]={"doc":"`textwrap` provides functions for word wrapping and filling text.","items":[[3,"NoHyphenation","textwrap","Use this as a [`Wrapper.splitter`] to avoid any kind of hyphenation:",N,N],[3,"HyphenSplitter","","Simple and default way to split words: splitting on existing hyphens only.",N,N],[3,"Wrapper","","A Wrapper holds settings for wrapping and filling text. Use it when the convenience [`wrap_iter`], [`wrap`] and [`fill`] functions are not flexible enough.",N,N],[12,"width","","The width in columns at which the text will be wrapped.",0,N],[12,"initial_indent","","Indentation used for the first line of output.",0,N],[12,"subsequent_indent","","Indentation used for subsequent lines of output.",0,N],[12,"break_words","","Allow long words to be broken if they cannot fit on a line. When set to `false`, some lines may be longer than `self.width`.",0,N],[12,"splitter","","The method for splitting words. If the `hyphenation` feature is enabled, you can use a `hyphenation::language::Corpus` here to get language-aware hyphenation.",0,N],[3,"IntoWrapIter","","An iterator over the lines of the input string which owns a `Wrapper`. An instance of `IntoWrapIter` is typically obtained through either [`wrap_iter`] or [`Wrapper::into_wrap_iter`].",N,N],[3,"WrapIter","","An iterator over the lines of the input string which borrows a `Wrapper`. An instance of `WrapIter` is typically obtained through the [`Wrapper::wrap_iter`] method.",N,N],[5,"fill","","Fill a line of text at `width` characters. Strings are wrapped based on their displayed width, not their size in bytes.",N,[[["str"],["usize"]],["string"]]],[5,"wrap","","Wrap a line of text at `width` characters. Strings are wrapped based on their displayed width, not their size in bytes.",N,[[["str"],["usize"]],["vec",["cow"]]]],[5,"wrap_iter","","Lazily wrap a line of text at `width` characters. Strings are wrapped based on their displayed width, not their size in bytes.",N,[[["str"],["usize"]],["intowrapiter",["hyphensplitter"]]]],[5,"indent","","Add prefix to each non-empty line.",N,[[["str"],["str"]],["string"]]],[5,"dedent","","Removes common leading whitespace from each line.",N,[[["str"]],["string"]]],[8,"WordSplitter","","An interface for splitting words.",N,N],[10,"split","","Return all possible splits of word. Each split is a triple with a head, a hyphen, and a tail where `head + &hyphen + &tail == word`. The hyphen can be empty if there is already a hyphen in the head.",1,[[["self"],["str"]],["vec"]]],[11,"clone","","",2,[[["self"]],["nohyphenation"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"split","","",2,[[["self"],["str"]],["vec"]]],[11,"clone","","",3,[[["self"]],["hyphensplitter"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"split","","",3,[[["self"],["str"]],["vec"]]],[11,"clone","","",0,[[["self"]],["wrapper"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new Wrapper for wrapping at the specified width. By default, we allow words longer than `width` to be broken. A [`HyphenSplitter`] will be used by default for splitting words. See the [`WordSplitter`] trait for other options.",0,[[["usize"]],["wrapper",["hyphensplitter"]]]],[11,"with_splitter","","Use the given [`WordSplitter`] to create a new Wrapper for wrapping at the specified width. By default, we allow words longer than `width` to be broken.",0,[[["usize"],["s"]],["wrapper"]]],[11,"initial_indent","","Change [`self.initial_indent`]. The initial indentation is used on the very first line of output.",0,[[["self"],["str"]],["wrapper"]]],[11,"subsequent_indent","","Change [`self.subsequent_indent`]. The subsequent indentation is used on lines following the first line of output.",0,[[["self"],["str"]],["wrapper"]]],[11,"break_words","","Change [`self.break_words`]. This controls if words longer than `self.width` can be broken, or if they will be left sticking out into the right margin.",0,[[["self"],["bool"]],["wrapper"]]],[11,"fill","","Fill a line of text at `self.width` characters. Strings are wrapped based on their displayed width, not their size in bytes.",0,[[["self"],["str"]],["string"]]],[11,"wrap","","Wrap a line of text at `self.width` characters. Strings are wrapped based on their displayed width, not their size in bytes.",0,[[["self"],["str"]],["vec",["cow"]]]],[11,"wrap_iter","","Lazily wrap a line of text at `self.width` characters. Strings are wrapped based on their displayed width, not their size in bytes.",0,[[["self"],["str"]],["wrapiter"]]],[11,"into_wrap_iter","","Lazily wrap a line of text at `self.width` characters. Strings are wrapped based on their displayed width, not their size in bytes.",0,[[["self"],["str"]],["intowrapiter"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"next","","",4,[[["self"]],["option",["cow"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"next","","",5,[[["self"]],["option",["cow"]]]]],"paths":[[3,"Wrapper"],[8,"WordSplitter"],[3,"NoHyphenation"],[3,"HyphenSplitter"],[3,"IntoWrapIter"],[3,"WrapIter"]]};
searchIndex["thread_local"]={"doc":"Per-object thread-local storage","items":[[3,"ThreadLocal","thread_local","Thread-local variable wrapper",N,N],[3,"IterMut","","Mutable iterator over the contents of a `ThreadLocal`.",N,N],[3,"IntoIter","","An iterator that moves out of a `ThreadLocal`.",N,N],[3,"CachedThreadLocal","","Wrapper around `ThreadLocal` which adds a fast path for a single thread.",N,N],[6,"CachedIterMut","","Mutable iterator over the contents of a `CachedThreadLocal`.",N,N],[6,"CachedIntoIter","","An iterator that moves out of a `CachedThreadLocal`.",N,N],[11,"default","","",0,[[],["threadlocal"]]],[11,"drop","","",0,[[["self"]]]],[11,"new","","Creates a new empty `ThreadLocal`.",0,[[],["threadlocal"]]],[11,"get","","Returns the element for the current thread, if it exists.",0,[[["self"]],["option"]]],[11,"get_or","","Returns the element for the current thread, or creates it if it doesn't exist.",0,[[["self"],["f"]],["t"]]],[11,"get_or_try","","Returns the element for the current thread, or creates it if it doesn't exist. If `create` fails, that error is returned and no element is added.",0,[[["self"],["f"]],["result"]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all threads.",0,[[["self"]],["itermut"]]],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`, effectively reseting it to its original state.",0,[[["self"]]]],[11,"into_iter","","",0,[[["self"]],["intoiter"]]],[11,"get_default","","Returns the element for the current thread, or creates a default one if it doesn't exist.",0,[[["self"]],["t"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"next","","",1,[[["self"]],["option",["box"]]]],[11,"size_hint","","",1,N],[11,"next","","",2,[[["self"]],["option",["box"]]]],[11,"size_hint","","",2,N],[11,"default","","",3,[[],["cachedthreadlocal"]]],[11,"new","","Creates a new empty `CachedThreadLocal`.",3,[[],["cachedthreadlocal"]]],[11,"get","","Returns the element for the current thread, if it exists.",3,[[["self"]],["option"]]],[11,"get_or","","Returns the element for the current thread, or creates it if it doesn't exist.",3,[[["self"],["f"]],["t"]]],[11,"get_or_try","","Returns the element for the current thread, or creates it if it doesn't exist. If `create` fails, that error is returned and no element is added.",3,[[["self"],["f"]],["result"]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all threads.",3,[[["self"]],["cacheditermut"]]],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`, effectively reseting it to its original state.",3,[[["self"]]]],[11,"into_iter","","",3,[[["self"]],["cachedintoiter"]]],[11,"get_default","","Returns the element for the current thread, or creates a default one if it doesn't exist.",3,[[["self"]],["t"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"ThreadLocal"],[3,"IterMut"],[3,"IntoIter"],[3,"CachedThreadLocal"]]};
searchIndex["time"]={"doc":"Simple time handling.","items":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision. This also allows for the negative duration; see individual methods for details.",N,N],[3,"OutOfRangeError","","Represents error when converting `Duration` to/from a standard library implementation",N,N],[3,"Timespec","","A record specifying a time value in seconds and nanoseconds, where nanoseconds represent the offset from the given second.",N,N],[12,"sec","","",0,N],[12,"nsec","","",0,N],[3,"PreciseTime","","An opaque structure representing a moment in time.",N,N],[3,"SteadyTime","","A structure representing a moment in time.",N,N],[3,"Tm","","Holds a calendar date and time broken down into its components (year, month, day, and so on), also called a broken-down time value.",N,N],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,N],[12,"tm_min","","Minutes after the hour - [0, 59]",1,N],[12,"tm_hour","","Hours after midnight - [0, 23]",1,N],[12,"tm_mday","","Day of the month - [1, 31]",1,N],[12,"tm_mon","","Months since January - [0, 11]",1,N],[12,"tm_year","","Years since 1900",1,N],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",1,N],[12,"tm_yday","","Days since January 1 - [0, 365]",1,N],[12,"tm_isdst","","Daylight Saving Time flag.",1,N],[12,"tm_utcoff","","Identifies the time zone that was used to compute this broken-down time value, including any adjustment for Daylight Saving Time. This is the number of seconds east of UTC. For example, for U.S. Pacific Daylight Time, the value is `-7*60*60 = -25200`.",1,N],[12,"tm_nsec","","Nanoseconds after the second - [0, 109 - 1]",1,N],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements Display.",N,N],[4,"ParseError","","",N,N],[13,"InvalidSecond","","",2,N],[13,"InvalidMinute","","",2,N],[13,"InvalidHour","","",2,N],[13,"InvalidDay","","",2,N],[13,"InvalidMonth","","",2,N],[13,"InvalidYear","","",2,N],[13,"InvalidDayOfWeek","","",2,N],[13,"InvalidDayOfMonth","","",2,N],[13,"InvalidDayOfYear","","",2,N],[13,"InvalidZoneOffset","","",2,N],[13,"InvalidTime","","",2,N],[13,"InvalidSecondsSinceEpoch","","",2,N],[13,"MissingFormatConverter","","",2,N],[13,"InvalidFormatSpecifier","","",2,N],[13,"UnexpectedCharacter","","",2,N],[5,"strptime","","Parses the time from the string according to the format string.",N,[[["str"],["str"]],["result",["tm","parseerror"]]]],[5,"get_time","","Returns the current time as a `timespec` containing the seconds and nanoseconds since 1970-01-01T00:00:00Z.",N,[[],["timespec"]]],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter in nanoseconds since an unspecified epoch.",N,[[],["u64"]]],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter in seconds since an unspecified epoch.",N,[[],["f64"]]],[5,"tzset","","",N,[[]]],[5,"empty_tm","","",N,[[],["tm"]]],[5,"at_utc","","Returns the specified time in UTC",N,[[["timespec"]],["tm"]]],[5,"now_utc","","Returns the current time in UTC",N,[[],["tm"]]],[5,"at","","Returns the specified time in the local timezone",N,[[["timespec"]],["tm"]]],[5,"now","","Returns the current time in the local timezone",N,[[],["tm"]]],[5,"strftime","","Formats the time according to the format string.",N,[[["str"],["tm"]],["result",["string","parseerror"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"clone","","",4,[[["self"]],["duration"]]],[11,"eq","","",4,[[["self"],["duration"]],["bool"]]],[11,"ne","","",4,[[["self"],["duration"]],["bool"]]],[11,"partial_cmp","","",4,[[["self"],["duration"]],["option",["ordering"]]]],[11,"lt","","",4,[[["self"],["duration"]],["bool"]]],[11,"le","","",4,[[["self"],["duration"]],["bool"]]],[11,"gt","","",4,[[["self"],["duration"]],["bool"]]],[11,"ge","","",4,[[["self"],["duration"]],["bool"]]],[11,"cmp","","",4,[[["self"],["duration"]],["ordering"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"weeks","","Makes a new `Duration` with given number of weeks. Equivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",4,[[["i64"]],["duration"]]],[11,"days","","Makes a new `Duration` with given number of days. Equivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",4,[[["i64"]],["duration"]]],[11,"hours","","Makes a new `Duration` with given number of hours. Equivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",4,[[["i64"]],["duration"]]],[11,"minutes","","Makes a new `Duration` with given number of minutes. Equivalent to `Duration::seconds(minutes * 60)` with overflow checks. Panics when the duration is out of bounds.",4,[[["i64"]],["duration"]]],[11,"seconds","","Makes a new `Duration` with given number of seconds. Panics when the duration is more than `i64::MAX` milliseconds or less than `i64::MIN` milliseconds.",4,[[["i64"]],["duration"]]],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",4,[[["i64"]],["duration"]]],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",4,[[["i64"]],["duration"]]],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",4,[[["i64"]],["duration"]]],[11,"span","","Runs a closure, returning the duration of time it took to run the closure.",4,[[["f"]],["duration"]]],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",4,[[["self"]],["i64"]]],[11,"num_days","","Returns the total number of whole days in the duration.",4,[[["self"]],["i64"]]],[11,"num_hours","","Returns the total number of whole hours in the duration.",4,[[["self"]],["i64"]]],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",4,[[["self"]],["i64"]]],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",4,[[["self"]],["i64"]]],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",4,[[["self"]],["i64"]]],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration, or `None` on overflow (exceeding 263 microseconds in either direction).",4,[[["self"]],["option",["i64"]]]],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration, or `None` on overflow (exceeding 263 nanoseconds in either direction).",4,[[["self"]],["option",["i64"]]]],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",4,[[["self"],["duration"]],["option",["duration"]]]],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",4,[[["self"],["duration"]],["option",["duration"]]]],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",4,[[],["duration"]]],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",4,[[],["duration"]]],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",4,[[],["duration"]]],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",4,[[["self"]],["bool"]]],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",4,[[["stdduration"]],["result",["duration","outofrangeerror"]]]],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",4,[[["self"]],["result",["stdduration","outofrangeerror"]]]],[11,"neg","","",4,[[["self"]],["duration"]]],[11,"add","","",4,[[["self"],["duration"]],["duration"]]],[11,"sub","","",4,[[["self"],["duration"]],["duration"]]],[11,"mul","","",4,[[["self"],["i32"]],["duration"]]],[11,"div","","",4,[[["self"],["i32"]],["duration"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"clone","","",5,[[["self"]],["outofrangeerror"]]],[11,"eq","","",5,[[["self"],["outofrangeerror"]],["bool"]]],[11,"ne","","",5,[[["self"],["outofrangeerror"]],["bool"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"description","","",5,[[["self"]],["str"]]],[11,"clone","","",0,[[["self"]],["timespec"]]],[11,"eq","","",0,[[["self"],["timespec"]],["bool"]]],[11,"ne","","",0,[[["self"],["timespec"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["timespec"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["timespec"]],["bool"]]],[11,"le","","",0,[[["self"],["timespec"]],["bool"]]],[11,"gt","","",0,[[["self"],["timespec"]],["bool"]]],[11,"ge","","",0,[[["self"],["timespec"]],["bool"]]],[11,"cmp","","",0,[[["self"],["timespec"]],["ordering"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,N],[11,"new","","",0,[[["i64"],["i32"]],["timespec"]]],[11,"add","","",0,[[["self"],["duration"]],["timespec"]]],[11,"sub","","",0,[[["self"],["duration"]],["timespec"]]],[11,"sub","","",0,[[["self"],["timespec"]],["duration"]]],[11,"clone","","",6,[[["self"]],["precisetime"]]],[11,"now","","Returns a `PreciseTime` representing the current moment in time.",6,[[],["precisetime"]]],[11,"to","","Returns a `Duration` representing the span of time from the value of `self` to the value of `later`.",6,[[["self"],["precisetime"]],["duration"]]],[11,"clone","","",7,[[["self"]],["steadytime"]]],[11,"partial_cmp","","",7,[[["self"],["steadytime"]],["option",["ordering"]]]],[11,"lt","","",7,[[["self"],["steadytime"]],["bool"]]],[11,"le","","",7,[[["self"],["steadytime"]],["bool"]]],[11,"gt","","",7,[[["self"],["steadytime"]],["bool"]]],[11,"ge","","",7,[[["self"],["steadytime"]],["bool"]]],[11,"cmp","","",7,[[["self"],["steadytime"]],["ordering"]]],[11,"eq","","",7,[[["self"],["steadytime"]],["bool"]]],[11,"ne","","",7,[[["self"],["steadytime"]],["bool"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",7,[[],["steadytime"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"sub","","",7,[[["self"],["steadytime"]],["duration"]]],[11,"sub","","",7,[[["self"],["duration"]],["steadytime"]]],[11,"add","","",7,[[["self"],["duration"]],["steadytime"]]],[11,"clone","","",1,[[["self"]],["tm"]]],[11,"eq","","",1,[[["self"],["tm"]],["bool"]]],[11,"ne","","",1,[[["self"],["tm"]],["bool"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"hash","","",1,N],[11,"add","","The resulting Tm is in UTC.",1,[[["self"],["duration"]],["tm"]]],[11,"sub","","The resulting Tm is in UTC.",1,[[["self"],["duration"]],["tm"]]],[11,"sub","","",1,[[["self"],["tm"]],["duration"]]],[11,"partial_cmp","","",1,[[["self"],["tm"]],["option",["ordering"]]]],[11,"cmp","","",1,[[["self"],["tm"]],["ordering"]]],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,[[["self"]],["timespec"]]],[11,"to_local","","Convert time to the local timezone",1,[[["self"]],["tm"]]],[11,"to_utc","","Convert time to the UTC",1,[[["self"]],["tm"]]],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO C, in the local timezone.",1,[[["self"]],["tmfmt"]]],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO C.",1,[[["self"]],["tmfmt"]]],[11,"strftime","","Formats the time according to the format string.",1,[[["self"],["str"]],["result",["tmfmt","parseerror"]]]],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,[[["self"]],["tmfmt"]]],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",1,[[["self"]],["tmfmt"]]],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is compatible with ISO 8601.",1,[[["self"]],["tmfmt"]]],[11,"eq","","",2,[[["self"],["parseerror"]],["bool"]]],[11,"ne","","",2,[[["self"],["parseerror"]],["bool"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"clone","","",2,[[["self"]],["parseerror"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"TmFmt"],[3,"Duration"],[3,"OutOfRangeError"],[3,"PreciseTime"],[3,"SteadyTime"]]};
searchIndex["tiny_keccak"]={"doc":"An implementation of the FIPS-202-defined SHA-3 and SHAKE functions.","items":[[3,"Keccak","tiny_keccak","This structure should be used to create keccak/sha3 hash.",N,N],[3,"XofReader","","",N,N],[5,"keccakf","","keccak-f[1600]",N,N],[5,"shake128","","",N,N],[5,"shake256","","",N,N],[5,"keccak224","","",N,N],[5,"keccak256","","",N,N],[5,"keccak384","","",N,N],[5,"keccak512","","",N,N],[5,"sha3_224","","",N,N],[5,"sha3_256","","",N,N],[5,"sha3_384","","",N,N],[5,"sha3_512","","",N,N],[11,"clone","","",0,[[["self"]],["self"]]],[11,"new","","",0,[[["usize"],["u8"]],["keccak"]]],[11,"new_shake128","","",0,[[],["keccak"]]],[11,"shake128","","",0,N],[11,"new_shake256","","",0,[[],["keccak"]]],[11,"shake256","","",0,N],[11,"new_keccak224","","",0,[[],["keccak"]]],[11,"keccak224","","",0,N],[11,"new_keccak256","","",0,[[],["keccak"]]],[11,"keccak256","","",0,N],[11,"new_keccak384","","",0,[[],["keccak"]]],[11,"keccak384","","",0,N],[11,"new_keccak512","","",0,[[],["keccak"]]],[11,"keccak512","","",0,N],[11,"new_sha3_224","","",0,[[],["keccak"]]],[11,"sha3_224","","",0,N],[11,"new_sha3_256","","",0,[[],["keccak"]]],[11,"sha3_256","","",0,N],[11,"new_sha3_384","","",0,[[],["keccak"]]],[11,"sha3_384","","",0,N],[11,"new_sha3_512","","",0,[[],["keccak"]]],[11,"sha3_512","","",0,N],[11,"update","","",0,N],[11,"keccakf","","",0,[[["self"]]]],[11,"finalize","","",0,N],[11,"absorb","","",0,N],[11,"pad","","",0,[[["self"]]]],[11,"fill_block","","",0,[[["self"]]]],[11,"squeeze","","",0,N],[11,"xof","","",0,[[["self"]],["xofreader"]]],[11,"squeeze","","",1,N]],"paths":[[3,"Keccak"],[3,"XofReader"]]};
searchIndex["ucd_util"]={"doc":"The `ucd-util` crate contains a smattering of utility functions that implement various algorithms specified by Unicode. There is no specific goal for exhaustiveness. Instead, implementations should be added on an as-needed basis.","items":[[5,"hangul_name","ucd_util","Return the character name of the given precomposed Hangul codepoint.",N,[[["u32"]],["option",["string"]]]],[5,"hangul_full_canonical_decomposition","","Return the full canonical decomposition of the given precomposed Hangul codepoint.",N,[[["u32"]],["option"]]],[5,"ideograph_name","","Return the character name of the given ideograph codepoint.",N,[[["u32"]],["option",["string"]]]],[5,"character_name_normalize","","Normalize the given character name in place according to UAX44-LM2.",N,[[["string"]]]],[5,"symbolic_name_normalize","","Normalize the given symbolic name in place according to UAX44-LM3.",N,[[["string"]]]],[5,"canonical_property_name","","Find the canonical property name for the given normalized property name.",N,[[["propertytable"],["str"]],["option",["str"]]]],[5,"property_values","","Find the set of possible property values for a given property.",N,[[["propertyvaluetable"],["str"]],["option",["propertyvalues"]]]],[5,"canonical_property_value","","Find the canonical property value for the given normalized property value.",N,[[["propertyvalues"],["str"]],["option",["str"]]]],[6,"PropertyTable","","The type of a property name table.",N,N],[6,"PropertyValueTable","","Type of a property value table.",N,N],[6,"PropertyValues","","A mapping of property values for a specific property.",N,N],[17,"RANGE_HANGUL_SYLLABLE","","A set of ranges that corresponds to the set of all Hangul syllable codepoints.",N,N],[17,"RANGE_IDEOGRAPH","","A set of ranges that corresponds to the set of all ideograph codepoints.",N,N]],"paths":[]};
searchIndex["unicode_width"]={"doc":"Determine displayed width of `char` and `str` types according to Unicode Standard Annex #11 rules.","items":[[17,"UNICODE_VERSION","unicode_width","The version of Unicode that this version of unicode-width is based on.",N,N],[8,"UnicodeWidthChar","","Methods for determining displayed width of Unicode characters.",N,N],[10,"width","","Returns the character's displayed width in columns, or `None` if the character is a control character other than `'\\x00'`.",0,[[["self"]],["option",["usize"]]]],[10,"width_cjk","","Returns the character's displayed width in columns, or `None` if the character is a control character other than `'\\x00'`.",0,[[["self"]],["option",["usize"]]]],[8,"UnicodeWidthStr","","Methods for determining displayed width of Unicode strings.",N,N],[10,"width","","Returns the string's displayed width in columns.",1,[[["self"]],["usize"]]],[10,"width_cjk","","Returns the string's displayed width in columns.",1,[[["self"]],["usize"]]]],"paths":[[8,"UnicodeWidthChar"],[8,"UnicodeWidthStr"]]};
searchIndex["utf8_ranges"]={"doc":"Crate `utf8-ranges` converts ranges of Unicode scalar values to equivalent ranges of UTF-8 bytes. This is useful for constructing byte based automatons that need to embed UTF-8 decoding.","items":[[3,"Utf8Range","utf8_ranges","A single inclusive range of UTF-8 bytes.",N,N],[12,"start","","Start of byte range (inclusive).",0,N],[12,"end","","End of byte range (inclusive).",0,N],[3,"Utf8Sequences","","An iterator over ranges of matching UTF-8 byte sequences.",N,N],[4,"Utf8Sequence","","Utf8Sequence represents a sequence of byte ranges.",N,N],[13,"One","","One byte range.",1,N],[13,"Two","","Two successive byte ranges.",1,N],[13,"Three","","Three successive byte ranges.",1,N],[13,"Four","","Four successive byte ranges.",1,N],[11,"clone","","",1,[[["self"]],["utf8sequence"]]],[11,"eq","","",1,[[["self"],["utf8sequence"]],["bool"]]],[11,"ne","","",1,[[["self"],["utf8sequence"]],["bool"]]],[11,"as_slice","","Returns the underlying sequence of byte ranges as a slice.",1,N],[11,"len","","Returns the number of byte ranges in this sequence.",1,[[["self"]],["usize"]]],[11,"matches","","Returns true if and only if a prefix of `bytes` matches this sequence of byte ranges.",1,N],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["utf8range"]]],[11,"eq","","",0,[[["self"],["utf8range"]],["bool"]]],[11,"ne","","",0,[[["self"],["utf8range"]],["bool"]]],[11,"matches","","Returns true if and only if the given byte is in this range.",0,[[["self"],["u8"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new iterator over UTF-8 byte ranges for the scalar value range given.",2,[[["char"],["char"]],["self"]]],[11,"next","","",2,[[["self"]],["option"]]]],"paths":[[3,"Utf8Range"],[4,"Utf8Sequence"],[3,"Utf8Sequences"]]};
searchIndex["vec_map"]={"doc":"A simple map based on a vector for small integer keys. Space requirements are O(highest integer key).","items":[[3,"VecMap","vec_map","A map optimized for small integer keys.",N,N],[3,"VacantEntry","","A vacant Entry.",N,N],[3,"OccupiedEntry","","An occupied Entry.",N,N],[3,"Iter","","An iterator over the key-value pairs of a map.",N,N],[3,"IterMut","","An iterator over the key-value pairs of a map, with the values being mutable.",N,N],[3,"Keys","","An iterator over the keys of a map.",N,N],[3,"Values","","An iterator over the values of a map.",N,N],[3,"ValuesMut","","An iterator over the values of a map.",N,N],[3,"IntoIter","","A consuming iterator over the key-value pairs of a map.",N,N],[3,"Drain","","A draining iterator over the key-value pairs of a map.",N,N],[4,"Entry","","A view into a single entry in a map, which may either be vacant or occupied.",N,N],[13,"Vacant","","A vacant Entry",0,N],[13,"Occupied","","An occupied Entry",0,N],[11,"default","","",1,[[],["self"]]],[11,"hash","","",1,[[["self"],["h"]]]],[11,"new","","Creates an empty `VecMap`.",1,[[],["self"]]],[11,"with_capacity","","Creates an empty `VecMap` with space for at least `capacity` elements before resizing.",1,[[["usize"]],["self"]]],[11,"capacity","","Returns the number of elements the `VecMap` can hold without reallocating.",1,[[["self"]],["usize"]]],[11,"reserve_len","","Reserves capacity for the given `VecMap` to contain `len` distinct keys. In the case of `VecMap` this means reallocations will not occur as long as all inserted keys are less than `len`.",1,[[["self"],["usize"]]]],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `VecMap` to contain `len` distinct keys. In the case of `VecMap` this means reallocations will not occur as long as all inserted keys are less than `len`.",1,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Trims the `VecMap` of any excess capacity.",1,[[["self"]]]],[11,"keys","","Returns an iterator visiting all keys in ascending order of the keys. The iterator's element type is `usize`.",1,[[["self"]],["keys"]]],[11,"values","","Returns an iterator visiting all values in ascending order of the keys. The iterator's element type is `&'r V`.",1,[[["self"]],["values"]]],[11,"values_mut","","Returns an iterator visiting all values in ascending order of the keys. The iterator's element type is `&'r mut V`.",1,[[["self"]],["valuesmut"]]],[11,"iter","","Returns an iterator visiting all key-value pairs in ascending order of the keys. The iterator's element type is `(usize, &'r V)`.",1,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator visiting all key-value pairs in ascending order of the keys, with mutable references to the values. The iterator's element type is `(usize, &'r mut V)`.",1,[[["self"]],["itermut"]]],[11,"append","","Moves all elements from `other` into the map while overwriting existing keys.",1,[[["self"],["self"]]]],[11,"split_off","","Splits the collection into two at the given key.",1,[[["self"],["usize"]],["self"]]],[11,"drain","","Returns an iterator visiting all key-value pairs in ascending order of the keys, emptying (but not consuming) the original `VecMap`. The iterator's element type is `(usize, &'r V)`. Keeps the allocated memory for reuse.",1,[[["self"]],["drain"]]],[11,"len","","Returns the number of elements in the map.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",1,[[["self"]],["bool"]]],[11,"clear","","Clears the map, removing all key-value pairs.",1,[[["self"]]]],[11,"get","","Returns a reference to the value corresponding to the key.",1,[[["self"],["usize"]],["option"]]],[11,"contains_key","","Returns true if the map contains a value for the specified key.",1,[[["self"],["usize"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",1,[[["self"],["usize"]],["option"]]],[11,"insert","","Inserts a key-value pair into the map. If the key already had a value present in the map, that value is returned. Otherwise, `None` is returned.",1,[[["self"],["usize"],["v"]],["option"]]],[11,"remove","","Removes a key from the map, returning the value at the key if the key was previously in the map.",1,[[["self"],["usize"]],["option"]]],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",1,[[["self"],["usize"]],["entry"]]],[11,"retain","","Retains only the elements specified by the predicate.",1,[[["self"],["f"]]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns a mutable reference to the value in the entry.",0,[[["self"],["v"]],["v"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty, and returns a mutable reference to the value in the entry.",0,[[["self"],["f"]],["v"]]],[11,"insert","","Sets the value of the entry with the VacantEntry's key, and returns a mutable reference to it.",2,[[["self"],["v"]],["v"]]],[11,"get","","Gets a reference to the value in the entry.",3,[[["self"]],["v"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",3,[[["self"]],["v"]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",3,[[["self"]],["v"]]],[11,"insert","","Sets the value of the entry with the OccupiedEntry's key, and returns the entry's old value.",3,[[["self"],["v"]],["v"]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",3,[[["self"]],["v"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone_from","","",1,[[["self"],["self"]]]],[11,"eq","","",1,[[["self"],["self"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["self"]],["option",["ordering"]]]],[11,"cmp","","",1,[[["self"],["self"]],["ordering"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"from_iter","","",1,[[["i"]],["self"]]],[11,"into_iter","","Returns an iterator visiting all key-value pairs in ascending order of the keys, consuming the original `VecMap`. The iterator's element type is `(usize, &'r V)`.",1,[[["self"]],["intoiter"]]],[11,"extend","","",1,[[["self"],["i"]]]],[11,"extend","","",1,[[["self"],["i"]]]],[11,"index","","",1,[[["self"],["usize"]],["v"]]],[11,"index","","",1,[[["self"],["usize"]],["v"]]],[11,"index_mut","","",1,[[["self"],["usize"]],["v"]]],[11,"index_mut","","",1,[[["self"],["usize"]],["v"]]],[11,"clone","","",4,[[["self"]],["iter"]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,N],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,N],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"clone","","",6,[[["self"]],["keys"]]],[11,"clone","","",7,[[["self"]],["values"]]],[11,"next","","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,N],[11,"next_back","","",8,[[["self"]],["option"]]],[11,"next","","",6,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",6,N],[11,"next_back","","",6,[[["self"]],["option",["usize"]]]],[11,"next","","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,N],[11,"next_back","","",7,[[["self"]],["option"]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,N],[11,"next_back","","",9,[[["self"]],["option"]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,N],[11,"next_back","","",10,[[["self"]],["option"]]]],"paths":[[4,"Entry"],[3,"VecMap"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"ValuesMut"],[3,"IntoIter"]]};
searchIndex["walkdir"]={"doc":"Crate `walkdir` provides an efficient and cross platform implementation of recursive directory traversal. Several options are exposed to control iteration, such as whether to follow symbolic links (default off), limit the maximum number of simultaneous open file descriptors and the ability to efficiently skip descending into directories.","items":[[5,"is_same_file","walkdir","Returns true if the two file paths may correspond to the same file.",N,[[["p"],["q"]],["result",["bool","error"]]]],[3,"WalkDir","","A builder to create an iterator for recursively walking a directory.",N,N],[3,"Iter","","An iterator for recursively descending into a directory.",N,N],[3,"DirEntry","","A directory entry.",N,N],[3,"IterFilterEntry","","A recursive directory iterator that skips entries.",N,N],[3,"Error","","An error produced by recursively walking a directory.",N,N],[6,"Result","","A result type for walkdir operations.",N,N],[8,"WalkDirIterator","","A trait for recursive directory iterators.",N,N],[10,"skip_current_dir","","Skips the current directory.",0,[[["self"]]]],[11,"filter_entry","","Yields only entries which satisfy the given predicate and skips descending into directories that do not satisfy the given predicate.",0,[[["self"],["p"]],["iterfilterentry"]]],[11,"new","","Create a builder for a recursive directory iterator starting at the file path `root`. If `root` is a directory, then it is the first item yielded by the iterator. If `root` is a file, then it is the first and only item yielded by the iterator. If `root` is a symlink, then it is always followed.",1,[[["p"]],["self"]]],[11,"min_depth","","Set the minimum depth of entries yielded by the iterator.",1,[[["self"],["usize"]],["self"]]],[11,"max_depth","","Set the maximum depth of entries yield by the iterator.",1,[[["self"],["usize"]],["self"]]],[11,"follow_links","","Follow symbolic links. By default, this is disabled.",1,[[["self"],["bool"]],["self"]]],[11,"max_open","","Set the maximum number of simultaneously open file descriptors used by the iterator.",1,[[["self"],["usize"]],["self"]]],[11,"sort_by","","Set a function for sorting directory entries.",1,[[["self"],["f"]],["self"]]],[11,"into_iter","","",1,[[["self"]],["iter"]]],[11,"next","","",2,[[["self"]],["option",["result"]]]],[11,"skip_current_dir","","",2,[[["self"]]]],[11,"path","","The full path that this entry represents.",3,[[["self"]],["path"]]],[11,"path_is_symbolic_link","","Returns `true` if and only if this entry was created from a symbolic link. This is unaffected by the `follow_links` setting.",3,[[["self"]],["bool"]]],[11,"metadata","","Return the metadata for the file that this entry points to.",3,[[["self"]],["result",["metadata"]]]],[11,"file_type","","Return the file type for the file that this entry points to.",3,[[["self"]],["filetype"]]],[11,"file_name","","Return the file name of this entry.",3,[[["self"]],["osstr"]]],[11,"depth","","Returns the depth at which this entry was created relative to the root.",3,[[["self"]],["usize"]]],[11,"ino","","Returns the underlying `d_ino` field in the contained `dirent` structure.",3,[[["self"]],["u64"]]],[11,"clone","","",3,[[["self"]],["direntry"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"next","","",4,[[["self"]],["option",["result"]]]],[11,"skip_current_dir","","",4,[[["self"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"path","","Returns the path associated with this error if one exists.",5,[[["self"]],["option",["path"]]]],[11,"loop_ancestor","","Returns the path at which a cycle was detected.",5,[[["self"]],["option",["path"]]]],[11,"depth","","Returns the depth at which this error occurred relative to the root.",5,[[["self"]],["usize"]]],[11,"description","","",5,[[["self"]],["str"]]],[11,"cause","","",5,[[["self"]],["option",["error"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]]],"paths":[[8,"WalkDirIterator"],[3,"WalkDir"],[3,"Iter"],[3,"DirEntry"],[3,"IterFilterEntry"],[3,"Error"]]};
searchIndex["xdg"]={"doc":"","items":[[3,"BaseDirectories","xdg","BaseDirectories allows to look up paths to configuration, data, cache and runtime files in well-known locations according to the [X Desktop Group Base Directory specification][xdg-basedir]. [xdg-basedir]: http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html",N,N],[3,"BaseDirectoriesError","","",N,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["basedirectories"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"cause","","",1,[[["self"]],["option",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"new","","Reads the process environment, determines the XDG base directories, and returns a value that can be used for lookup. The following environment variables are examined:",0,[[],["result",["basedirectories","basedirectorieserror"]]]],[11,"with_prefix","","Same as `new()`, but `prefix` is implicitly prepended to every path that is looked up.",0,[[["p"]],["result",["basedirectories","basedirectorieserror"]]]],[11,"with_profile","","Same as `with_prefix()`, with `profile` also implicitly prepended to every path that is looked up, but only for user-specific directories.",0,[[["p1"],["p2"]],["result",["basedirectories","basedirectorieserror"]]]],[11,"has_runtime_directory","","Returns `true` if `XDG_RUNTIME_DIR` is available, `false` otherwise.",0,[[["self"]],["bool"]]],[11,"place_config_file","","Given a relative path `path`, returns an absolute path in `XDG_CONFIG_HOME` where a configuration file may be stored. Leading directories in the returned path are pre-created; if that is not possible, an error is returned.",0,[[["self"],["p"]],["result",["pathbuf"]]]],[11,"place_data_file","","Like `place_config_file()`, but for a data file in `XDG_DATA_HOME`.",0,[[["self"],["p"]],["result",["pathbuf"]]]],[11,"place_cache_file","","Like `place_config_file()`, but for a cache file in `XDG_CACHE_HOME`.",0,[[["self"],["p"]],["result",["pathbuf"]]]],[11,"place_runtime_file","","Like `place_config_file()`, but for a runtime file in `XDG_RUNTIME_DIR`. If `XDG_RUNTIME_DIR` is not available, returns an error.",0,[[["self"],["p"]],["result",["pathbuf"]]]],[11,"find_config_file","","Given a relative path `path`, returns an absolute path to an existing configuration file, or `None`. Searches `XDG_CONFIG_HOME` and then `XDG_CONFIG_DIRS`.",0,[[["self"],["p"]],["option",["pathbuf"]]]],[11,"find_data_file","","Given a relative path `path`, returns an absolute path to an existing configuration file, or `None`. Searches `XDG_DATA_HOME` and then `XDG_DATA_DIRS`.",0,[[["self"],["p"]],["option",["pathbuf"]]]],[11,"find_cache_file","","Given a relative path `path`, returns an absolute path to an existing configuration file, or `None`. Searches `XDG_CACHE_HOME`.",0,[[["self"],["p"]],["option",["pathbuf"]]]],[11,"find_runtime_file","","Given a relative path `path`, returns an absolute path to an existing runtime file, or `None`. Searches `XDG_RUNTIME_DIR`. If `XDG_RUNTIME_DIR` is not available, returns `None`.",0,[[["self"],["p"]],["option",["pathbuf"]]]],[11,"create_config_directory","","Given a relative path `path`, returns an absolute path to a configuration directory in `XDG_CONFIG_HOME`. The directory and all directories leading to it are created if they did not exist; if that is not possible, an error is returned.",0,[[["self"],["p"]],["result",["pathbuf"]]]],[11,"create_data_directory","","Like `create_config_directory()`, but for a data directory in `XDG_DATA_HOME`.",0,[[["self"],["p"]],["result",["pathbuf"]]]],[11,"create_cache_directory","","Like `create_config_directory()`, but for a cache directory in `XDG_CACHE_HOME`.",0,[[["self"],["p"]],["result",["pathbuf"]]]],[11,"create_runtime_directory","","Like `create_config_directory()`, but for a runtime directory in `XDG_RUNTIME_DIR`. If `XDG_RUNTIME_DIR` is not available, returns an error.",0,[[["self"],["p"]],["result",["pathbuf"]]]],[11,"list_config_files","","Given a relative path `path`, list absolute paths to all files in directories with path `path` in `XDG_CONFIG_HOME` and `XDG_CONFIG_DIRS`.",0,[[["self"],["p"]],["vec",["pathbuf"]]]],[11,"list_config_files_once","","Like `list_config_files`, but only the first occurence of every distinct filename is returned.",0,[[["self"],["p"]],["vec",["pathbuf"]]]],[11,"list_data_files","","Given a relative path `path`, lists absolute paths to all files in directories with path `path` in `XDG_DATA_HOME` and `XDG_DATA_DIRS`.",0,[[["self"],["p"]],["vec",["pathbuf"]]]],[11,"list_data_files_once","","Like `list_data_files`, but only the first occurence of every distinct filename is returned.",0,[[["self"],["p"]],["vec",["pathbuf"]]]],[11,"list_cache_files","","Given a relative path `path`, lists absolute paths to all files in directories with path `path` in `XDG_CACHE_HOME`.",0,[[["self"],["p"]],["vec",["pathbuf"]]]],[11,"list_runtime_files","","Given a relative path `path`, lists absolute paths to all files in directories with path `path` in `XDG_RUNTIME_DIR`. If `XDG_RUNTIME_DIR` is not available, returns an empty `Vec`.",0,[[["self"],["p"]],["vec",["pathbuf"]]]],[11,"get_data_home","","Returns the user-specific data directory (set by `XDG_DATA_HOME`).",0,[[["self"]],["pathbuf"]]],[11,"get_config_home","","Returns the user-specific configuration directory (set by `XDG_CONFIG_HOME`).",0,[[["self"]],["pathbuf"]]],[11,"get_cache_home","","Returns the user-specific directory for non-essential (cached) data (set by `XDG_CACHE_HOME`).",0,[[["self"]],["pathbuf"]]],[11,"get_data_dirs","","Returns a preference ordered (preferred to less preferred) list of supplementary data directories, ordered by preference (set by `XDG_DATA_DIRS`).",0,[[["self"]],["vec",["pathbuf"]]]],[11,"get_config_dirs","","Returns a preference ordered (preferred to less preferred) list of supplementary configuration directories (set by `XDG_CONFIG_DIRS`).",0,[[["self"]],["vec",["pathbuf"]]]]],"paths":[[3,"BaseDirectories"],[3,"BaseDirectoriesError"]]};
initSearch(searchIndex);
